{"version":3,"sources":["vs/base/worker/fake","vs/base/worker/vs/loader.js","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/diff/diffChange.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/errors.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/arrays.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/functional.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/hash.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/diff/diff.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/iterator.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/keyCodes.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/lifecycle.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/linkedList.ts","vs/base/worker/vs/editor/common/standalone/promise-polyfill/polyfill.js","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/event.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/cancellation.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/platform.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/strings.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/types.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/uint.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/uri.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/common/worker/simpleWorker.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/characterClassifier.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/position.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/range.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/selection.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/core/token.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/diff/diffComputer.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/model/wordHelper.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/modes/linkComputer.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/modes/supports/inplaceReplaceSupport.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/standalone/standaloneEnums.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/standalone/standaloneBase.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/model/mirrorTextModel.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/editor/common/services/editorSimpleWorker.ts","vs/base/worker/file:/workspace/vscode/out-editor-src/vs/base/worker/workerMain.ts"],"names":["define","AMDLoader","__m","__M","deps","result","i","len","length","_amdLoaderGlobal","this","_commonjsGlobal","global","Environment","_detected","_isWindows","_isNode","_isElectronRenderer","_isWebWorker","Object","defineProperty","prototype","get","_detect","enumerable","configurable","module","exports","process","versions","electron","type","importScripts","navigator","userAgent","indexOf","platform","LoaderEvent","detail","timestamp","LoaderEventRecorder","loaderAvailableTimestamp","_events","record","push","Utilities","getHighPerformanceTimestamp","getEvents","NullLoaderEventRecorder","INSTANCE","fileUriToFilePath","isWindows","uri","decodeURI","replace","test","substr","startsWith","haystack","needle","endsWith","containsQueryString","url","isAbsolutePath","forEachProperty","obj","callback","key","hasOwnProperty","isEmpty","recursiveClone","Array","isArray","value","generateAnonymousModule","NEXT_ANONYMOUS_ID","isAnonymousModule","id","PERFORMANCE_NOW_PROBED","HAS_PERFORMANCE_NOW","performance","now","Date","ensureError","err","Error","message","String","stack","ConfigurationOptionsUtil","validateConfigurationOptions","options","baseUrl","isBuild","paths","config","catchError","recordStats","urlArgs","onError","phase","console","error","moduleId","neededBy","ignoreDuplicateModules","cspNonce","nodeModules","nodeCachedData","seed","writeDelay","path","undefined","mergeConfigurationOptions","overwrite","base","concat","key2","value2","Configuration","env","_env","_createIgnoreDuplicateModulesMap","_createNodeModulesMap","_createSortedPathsRules","nodeRequire","main","filename","isNode","nodeMain","dirnameIndex","Math","max","lastIndexOf","substring","ignoreDuplicateModulesMap","nodeModulesMap","create","_i","_a","nodeModule","_this","sortedPathsRules","from","to","sort","a","b","cloneAndMerge","getOptionsLiteral","_applyPaths","pathRule","j","lenJ","_addUrlArgsToUrl","_addUrlArgsIfNecessaryToUrl","_addUrlArgsIfNecessaryToUrls","urls","moduleIdToPaths","results","requireToUrl","isDuplicateMessageIgnoredFor","getConfigForModule","shouldCatchError","shouldRecordStats","OnlyOnceScriptLoader","_scriptLoader","_callbackMap","load","moduleManager","scriptSrc","errorback","isWebWorker","WorkerScriptLoader","NodeScriptLoader","BrowserScriptLoader","scriptCallbacks","triggerCallback","triggerErrorback","attachListeners","script","unbind","removeEventListener","loadEventListener","errorEventListener","e","addEventListener","document","createElement","setAttribute","getConfig","getElementsByTagName","appendChild","_didInitialize","_didPatchNodeRequire","_init","_fs","_vm","_path","_crypto","_initNodeRequire","that","Module","_compile","content","hashData","scriptSource","wrap","recorder","getRecorder","cachedDataPath","_getCachedDataPath","data","readFileSync","slice","cachedData","_e","Script","compileWrapper","runInThisContext","dirname","require","mod","constructor","resolve","request","_resolveFilename","mainModule","extensions","_extensions","cache","_cache","makeRequireFunction","args","Buffer","apply","_handleCachedData","_verifyCachedData","opts","nodeInstrumenter","c","pieces","split","moduleExports_1","enqueueDefineAnonymousModule","normalizedScriptSrc_1","normalize","vmScriptPathOrUri_1","_getElectronRendererScriptPathOrUri","wantsCachedData_1","Boolean","cachedDataPath_1","_readSourceAndCachedData","charCodeAt","_BOM","_PREFIX","_SUFFIX","scriptOpts","_createAndEvalScript","contents","ret","globalDefineFunc","getGlobalAMDDefineFunc","receivedDefineCall","localDefineFunc","arguments","amd","call","getGlobalAMDRequireFunc","isElectronRenderer","driveLetterMatch","match","toUpperCase","hash","createHash","update","digest","basename","join","createCachedData","cachedDataRejected","unlink","_createAndWriteCachedData","timeout","ceil","random","lastSize","iteration","createLoop","setTimeout","writeFile","pow","sourcePath","source_1","cachedData_1","hashData_1","steps_1","step_1","readFile","encoding","hashDataNow","equals","warn","createScriptLoader","ModuleIdResolver","fromModuleId","lastSlash","fromModulePath","_normalizeModuleId","pattern","r","resolveModule","ROOT","strId","dependencies","moduleIdResolver","_callback","_errorback","exportsPassedIn","unresolvedDependenciesCount","_isComplete","_safeInvokeFunction","returnedValue","producedError","_invokeFactory","strModuleId","dependenciesValues","complete","onDependencyError","isComplete","ModuleIdProvider","_nextId","_strModuleIdToIntModuleId","Map","_intModuleIdToStrModuleId","getModuleId","getMaxModuleId","set","getStrModuleId","RegularDependency","EXPORTS","MODULE","REQUIRE","PluginDependency","pluginId","pluginParam","ModuleManager","scriptLoader","defineFunc","requireFunc","_loaderAvailableTimestamp","_defineFunc","_requireFunc","_moduleIdProvider","_config","_modules2","_knownModules2","_inverseDependencies2","_inversePluginDependencies2","_currentAnnonymousDefineCall","_recorder","_buildInfoPath","_buildInfoDefineStack","_buildInfoDependencies","reset","_findRelevantLocationInStack","str","normalizedPath","stackPieces","m","stackPath","stackLine","stackColumn","trimPathOffset","line","parseInt","col","getBuildInfo","resultLen","location_1","defineStack","defineLocation","shim","getLoaderEvents","defineModule","_normalizeDependencies","map","dep","_resolve","_normalizeDependency","dependency","bangIndex","strPluginId","dependencyId","_relativeRequire","synchronousRequire","_strModuleId","configure","params","shouldOverwrite","oldShouldRecordStats","_onLoad","defineCall","_createLoadError","_err","intModuleId","_onLoadError","seenModuleId","someoneNotified","queue","queueElement","shift","inverseDeps","inverseDep","_hasDependencyPath","fromId","toId","inQueue","dependencyModule","_findCyclePath","depth","_createRequire","toUrl","getStats","__$__nodeRequire","_loadModule","lastPathIndex","loadNextPath","currentPath_1","recorder_1","_loadPluginDependency","plugin","pluginDependency","cyclePath","reverse","inversePluginDeps","_onModuleComplete","inverseDependencyId","inverseDependency","delete","DefineFunc","jQuery","_requireFunc_config","RequireFunc","init","_nodeRequire_1","what","doNotInitLoader","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","ErrorHandler","listeners","unexpectedErrorHandler","addListener","listener","_removeListener","emit","forEach","splice","setUnexpectedErrorHandler","newUnexpectedErrorHandler","getUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","errorHandler","isPromiseCanceledError","transformErrorForSerialization","$isError","name","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","getErrorMessage","NotImplementedError","_super","__extends","findFirstInSorted","array","p","low","high","mid","floor","mergeSort","compare","_sort","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","element","pop","firstIndex","fn","tail","tail2","arr","one","other","itemEquals","binarySearch","comparator","comp","groupBy","currentGroup","delta","removed","added","splices_1","top","topAsync","batch","token","Promise","reject","__awaiter","o","min","sent","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","isNonEmptyArray","distinct","keyFn","position","seen","elem","distinctES6","Set","has","add","fromSet","uniqueFilter","lastIndex","first","notFoundValue","index","firstOrDefault","commonPrefixLength","flatten","range","arg","fill","num","indexer","merger","t","reduce","insert","arrayInsert","target","insertIndex","insertArr","shuffle","_seed","rand","seed_1","x","sin","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","asArray","once","didCall","hashVal","numberHash","initialHashVal","item","keys","stringHash","objectHash","booleanHash","val","s","length_1","Hasher","_value","StringDiffSequence","source","getElements","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","diffChange_1","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_getElements","originalStringElements","originalElementsOrHash","originalHasStrings","_b","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","sequence","elements","hashes","hash_1","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","matchLengthOfLongest","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","Iterator","FIN","done","_empty","next","empty","single","fromArray","fromNativeIterator","it","iterator","collect","atMost","Number","POSITIVE_INFINITY","iterators","chain","ChainableIterator","getSequenceIterator","ArrayIterator","end","current","ArrayNavigator","previous","last","parent","MappedIterator","MappedNavigator","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","createSimpleKeybinding","keybinding","OS","ctrlCmd","winCtrl","SimpleKeybinding","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","KeyCodeUtils","toString","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","KeyChord","firstPart","secondPart","createKeybinding","chordPart","ChordKeybinding","ctrlKey","shiftKey","altKey","metaKey","getHashCode","isModifierKey","toChord","isDuplicateModifierCase","parts","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","trackDisposable","log","dispose","disposables","d","isDisposable","thing","combinedDisposable","toDisposable","self","DisposableStore","_toDispose","_isDisposed","clear","_store","_register","freeze","MutableDisposable","ReferenceCollection","references","acquire","reference","counter","object","createReferencedObject","functional_1","destroyReferencedObject","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","iterator_1","toArray","factory","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","onFirstListenerAdd","fire","onLastListenerRemove","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","latch","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","onFirstListenerDidAdd","ChainableEvent","on","fromNodeEventEmitter","eventName","removeListener","fromDOMEventEmitter","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","_warnCountdown","_stacks","check","listenerCount","threshold","count","topStack_1","topCount_1","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","removeMonitor","remove","onListenerDidAdd","size","_noop","_deliveryQueue","iter","event_1","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","pause","resume","AsyncEmitter","fireAsync","promiseJoin","_asyncDeliveryQueue","this_1","data_1","thenables","event_2","__assign","waitUntil","isFrozen","all","catch","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","wrapEvent","bufferEvents","Relay","listening","inputEvent","inputEventListener","CancellationToken","shortcutEvent","context","bind","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","_parentListener","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","maxTouchPoints","language","PlatformToString","_platform","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","translationsConfigFile","_globals","globals","setImmediate","postMessage","pending_1","vscodeSetImmediateId","candidate","lastId_1","myId","_promise","isFalsyOrWhitespace","trim","pad","l","char","_formatRegexp","escapeRegExpCharacters","ltrim","needleLen","offset","rtrim","haystackLen","isLowerAsciiLetter","code","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","diff","fromCharCode","substrEquals","aStart","aEnd","bStart","bEnd","isHighSurrogate","charCode","isLowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","endOffset","prevCodePoint","prevGraphemeBreakType","format","group","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","overlap","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","Uint8Array","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","containsFullWidthCharacter","isEmojiImprecise","lcut","text","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","removeAccents","regex_1","UTF8_BOM_CHARACTER","stripUTF8BOM","safeBtoa","btoa","encodeURIComponent","repeat","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","getNLines","singleLetterHash","_data","_INSTANCE","nodeCount","nodeIndex","_typeof","number","string","function","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","every","isNumber","isBoolean","assertType","assertIsDefined","assertAllDefined","isFunction","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","methodNames_1","methodName","withNullAsUndefined","withUndefinedAsNull","toUint32","v","toUint8","toUint32Array","Uint32Array","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","isUri","fsPath","with","_makeFsPath","_URI","percentDecode","file","platform_1","components","skipEncoding","_asFormatted","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","escaped","encodeURIComponentMinimal","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","INITIALIZE","webWorkerWarningLogged","logOnceWebWorkerWarning","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","req","_send","vsWorker","handleMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","transfer","ArrayBuffer","SimpleWorkerClient","workerFactory","host","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","requirejs","contexts","hostMethods","types","_onModuleLoaded","stringify","proxyMethodRequest","_request","_lazyProxy","availableMethods","_onError","getProxyObject","info","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","onmessage","initialize","loaderConfig","hostProxy","vs","CharacterClassifier","_defaultValue","defaultValue","uint_1","_asciiMap","_createAsciiMap","_map","asciiMap","CharacterSet","_actual","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","lift","isIPosition","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","position_1","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","range_1","Token","TokenizationResult","tokens","endState","TokenizationResult2","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","diff_1","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","shouldMakePrettyDiff","continueLineDiff","createContinueProcessingPredicate","maxComputationTime","diffResult","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","strings","maximumRuntime","startTime","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","USUAL_WORD_SEPARATORS_1","sep","createWordRegExp","ensureValidWordDefinition","wordDefinition","flags","getWordAtText","textOffset","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","computeLinks","model","stateMachine","characterClassifier_1","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","finallyConstructor","reason","setTimeoutFunc","noop","TypeError","_state","_handled","_deferreds","doResolve","deferred","_immediateFn","cb","onFulfilled","onRejected","newValue","finale","thisArg","_unhandledRejectionFn","Handler","ex","prom","remaining","race","values","globalNS","window","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","KeyMod","chord","keyCodes_1","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","cancellation_1","standaloneEnums","selection_1","Uri","uri_1","token_1","PrefixSumIndexOfResult","remainder","PrefixSumComputer","prefixSum","prefixSumValidIndex","getCount","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","midStop","midStart","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","_ensureLineStarts","eolLength","linesLength","lineStartValues","prefixSumComputer_1","_setLineText","lineIndex","insertText","insertLines","newLengths","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","wordHelper_1","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","mirrorTextModel_1","EditorSimpleWorker","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","_getModel","_getModels","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","originalUrl","modifiedUrl","ignoreTrimWhitespace","diffComputer","diffComputer_1","identical","_modelsAreIdentical","originalLineCount","computeDirtyDiff","computeMoreMinimalEdits","modelUrl","edits","lastEol","arrays_1","edits_1","_diffLimit","editOffset","newEdit","linkComputer_1","textualSuggest","wordDef","wordDefFlags","wordDefRegExp","wordAt","_suggestionsLimit","computeWordRanges","words_1","selectionText","wordRange","inplaceReplaceSupport_1","loadForeignModule","createData","foreignHostMethods","ctx","fhr","getMirrorModels","foreignModule","fmr","monaco","standaloneBase_1","MonacoEnvironment","monacoBaseUrl","isFirstMessage","beforeReadyMessages","ws","messageHandler"],"mappings":";;;;;;CAAA;AACA,IC4pDAA,EACAC,ED7pDAC,EAAA,CAAA,UAAA,UAAA,iCAAA,wBAAA,8BAAA,0BAAA,2BAAA,sBAAA,4BAAA,uBAAA,2BAAA,qBAAA,0BAAA,uBAAA,iCAAA,yBAAA,0BAAA,sBAAA,4BAAA,yCAAA,4CAAA,wBAAA,8BAAA,kCAAA,8BAAA,qCAAA,oCAAA,sCAAA,wDAAA,8CAAA,6CAAA,+CAAA,wDAAA,qCAAA,gDACAC,EAAA,SAAAC;AAEA,IADA,IAAAC,EAAA,GACAC,EAAA,EAAAC,EAAAH,EAAAI,OAAAF,EAAAC,EAAAD,IACAD,EAAAC,GAAAJ,EAAAE,EAAAE,IAEA,OAAAD,GCaAI,EAAAC,KACAC,EAAA,iBAAAC,OAAAA,OAAA,IAEA,SAAAX,GACAA,EAAAW,OAAAH,EACA,IAAAI,EAAA,WACA,SAAAA,IACAH,KAAAI,WAAA,EACAJ,KAAAK,YAAA,EACAL,KAAAM,SAAA,EACAN,KAAAO,qBAAA,EACAP,KAAAQ,cAAA,EAuDA,OArDAC,OAAAC,eAAAP,EAAAQ,UAAA,YAAA,CACAC,IAAA,WAEA,OADAZ,KAAAa,UACAb,KAAAK,YAEAS,YAAA,EACAC,cAAA,IAEAN,OAAAC,eAAAP,EAAAQ,UAAA,SAAA,CACAC,IAAA,WAEA,OADAZ,KAAAa,UACAb,KAAAM,SAEAQ,YAAA,EACAC,cAAA,IAEAN,OAAAC,eAAAP,EAAAQ,UAAA,qBAAA,CACAC,IAAA,WAEA,OADAZ,KAAAa,UACAb,KAAAO,qBAEAO,YAAA,EACAC,cAAA,IAEAN,OAAAC,eAAAP,EAAAQ,UAAA,cAAA,CACAC,IAAA,WAEA,OADAZ,KAAAa,UACAb,KAAAQ,cAEAM,YAAA,EACAC,cAAA,IAEAZ,EAAAQ,UAAAE,QAAA,WACAb,KAAAI,YAGAJ,KAAAI,WAAA,EACAJ,KAAAK,WAAAF,EAAAE,aACAL,KAAAM,QAAA,oBAAAU,UAAAA,OAAAC;AACAjB,KAAAO,oBAAA,oBAAAW,cAAA,IAAAA,QAAAC,eAAA,IAAAD,QAAAC,SAAAC,UAAA,aAAAF,QAAAG,KACArB,KAAAQ,aAAA,mBAAAjB,EAAAW,OAAAoB,gBAEAnB,EAAAE,WAAA,WACA,SAAA,oBAAAkB,WACAA,UAAAC,WAAAD,UAAAC,UAAAC,QAAA,YAAA,IAIA,oBAAAP,SACA,UAAAA,QAAAQ,UAIAvB,EA7DA,GA+DAZ,EAAAY,YAAAA,EAjEA,CAkEAZ,IAAAA,EAAA,KAMA,SAAAA,GACA,IAAAoC,EACA,SAAAN,EAAAO,EAAAC,GACA7B,KAAAqB,KAAAA,EACArB,KAAA4B,OAAAA,EACA5B,KAAA6B,UAAAA,GAIAtC,EAAAoC,YAAAA,EACA,IAAAG,EAAA,WACA,SAAAA,EAAAC,GACA/B,KAAAgC,QAAA,CAAA,IAAAL,EAAA,EAAA,GAAAI,IAQA,OANAD,EAAAnB,UAAAsB,OAAA,SAAAZ,EAAAO,GACA5B,KAAAgC,QAAAE,KAAA,IAAAP,EAAAN,EAAAO,EAAArC,EAAA4C,UAAAC,iCAEAN,EAAAnB,UAAA0B,UAAA,WACA,OAAArC,KAAAgC,SAEAF,EAVA,GAYAvC,EAAAuC,oBAAAA,EACA,IAAAQ,EAAA,WACA,SAAAA,KASA,OAPAA,EAAA3B,UAAAsB,OAAA,SAAAZ,EAAAO,KAGAU,EAAA3B,UAAA0B,UAAA,WACA,MAAA,IAEAC,EAAAC,SAAA,IAAAD,EACAA,EAVA,GAYA/C,EAAA+C,wBAAAA,EAnCA,CAoCA/C,IAAAA,EAAA,KAMA,SAAAA,GACA,IAAA4C,EAAA,WACA,SAAAA;AAwFA,OAnFAA,EAAAK,kBAAA,SAAAC,EAAAC,GAEA,GADAA,EAAAC,UAAAD,GAAAE,QAAA,OAAA,KACAH,EAAA,CACA,GAAA,eAAAI,KAAAH,GAEA,OAAAA,EAAAI,OAAA,GAEA,GAAA,aAAAD,KAAAH,GACA,OAAAA,EAAAI,OAAA,QAIA,GAAA,aAAAD,KAAAH,GACA,OAAAA,EAAAI,OAAA,GAIA,OAAAJ,GAEAP,EAAAY,WAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAlD,QAAAmD,EAAAnD,QAAAkD,EAAAF,OAAA,EAAAG,EAAAnD,UAAAmD,GAEAd,EAAAe,SAAA,SAAAF,EAAAC,GACA,OAAAD,EAAAlD,QAAAmD,EAAAnD,QAAAkD,EAAAF,OAAAE,EAAAlD,OAAAmD,EAAAnD,UAAAmD,GAGAd,EAAAgB,oBAAA,SAAAC,GACA,MAAA,cAAAP,KAAAO,IAKAjB,EAAAkB,eAAA,SAAAD,GACA,MAAA,+CAAAP,KAAAO,IAEAjB,EAAAmB,gBAAA,SAAAC,EAAAC,GACA,GAAAD,EAAA,CACA,IAAAE,OAAA,EACA,IAAAA,KAAAF,EACAA,EAAAG,eAAAD,IACAD,EAAAC,EAAAF,EAAAE,MAKAtB,EAAAwB,QAAA,SAAAJ,GACA,IAAAI,GAAA,EAIA,OAHAxB,EAAAmB,gBAAAC,GAAA,WACAI,GAAA,KAEAA,GAEAxB,EAAAyB,eAAA,SAAAL,GACA,IAAAA,GAAA,iBAAAA,EACA,OAAAA,EAEA,IAAA5D,EAAAkE,MAAAC,QAAAP,GAAA,GAAA,GASA,OARApB,EAAAmB,gBAAAC,GAAA,SAAAE,EAAAM,GAEApE,EAAA8D,GADAM,GAAA,iBAAAA,EACA5B,EAAAyB,eAAAG,GAGAA,KAGApE,GAEAwC,EAAA6B,wBAAA,WACA,MAAA,eAAA7B,EAAA8B,oBAAA;AAEA9B,EAAA+B,kBAAA,SAAAC,GACA,OAAAhC,EAAAY,WAAAoB,EAAA,iBAEAhC,EAAAC,4BAAA,WAKA,OAJApC,KAAAoE,yBACApE,KAAAoE,wBAAA,EACApE,KAAAqE,oBAAA9E,EAAAW,OAAAoE,aAAA,mBAAA/E,EAAAW,OAAAoE,YAAAC,KAEAvE,KAAAqE,oBAAA9E,EAAAW,OAAAoE,YAAAC,MAAAC,KAAAD,OAEApC,EAAA8B,kBAAA,EACA9B,EAAAiC,wBAAA,EACAjC,EAAAkC,qBAAA,EACAlC,EAzFA,GA2FA5C,EAAA4C,UAAAA,EA5FA,CA6FA5C,IAAAA,EAAA,KAMA,SAAAA,GACA,SAAAkF,EAAAC,GACA,GAAAA,aAAAC,MACA,OAAAD,EAEA,IAAA/E,EAAA,IAAAgF,MAAAD,EAAAE,SAAAC,OAAAH,IAAA,iBAIA,OAHAA,EAAAI,QACAnF,EAAAmF,MAAAJ,EAAAI,OAEAnF,EAEAJ,EAAAkF,YAAAA,EAEA,IAAAM,EAAA,WACA,SAAAA,KAgGA,OA3FAA,EAAAC,6BAAA,SAAAC,GAsDA,GAtCA,iBADAA,EAAAA,GAAA,IACAC,UACAD,EAAAC,QAAA,IAEA,kBAAAD,EAAAE,UACAF,EAAAE,SAAA,GAEA,iBAAAF,EAAAG,QACAH,EAAAG,MAAA,IAEA,iBAAAH,EAAAI,SACAJ,EAAAI,OAAA,SAEA,IAAAJ,EAAAK,aACAL,EAAAK,YAAA,QAEA,IAAAL,EAAAM,cACAN,EAAAM,aAAA,GAEA,iBAAAN,EAAAO,UACAP,EAAAO,QAAA;AAEA,mBAAAP,EAAAQ,UACAR,EAAAQ,QArCA,SAAAf,GACA,MAAA,YAAAA,EAAAgB,OACAC,QAAAC,MAAA,YAAAlB,EAAAmB,SAAA,YACAF,QAAAC,MAAAlB,GACAiB,QAAAC,MAAA,gDACAD,QAAAC,MAAAlB,EAAAoB,WAGA,YAAApB,EAAAgB,OACAC,QAAAC,MAAA,0BAAAlB,EAAAmB,SAAA,kCACAF,QAAAC,MAAAlB,SAFA,IA+BAb,MAAAC,QAAAmB,EAAAc,0BACAd,EAAAc,uBAAA,IAEAd,EAAAC,QAAApF,OAAA,IACAP,EAAA4C,UAAAe,SAAA+B,EAAAC,QAAA,OACAD,EAAAC,SAAA,MAGA,iBAAAD,EAAAe,WACAf,EAAAe,SAAA,IAEAnC,MAAAC,QAAAmB,EAAAgB,eACAhB,EAAAgB,YAAA,IAEAhB,EAAAiB,gBAAA,iBAAAjB,EAAAiB,iBACA,iBAAAjB,EAAAiB,eAAAC,OACAlB,EAAAiB,eAAAC,KAAA,SAEA,iBAAAlB,EAAAiB,eAAAE,YAAAnB,EAAAiB,eAAAE,WAAA,KACAnB,EAAAiB,eAAAE,WAAA,MAEAnB,EAAAiB,eAAAG,MAAA,iBAAApB,EAAAiB,eAAAG,MAAA,CACA,IAAA3B,EAAAD,EAAA,IAAAE,MAAA,0DACAD,EAAAgB,MAAA;AACAT,EAAAQ,QAAAf,GACAO,EAAAiB,oBAAAI,EAGA,OAAArB,GAEAF,EAAAwB,0BAAA,SAAAC,EAAAC,QACA,IAAAD,IAAAA,EAAA,WACA,IAAAC,IAAAA,EAAA,MACA,IAAA9G,EAAAJ,EAAA4C,UAAAyB,eAAA6C,GAAA,IAgBA,OAdAlH,EAAA4C,UAAAmB,gBAAAkD,GAAA,SAAA/C,EAAAM,GACA,2BAAAN,QAAA,IAAA9D,EAAAoG,uBACApG,EAAAoG,uBAAApG,EAAAoG,uBAAAW,OAAA3C,GAEA,UAAAN,QAAA,IAAA9D,EAAAyF,MACA7F,EAAA4C,UAAAmB,gBAAAS,GAAA,SAAA4C,EAAAC,GAAA,OAAAjH,EAAAyF,MAAAuB,GAAAC,KAEA,WAAAnD,QAAA,IAAA9D,EAAA0F,OACA9F,EAAA4C,UAAAmB,gBAAAS,GAAA,SAAA4C,EAAAC,GAAA,OAAAjH,EAAA0F,OAAAsB,GAAAC,KAGAjH,EAAA8D,GAAAlE,EAAA4C,UAAAyB,eAAAG,MAGAgB,EAAAC,6BAAArF,IAEAoF,EAjGA,GAmGAxF,EAAAwF,yBAAAA,EACA,IAAA8B,EAAA,WACA,SAAAA,EAAAC,EAAA7B,GAMA,GALAjF,KAAA+G,KAAAD,EACA9G,KAAAiF,QAAAF,EAAAwB,0BAAAtB,GACAjF,KAAAgH,mCACAhH,KAAAiH,wBACAjH,KAAAkH,0BACA,KAAAlH,KAAAiF,QAAAC,QAAA,CACA,GAAAlF,KAAAiF,QAAAkC,aAAAnH,KAAAiF,QAAAkC,YAAAC,MAAApH,KAAAiF,QAAAkC,YAAAC,KAAAC,UAAArH,KAAA+G,KAAAO,OAAA;AACA,IAAAC,EAAAvH,KAAAiF,QAAAkC,YAAAC,KAAAC,SACAG,EAAAC,KAAAC,IAAAH,EAAAI,YAAA,KAAAJ,EAAAI,YAAA,OACA3H,KAAAiF,QAAAC,QAAAqC,EAAAK,UAAA,EAAAJ,EAAA,GAEA,GAAAxH,KAAAiF,QAAAsC,UAAAvH,KAAA+G,KAAAO,OAAA,CACAC,EAAAvH,KAAAiF,QAAAsC,SACAC,EAAAC,KAAAC,IAAAH,EAAAI,YAAA,KAAAJ,EAAAI,YAAA,OACA3H,KAAAiF,QAAAC,QAAAqC,EAAAK,UAAA,EAAAJ,EAAA,KAsLA,OAlLAX,EAAAlG,UAAAqG,iCAAA,WAEAhH,KAAA6H,0BAAA,GACA,IAAA,IAAAjI,EAAA,EAAAA,EAAAI,KAAAiF,QAAAc,uBAAAjG,OAAAF,IACAI,KAAA6H,0BAAA7H,KAAAiF,QAAAc,uBAAAnG,KAAA,GAGAiH,EAAAlG,UAAAsG,sBAAA,WAEAjH,KAAA8H,eAAArH,OAAAsH,OAAA,MACA,IAAA,IAAAC,EAAA,EAAAC,EAAAjI,KAAAiF,QAAAgB,YAAA+B,EAAAC,EAAAnI,OAAAkI,IAAA,CACA,IAAAE,EAAAD,EAAAD,GACAhI,KAAA8H,eAAAI,IAAA,IAGArB,EAAAlG,UAAAuG,wBAAA,WACA,IAAAiB,EAAAnI,KAGAA,KAAAoI,iBAAA,GACA7I,EAAA4C,UAAAmB,gBAAAtD,KAAAiF,QAAAG,OAAA,SAAAiD,EAAAC,GACAzE,MAAAC,QAAAwE,GAOAH,EAAAC,iBAAAlG,KAAA,CACAmG,KAAAA,EACAC,GAAAA,IARAH,EAAAC,iBAAAlG,KAAA,CACAmG,KAAAA,EACAC,GAAA,CAAAA,QAUAtI,KAAAoI,iBAAAG,MAAA,SAAAC,EAAAC;AACA,OAAAA,EAAAJ,KAAAvI,OAAA0I,EAAAH,KAAAvI,WAQA+G,EAAAlG,UAAA+H,cAAA,SAAAzD,GACA,OAAA,IAAA4B,EAAA7G,KAAA+G,KAAAhC,EAAAwB,0BAAAtB,EAAAjF,KAAAiF,WAKA4B,EAAAlG,UAAAgI,kBAAA,WACA,OAAA3I,KAAAiF,SAEA4B,EAAAlG,UAAAiI,YAAA,SAAA/C,GAEA,IADA,IAAAgD,EACAjJ,EAAA,EAAAC,EAAAG,KAAAoI,iBAAAtI,OAAAF,EAAAC,EAAAD,IAEA,GADAiJ,EAAA7I,KAAAoI,iBAAAxI,GACAL,EAAA4C,UAAAY,WAAA8C,EAAAgD,EAAAR,MAAA,CAEA,IADA,IAAA1I,EAAA,GACAmJ,EAAA,EAAAC,EAAAF,EAAAP,GAAAxI,OAAAgJ,EAAAC,EAAAD,IACAnJ,EAAAuC,KAAA2G,EAAAP,GAAAQ,GAAAjD,EAAA/C,OAAA+F,EAAAR,KAAAvI,SAEA,OAAAH,EAGA,MAAA,CAAAkG,IAEAgB,EAAAlG,UAAAqI,iBAAA,SAAA5F,GACA,OAAA7D,EAAA4C,UAAAgB,oBAAAC,GACAA,EAAA,IAAApD,KAAAiF,QAAAO,QAGApC,EAAA,IAAApD,KAAAiF,QAAAO,SAGAqB,EAAAlG,UAAAsI,4BAAA,SAAA7F,GACA,OAAApD,KAAAiF,QAAAO,QACAxF,KAAAgJ,iBAAA5F,GAEAA,GAEAyD,EAAAlG,UAAAuI,6BAAA,SAAAC,GACA,GAAAnJ,KAAAiF,QAAAO,QACA,IAAA,IAAA5F,EAAA,EAAAC,EAAAsJ,EAAArJ,OAAAF,EAAAC,EAAAD,IACAuJ,EAAAvJ,GAAAI,KAAAgJ,iBAAAG,EAAAvJ,IAGA,OAAAuJ,GAKAtC,EAAAlG,UAAAyI,gBAAA,SAAAvD,GACA,IAAA,IAAA7F,KAAA8H,eAAAjC,GAEA,OAAA7F,KAAAmF,UAEA,CAAA,UAIA,CAAA,QAAAU,GAGA,IACAwD,EADA1J,EAAAkG;CAEA,GAAAtG,EAAA4C,UAAAe,SAAAvD,EAAA,QAAAJ,EAAA4C,UAAAkB,eAAA1D,GAeAJ,EAAA4C,UAAAe,SAAAvD,EAAA,QAAAJ,EAAA4C,UAAAgB,oBAAAxD,KACAA,GAAA,OAEA0J,EAAA,CAAA1J,QAhBA,IAAA,IAAAC,EAAA,EAAAC,GADAwJ,EAAArJ,KAAA4I,YAAAjJ,IACAG,OAAAF,EAAAC,EAAAD,IACAI,KAAAmF,WAAA,WAAAkE,EAAAzJ,KAGAL,EAAA4C,UAAAkB,eAAAgG,EAAAzJ,MACAyJ,EAAAzJ,GAAAI,KAAAiF,QAAAC,QAAAmE,EAAAzJ,IAEAL,EAAA4C,UAAAe,SAAAmG,EAAAzJ,GAAA,QAAAL,EAAA4C,UAAAgB,oBAAAkG,EAAAzJ,MACAyJ,EAAAzJ,GAAAyJ,EAAAzJ,GAAA,QAUA,OAAAI,KAAAkJ,6BAAAG,IAKAxC,EAAAlG,UAAA2I,aAAA,SAAAlG,GACA,IAAAzD,EAAAyD,EAOA,OANA7D,EAAA4C,UAAAkB,eAAA1D,KACAA,EAAAK,KAAA4I,YAAAjJ,GAAA,GACAJ,EAAA4C,UAAAkB,eAAA1D,KACAA,EAAAK,KAAAiF,QAAAC,QAAAvF,IAGAK,KAAAiJ,4BAAAtJ,IAKAkH,EAAAlG,UAAAwE,QAAA,WACA,OAAAnF,KAAAiF,QAAAE,SAKA0B,EAAAlG,UAAA4I,6BAAA,SAAA1D,GACA,OAAA7F,KAAA6H,0BAAAnE,eAAAmC,IAKAgB,EAAAlG,UAAA6I,mBAAA,SAAA3D,GACA,GAAA7F,KAAAiF,QAAAI,OACA,OAAArF,KAAAiF,QAAAI,OAAAQ,IAMAgB,EAAAlG,UAAA8I,iBAAA,WACA,OAAAzJ,KAAAiF,QAAAK;AAKAuB,EAAAlG,UAAA+I,kBAAA,WACA,OAAA1J,KAAAiF,QAAAM,aAKAsB,EAAAlG,UAAA8E,QAAA,SAAAf,GACA1E,KAAAiF,QAAAQ,QAAAf,IAEAmC,EAtMA,GAwMAtH,EAAAsH,cAAAA,EAzTA,CA0TAtH,IAAAA,EAAA,KAMA,SAAAA,GAIA,IAAAoK,EAAA,WACA,SAAAA,EAAA7C,GACA9G,KAAA+G,KAAAD,EACA9G,KAAA4J,cAAA,KACA5J,KAAA6J,aAAA,GAoCA,OAlCAF,EAAAhJ,UAAAmJ,KAAA,SAAAC,EAAAC,EAAAxG,EAAAyG,GACA,IAAA9B,EAAAnI,KACAA,KAAA4J,gBACA5J,KAAA4J,cAAA5J,KAAA+G,KAAAmD,YACA,IAAAC,EACAnK,KAAA+G,KAAAO,OACA,IAAA8C,EAAApK,KAAA+G,MACA,IAAAsD,GAEA,IAAAC,EAAA,CACA9G,SAAAA,EACAyG,UAAAA,GAEAjK,KAAA6J,aAAAnG,eAAAsG,GACAhK,KAAA6J,aAAAG,GAAA9H,KAAAoI,IAGAtK,KAAA6J,aAAAG,GAAA,CAAAM,GACAtK,KAAA4J,cAAAE,KAAAC,EAAAC,GAAA,WAAA,OAAA7B,EAAAoC,gBAAAP,MAAA,SAAAtF,GAAA,OAAAyD,EAAAqC,iBAAAR,EAAAtF,QAEAiF,EAAAhJ,UAAA4J,gBAAA,SAAAP,GACA,IAAAM,EAAAtK,KAAA6J,aAAAG,UACAhK,KAAA6J,aAAAG,GACA,IAAA,IAAApK,EAAA,EAAAA,EAAA0K,EAAAxK,OAAAF,IACA0K,EAAA1K,GAAA4D,YAGAmG,EAAAhJ,UAAA6J,iBAAA,SAAAR,EAAAtF,GACA,IAAA4F,EAAAtK,KAAA6J,aAAAG,UACAhK,KAAA6J,aAAAG,GACA,IAAA,IAAApK,EAAA,EAAAA,EAAA0K,EAAAxK,OAAAF,IACA0K,EAAA1K,GAAAqK,UAAAvF,IAGAiF,EAxCA,GA0CAU,EAAA,WACA,SAAAA;AAmCA,OA7BAA,EAAA1J,UAAA8J,gBAAA,SAAAC,EAAAlH,EAAAyG,GACA,IAAAU,EAAA,WACAD,EAAAE,oBAAA,OAAAC,GACAH,EAAAE,oBAAA,QAAAE,IAEAD,EAAA,SAAAE,GACAJ,IACAnH,KAEAsH,EAAA,SAAAC,GACAJ,IACAV,EAAAc,IAEAL,EAAAM,iBAAA,OAAAH,GACAH,EAAAM,iBAAA,QAAAF,IAEAT,EAAA1J,UAAAmJ,KAAA,SAAAC,EAAAC,EAAAxG,EAAAyG,GACA,IAAAS,EAAAO,SAAAC,cAAA,UACAR,EAAAS,aAAA,QAAA,SACAT,EAAAS,aAAA,OAAA,mBACAnL,KAAAyK,gBAAAC,EAAAlH,EAAAyG,GACAS,EAAAS,aAAA,MAAAnB,GAEA,IAAAhE,EAAA+D,EAAAqB,YAAAzC,oBAAA3C,SACAA,GACA0E,EAAAS,aAAA,QAAAnF,GAEAiF,SAAAI,qBAAA,QAAA,GAAAC,YAAAZ,IAEAL,EApCA,GAsCAF,EAAA,WACA,SAAAA,KAWA,OATAA,EAAAxJ,UAAAmJ,KAAA,SAAAC,EAAAC,EAAAxG,EAAAyG,GACA,IACA3I,cAAA0I,GACAxG,IAEA,MAAAuH,GACAd,EAAAc,KAGAZ,EAZA,GAcAC,EAAA,WACA,SAAAA,EAAAtD,GACA9G,KAAA+G,KAAAD,EACA9G,KAAAuL,gBAAA,EACAvL,KAAAwL,sBAAA,EAkRA,OAhRApB,EAAAzJ,UAAA8K,MAAA,SAAAtE,GACAnH,KAAAuL,iBAGAvL,KAAAuL,gBAAA,EAEAvL,KAAA0L,IAAAvE,EAAA,MACAnH,KAAA2L,IAAAxE,EAAA,MACAnH,KAAA4L,MAAAzE,EAAA,QACAnH,KAAA6L,QAAA1E,EAAA,YAIAiD,EAAAzJ,UAAAmL,iBAAA,SAAA3E,EAAA4C;AAGA,IAAA7D,EAAA6D,EAAAqB,YAAAzC,oBAAAzC,eACA,GAAAA,IAGAlG,KAAAwL,qBAAA,CAGAxL,KAAAwL,sBAAA,EACA,IAAAO,EAAA/L,KACAgM,EAAA7E,EAAA,UAmBA6E,EAAArL,UAAAsL,SAAA,SAAAC,EAAA7E,GAEA,IAKA8E,EALAC,EAAAJ,EAAAK,KAAAH,EAAAtJ,QAAA,QAAA,KAEA0J,EAAAvC,EAAAwC,cACAC,EAAAT,EAAAU,mBAAAvG,EAAAmB,GACApC,EAAA,CAAAoC,SAAAA,GAEA,IACA,IAAAqF,EAAAX,EAAAL,IAAAiB,aAAAH,GACAL,EAAAO,EAAAE,MAAA,EAAA,IACA3H,EAAA4H,WAAAH,EAAAE,MAAA,IACAN,EAAArK,OAAA,GAAAuK,GAEA,MAAAM,GACAR,EAAArK,OAAA,GAAAuK,GAEA,IAAA9B,EAAA,IAAAqB,EAAAJ,IAAAoB,OAAAX,EAAAnH,GACA+H,EAAAtC,EAAAuC,iBAAAhI,GAEAiI,EAAAnB,EAAAH,MAAAsB,QAAA7F,GACA8F,EAvCA,SAAAC,GACA,IAAApB,EAAAoB,EAAAC,YACAF,EAAA,SAAA9G,GACA,IACA,OAAA+G,EAAAD,QAAA9G,GAEA,WAUA,OANA8G,EAAAG,QAAA,SAAAC,GACA,OAAAvB,EAAAwB,iBAAAD,EAAAH,IAEAD,EAAA/F,KAAAlG,QAAAuM,WACAN,EAAAO,WAAA1B,EAAA2B,YACAR,EAAAS,MAAA5B,EAAA6B,OACAV,EAuBAW,CAAA9N,MACA+N,EAAA,CAAA/N,KAAAiB,QAAAkM,EAAAnN,KAAAqH,EAAA6F,EAAAhM,QAAAjB,EAAA+N,QACArO,EAAAqN,EAAAiB,MAAAjO,KAAAiB,QAAA8M,GAIA,OAFAhC,EAAAmC,kBAAAxD,EAAA0B,EAAAI,GAAAvH,EAAA4H,WAAA9C,GACAgC,EAAAoC,kBAAAzD,EAAA0B,EAAAI,EAAAL,GACAxM,KAGAyK,EAAAzJ,UAAAmJ,KAAA,SAAAC,EAAAC,EAAAxG,EAAAyG,GACA,IAAA9B,EAAAnI,KACAoO,EAAArE,EAAAqB,YAAAzC,oBACAxB,EAAAiH,EAAAjH,aAAA5H,EAAAW,OAAAiH,YACAkH,EAAAD,EAAAC,kBAAA,SAAAC,GAAA,OAAAA,GACAtO,KAAAyL,MAAAtE;AACAnH,KAAA8L,iBAAA3E,EAAA4C,GACA,IAAAuC,EAAAvC,EAAAwC,cACA,GAAA,UAAA1J,KAAAmH,GAAA,CACA,IAAAuE,EAAAvE,EAAAwE,MAAA,KACAC,EAAA,KACA,IACAA,EAAAtH,EAAAoH,EAAA,IAEA,MAAA7J,GAEA,YADAuF,EAAAvF,GAGAqF,EAAA2E,6BAAA,IAAA,WAAA,OAAAD,KACAjL,QAEA,CACAwG,EAAAzK,EAAA4C,UAAAK,kBAAAxC,KAAA+G,KAAAtE,UAAAuH,GACA,IAAA2E,EAAA3O,KAAA4L,MAAAgD,UAAA5E,GACA6E,EAAA7O,KAAA8O,oCAAAH,GACAI,EAAAC,QAAAZ,EAAAlI,gBACA+I,EAAAF,EAAA/O,KAAAyM,mBAAA2B,EAAAlI,eAAA8D,QAAA1D,EACAtG,KAAAkP,yBAAAP,EAAAM,EAAA3C,GAAA,SAAA5H,EAAAgI,EAAAG,EAAAV,GACA,GAAAzH,EACAuF,EAAAvF,OADA,CAIA,IAAA0H,EAEAA,EADAM,EAAAyC,WAAA,KAAA/E,EAAAgF,KACAhF,EAAAiF,QAAA3C,EAAA9E,UAAA,GAAAwC,EAAAkF,QAGAlF,EAAAiF,QAAA3C,EAAAtC,EAAAkF,QAEAlD,EAAAiC,EAAAjC,EAAAuC,GACA,IAAAY,EAAA,CAAAlI,SAAAwH,EAAAhC,WAAAA,GACAnC,EAAAvC,EAAAqH,qBAAAzF,EAAAqC,EAAAmD,EAAA/L,EAAAyG,GACA9B,EAAA+F,kBAAAxD,EAAA0B,EAAA6C,EAAAF,IAAAlC,EAAA9C,GACA5B,EAAAgG,kBAAAzD,EAAA0B,EAAA6C,EAAA9C,SAIA/B,EAAAzJ,UAAA6O,qBAAA,SAAAzF,EAAA0F,EAAAxK,EAAAzB,EAAAyG,GACA,IAAAqC,EAAAvC,EAAAwC,cACAD,EAAArK,OAAA,GAAAgD,EAAAoC,UACA,IAAAqD,EAAA,IAAA1K,KAAA2L,IAAAoB,OAAA0C,EAAAxK,GACAyK,EAAAhF,EAAAuC,iBAAAhI,GACA0K,EAAA5F,EAAA6F,yBACAC,GAAA,EACAC,EAAA,WAEA,OADAD,GAAA,EACAF,EAAA1B,MAAA,KAAA8B,YAWA,OATAD,EAAAE,IAAAL,EAAAK;AACAN,EAAAO,KAAA1Q,EAAAW,OAAA6J,EAAAmG,0BAAAJ,EAAA7K,EAAAoC,SAAArH,KAAA4L,MAAAsB,QAAAjI,EAAAoC,WACAiF,EAAArK,OAAA,GAAAgD,EAAAoC,UACAwI,EACArM,IAGAyG,EAAA,IAAAtF,MAAA,iCAAAM,EAAAoC,SAAA,MAEAqD,GAEAN,EAAAzJ,UAAAmO,oCAAA,SAAAzI,GACA,IAAArG,KAAA+G,KAAAoJ,mBACA,OAAA9J,EAEA,IAAA+J,EAAA/J,EAAAgK,MAAA,mBACA,OAAAD,EAEA,YAAAA,EAAA,GAAAE,cAAA,IAAAF,EAAA,IAAAxN,QAAA,MAAA,KAIA,UAAAyD,GAGA+D,EAAAzJ,UAAA8L,mBAAA,SAAApH,EAAAgC,GACA,IAAAkJ,EAAAvQ,KAAA6L,QAAA2E,WAAA,OAAAC,OAAApJ,EAAA,QAAAoJ,OAAApL,EAAAc,KAAA,QAAAuK,OAAA,OACAC,EAAA3Q,KAAA4L,MAAA+E,SAAAtJ,GAAAzE,QAAA,QAAA,IACA,OAAA5C,KAAA4L,MAAAgF,KAAAvL,EAAAgB,KAAAsK,EAAA,IAAAJ,EAAA,UAEAnG,EAAAzJ,UAAAuN,kBAAA,SAAAxD,EAAA0B,EAAAI,EAAAqE,EAAA9G,GACA,IAAA5B,EAAAnI,KACA0K,EAAAoG,mBAEA9Q,KAAA0L,IAAAqF,OAAAvE,GAAA,SAAA9H,GACAqF,EAAAwC,cAAAtK,OAAA,GAAAuK,GACArE,EAAA6I,0BAAAtG,EAAA0B,EAAAI,EAAAzC,GACArF,GACAqF,EAAAqB,YAAA3F,QAAAf,MAIAmM,GAEA7Q,KAAAgR,0BAAAtG,EAAA0B,EAAAI,EAAAzC,IAMAK,EAAAzJ,UAAAqQ,0BAAA,SAAAtG,EAAA0B,EAAAI,EAAAzC;AACA,IAAA5B,EAAAnI,KACAiR,EAAAxJ,KAAAyJ,KAAAnH,EAAAqB,YAAAzC,oBAAAzC,eAAAE,YAAA,EAAAqB,KAAA0J,WACAC,GAAA,EACAC,EAAA,EACAlF,OAAA7F,EACAgL,EAAA,WACAC,YAAA,WACApF,IACAA,EAAAhE,EAAA0D,QAAA2E,WAAA,OAAAC,OAAArE,EAAA,QAAAsE,UAEA,IAAA7D,EAAAnC,EAAAmG,mBACA,IAAAhE,EAAA/M,QAAA+M,EAAA/M,SAAAsR,GAAAC,GAAA,IAGAD,EAAAvE,EAAA/M,OACAqI,EAAAuD,IAAA8F,UAAAhF,EAAAwB,OAAAtH,OAAA,CAAAyF,EAAAU,KAAA,SAAAnI,GACAA,GACAqF,EAAAqB,YAAA3F,QAAAf,GAEAqF,EAAAwC,cAAAtK,OAAA,GAAAuK,GACA8E,UAEAL,EAAAxJ,KAAAgK,IAAA,EAAAJ,OAKAC,KAEAlH,EAAAzJ,UAAAuO,yBAAA,SAAAwC,EAAAlF,EAAAF,EAAA9I,GACA,GAAAgJ,EAIA,CAEA,IAAAmF,OAAArL,EACAsL,OAAAtL,EACAuL,OAAAvL,EACAwL,EAAA,EACAC,EAAA,SAAArN,GACAA,EACAlB,EAAAkB,GAEA,KAAAoN,GACAtO,OAAA8C,EAAAqL,EAAAC,EAAAC,IAGA7R,KAAA0L,IAAAsG,SAAAN,EAAA,CAAAO,SAAA,SAAA,SAAAvN,EAAAgI,GACAiF,EAAAjF,EACAqF,EAAArN,MAEA1E,KAAA0L,IAAAsG,SAAAxF,GAAA,SAAA9H,EAAAgI,IACAhI,GAAAgI,GAAAA,EAAA5M,OAAA,GACA+R,EAAAnF,EAAAE,MAAA,EAAA,IACAgF,EAAAlF,EAAAE,MAAA,IACAN,EAAArK,OAAA,GAAAuK,IAGAF,EAAArK,OAAA,GAAAuK,GAEAuF,YA7BA/R,KAAA0L,IAAAsG,SAAAN,EAAA,CAAAO,SAAA,QAAAzO,IAiCA4G,EAAAzJ,UAAAwN,kBAAA,SAAAzD,EAAA0B,EAAAI,EAAAL,GACA,IAAAhE,EAAAnI,KACAmM,IAIAzB,EAAAoG,oBAIAS,YAAA,WAIA,IAAAW,EAAA/J,EAAA0D,QAAA2E,WAAA,OAAAC,OAAArE,EAAA,QAAAsE;CACAvE,EAAAgG,OAAAD,KACAvM,QAAAyM,KAAA,2CAAA5F,EAAA,oCACArE,EAAAuD,IAAAqF,OAAAvE,GAAA,SAAA9H,GAAA,OAAAiB,QAAAC,MAAA,sBAAA4G,EAAA,IAAA9H,SAEA+C,KAAAyJ,KAAA,KAAA,EAAAzJ,KAAA0J,cAEA/G,EAAAgF,KAAA,MACAhF,EAAAiF,QAAA,wDACAjF,EAAAkF,QAAA,QACAlF,EAtRA,GA2RA7K,EAAA8S,mBAHA,SAAAvL,GACA,OAAA,IAAA6C,EAAA7C,IA3XA,CA8XAvH,IAAAA,EAAA,KAMA,SAAAA,GAGA,IAAA+S,EAAA,WACA,SAAAA,EAAAC,GACA,IAAAC,EAAAD,EAAA5K,YAAA,KAEA3H,KAAAyS,gBADA,IAAAD,EACAD,EAAAzP,OAAA,EAAA0P,EAAA,GAGA,GAqCA,OA/BAF,EAAAI,mBAAA,SAAA7M,GACA,IAAA8M,EAAAC,EAAA/M,EAGA,IADA8M,EAAA,SACAA,EAAA9P,KAAA+P,IACAA,EAAAA,EAAAhQ,QAAA+P,EAAA,KAMA,IAHAC,EAAAA,EAAAhQ,QAAA,SAAA,IAEA+P,EAAA,uEACAA,EAAA9P,KAAA+P,IACAA,EAAAA,EAAAhQ,QAAA+P,EAAA,KAIA,OADAC,EAAAA,EAAAhQ,QAAA,sEAAA,KAMA0P,EAAA3R,UAAAkS,cAAA,SAAAhN,GACA,IAAAlG,EAAAkG;CAMA,OALAtG,EAAA4C,UAAAkB,eAAA1D,KACAJ,EAAA4C,UAAAY,WAAApD,EAAA,OAAAJ,EAAA4C,UAAAY,WAAApD,EAAA,UACAA,EAAA2S,EAAAI,mBAAA1S,KAAAyS,eAAA9S,IAGAA,GAEA2S,EAAAQ,KAAA,IAAAR,EAAA,IACAA,EA5CA,GA8CA/S,EAAA+S,iBAAAA,EAGA,IAAAtG,EAAA,WACA,SAAAA,EAAA7H,EAAA4O,EAAAC,EAAAxP,EAAAyG,EAAAgJ,GACAjT,KAAAmE,GAAAA,EACAnE,KAAA+S,MAAAA,EACA/S,KAAAgT,aAAAA,EACAhT,KAAAkT,UAAA1P,EACAxD,KAAAmT,WAAAlJ,EACAjK,KAAAiT,iBAAAA,EACAjT,KAAAiB,QAAA,GACAjB,KAAA4F,MAAA,KACA5F,KAAAoT,iBAAA,EACApT,KAAAqT,4BAAArT,KAAAgT,aAAAlT,OACAE,KAAAsT,aAAA,EA8EA,OA5EAtH,EAAAuH,oBAAA,SAAA/P,EAAAuK,GACA,IACA,MAAA,CACAyF,cAAAhQ,EAAAyK,MAAA1O,EAAAW,OAAA6N,GACA0F,cAAA,MAGA,MAAA1I,GACA,MAAA,CACAyI,cAAA,KACAC,cAAA1I,KAIAiB,EAAA0H,eAAA,SAAArO,EAAAsO,EAAAnQ,EAAAoQ,GACA,OAAAvO,EAAAF,YAAA5F,EAAA4C,UAAA+B,kBAAAyP,GACA,CACAH,cAAA,KACAC,cAAA,MAGApO,EAAAoE,mBACAzJ,KAAAuT,oBAAA/P,EAAAoQ,GAEA,CACAJ,cAAAhQ,EAAAyK,MAAA1O,EAAAW,OAAA0T,GACAH,cAAA,OAGAzH,EAAArL,UAAAkT,SAAA,SAAAvH,EAAAjH,EAAAuO,GACA5T,KAAAsT,aAAA,EACA,IAAAG,EAAA,KACA,GAAAzT,KAAAkT,UACA,GAAA,mBAAAlT,KAAAkT,UAAA,CACA5G,EAAArK,OAAA,GAAAjC,KAAA+S;CACA,IAAAH,EAAA5G,EAAA0H,eAAArO,EAAArF,KAAA+S,MAAA/S,KAAAkT,UAAAU,GACAH,EAAAb,EAAAa,cACAnH,EAAArK,OAAA,GAAAjC,KAAA+S,OACAU,QAAA,IAAAb,EAAAY,eAAAxT,KAAAoT,kBAAA7T,EAAA4C,UAAAwB,QAAA3D,KAAAiB,WACAjB,KAAAiB,QAAA2R,EAAAY,oBAIAxT,KAAAiB,QAAAjB,KAAAkT,UAGA,GAAAO,EAAA,CACA,IAAA/O,EAAAnF,EAAAkF,YAAAgP,GACA/O,EAAAgB,MAAA,UACAhB,EAAAmB,SAAA7F,KAAA+S,MACA/S,KAAA4F,MAAAlB,EACAW,EAAAI,QAAAf,GAEA1E,KAAAgT,aAAA,KACAhT,KAAAkT,UAAA,KACAlT,KAAAmT,WAAA,KACAnT,KAAAiT,iBAAA,MAKAjH,EAAArL,UAAAmT,kBAAA,SAAApP,GAGA,OAFA1E,KAAAsT,aAAA,EACAtT,KAAA4F,MAAAlB,IACA1E,KAAAmT,aACAnT,KAAAmT,WAAAzO,IACA,IAOAsH,EAAArL,UAAAoT,WAAA,WACA,OAAA/T,KAAAsT,aAEAtH,EA1FA,GA4FAzM,EAAAyM,OAAAA,EACA,IAAAgI,EAAA,WACA,SAAAA,IACAhU,KAAAiU,QAAA,EACAjU,KAAAkU,0BAAA,IAAAC,IACAnU,KAAAoU,0BAAA,GAEApU,KAAAqU,YAAA,WACArU,KAAAqU,YAAA,UACArU,KAAAqU,YAAA,WAiBA,OAfAL,EAAArT,UAAA2T,eAAA,WACA,OAAAtU,KAAAiU,SAEAD,EAAArT,UAAA0T,YAAA,SAAAV,GACA,IAAAxP,EAAAnE,KAAAkU,0BAAAtT,IAAA+S,GAMA,YALA,IAAAxP,IACAA,EAAAnE,KAAAiU;AACAjU,KAAAkU,0BAAAK,IAAAZ,EAAAxP,GACAnE,KAAAoU,0BAAAjQ,GAAAwP,GAEAxP,GAEA6P,EAAArT,UAAA6T,eAAA,SAAA3O,GACA,OAAA7F,KAAAoU,0BAAAvO,IAEAmO,EAzBA,GA2BAS,EAAA,WACA,SAAAA,EAAAtQ,GACAnE,KAAAmE,GAAAA,EAKA,OAHAsQ,EAAAC,QAAA,IAAAD,EAAA,GACAA,EAAAE,OAAA,IAAAF,EAAA,GACAA,EAAAG,QAAA,IAAAH,EAAA,GACAA,EAPA,GASAlV,EAAAkV,kBAAAA,EACA,IAAAI,EACA,SAAA1Q,EAAA2Q,EAAAC,GACA/U,KAAAmE,GAAAA,EACAnE,KAAA8U,SAAAA,EACA9U,KAAA+U,YAAAA,GAIAxV,EAAAsV,iBAAAA,EACA,IAAAG,EAAA,WACA,SAAAA,EAAAlO,EAAAmO,EAAAC,EAAAC,EAAApT,QACA,IAAAA,IAAAA,EAAA,GACA/B,KAAA+G,KAAAD,EACA9G,KAAA4J,cAAAqL,EACAjV,KAAAoV,0BAAArT,EACA/B,KAAAqV,YAAAH,EACAlV,KAAAsV,aAAAH,EACAnV,KAAAuV,kBAAA,IAAAvB,EACAhU,KAAAwV,QAAA,IAAAjW,EAAAsH,cAAA7G,KAAA+G,MACA/G,KAAAyV,UAAA,GACAzV,KAAA0V,eAAA,GACA1V,KAAA2V,sBAAA,GACA3V,KAAA4V,4BAAA,IAAAzB,IACAnU,KAAA6V,6BAAA,KACA7V,KAAA8V,UAAA,KACA9V,KAAA+V,eAAA,GACA/V,KAAAgW,sBAAA,GACAhW,KAAAiW,uBAAA,GAwhBA,OAthBAjB,EAAArU,UAAAuV,MAAA,WACA,OAAA,IAAAlB,EAAAhV,KAAA+G,KAAA/G,KAAA4J,cAAA5J,KAAAqV,YAAArV,KAAAsV,aAAAtV,KAAAoV;AAEAJ,EAAArU,UAAAiP,uBAAA,WACA,OAAA5P,KAAAqV,aAEAL,EAAArU,UAAAuP,wBAAA,WACA,OAAAlQ,KAAAsV,cAEAN,EAAAmB,6BAAA,SAAAlT,EAAA6B,GAIA,IAHA,IAAA8J,EAAA,SAAAwH,GAAA,OAAAA,EAAAxT,QAAA,MAAA,MACAyT,EAAAzH,EAAA3L,GACAqT,EAAAxR,EAAA0J,MAAA,MACA5O,EAAA,EAAAA,EAAA0W,EAAAxW,OAAAF,IAAA,CACA,IAAA2W,EAAAD,EAAA1W,GAAAyQ,MAAA,wBACA,GAAAkG,EAAA,CACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAlP,KAAAC,IAAA8O,EAAA7O,YAAA,KAAA,EAAA6O,EAAA7O,YAAA,KAAA,GAGA,IADA6O,EAAA5H,EADA4H,EAAAA,EAAA1T,OAAA6T,OAEAN,EAAA,CACA,IAAAzD,EAAA,CACAgE,KAAAC,SAAAJ,EAAA,IACAK,IAAAD,SAAAH,EAAA,KAKA,OAHA,IAAA9D,EAAAgE,OACAhE,EAAAkE,KAAA,wDAAAhX,QAEA8S,IAIA,MAAA,IAAAjO,MAAA,mDAAA1B,IAEA+R,EAAArU,UAAAoW,aAAA,WACA,IAAA/W,KAAAwV,QAAArQ,UACA,OAAA,KAGA,IADA,IAAAxF,EAAA,GAAAqX,EAAA,EACApX,EAAA,EAAAC,EAAAG,KAAAyV,UAAA3V,OAAAF,EAAAC,EAAAD,IAAA,CACA,IAAA2W,EAAAvW,KAAAyV,UAAA7V,GACA,GAAA2W,EAAA,CAGA,IAAAU,EAAAjX,KAAA+V,eAAAQ,EAAApS,KAAA,KACA+S,EAAAlX,KAAAgW,sBAAAO,EAAApS,KAAA,KACA6O,EAAAhT,KAAAiW,uBAAAM,EAAApS,IACAxE,EAAAqX,KAAA,CACA7S,GAAAoS,EAAAxD,MACA1M,KAAA4Q,EACAE,eAAAF,GAAAC,EAAAlC,EAAAmB,6BAAAc,EAAAC,GAAA;AACAlE,aAAAA,EACAoE,KAAA,KACAnW,QAAAsV,EAAAtV,UAGA,OAAAtB,GAEAqV,EAAArU,UAAA4L,YAAA,WASA,OARAvM,KAAA8V,YACA9V,KAAAwV,QAAA9L,oBACA1J,KAAA8V,UAAA,IAAAvW,EAAAuC,oBAAA9B,KAAAoV,2BAGApV,KAAA8V,UAAAvW,EAAA+C,wBAAAC,UAGAvC,KAAA8V,WAEAd,EAAArU,UAAA0W,gBAAA,WACA,OAAArX,KAAAuM,cAAAlK,aAOA2S,EAAArU,UAAA+N,6BAAA,SAAAsE,EAAAxP,GACA,GAAA,OAAAxD,KAAA6V,6BACA,MAAA,IAAAlR,MAAA,2DAEA,IAAAG,EAAA,KACA9E,KAAAwV,QAAArQ,YACAL,EAAA,IAAAH,MAAA,iBAAAG,OAAA,MAEA9E,KAAA6V,6BAAA,CACA/Q,MAAAA,EACAkO,aAAAA,EACAxP,SAAAA,IASAwR,EAAArU,UAAA2W,aAAA,SAAA3D,EAAAX,EAAAxP,EAAAyG,EAAAnF,EAAAmO,GACA,IAAA9K,EAAAnI,UACA,IAAAiT,IAAAA,EAAA,IAAAX,EAAAqB,IACA,IAAA9N,EAAA7F,KAAAuV,kBAAAlB,YAAAV,GACA,GAAA3T,KAAAyV,UAAA5P,GACA7F,KAAAwV,QAAAjM,6BAAAoK,IACAhO,QAAAyM,KAAA,mCAAAuB,EAAA,SAFA,CAOA,IAAA4C,EAAA,IAAAvK,EAAAnG,EAAA8N,EAAA3T,KAAAuX,uBAAAvE,EAAAC,GAAAzP,EAAAyG,EAAAgJ,GACAjT,KAAAyV,UAAA5P,GAAA0Q;AACAvW,KAAAwV,QAAArQ,YACAnF,KAAAgW,sBAAAnQ,GAAAf,EACA9E,KAAAiW,uBAAApQ,IAAA0Q,EAAAvD,cAAA,IAAAwE,KAAA,SAAAC,GAAA,OAAAtP,EAAAoN,kBAAAf,eAAAiD,EAAAtT,QAIAnE,KAAA0X,SAAAnB,KAEAvB,EAAArU,UAAAgX,qBAAA,SAAAC,EAAA3E,GACA,GAAA,YAAA2E,EACA,OAAAnD,EAAAC,QAEA,GAAA,WAAAkD,EACA,OAAAnD,EAAAE,OAEA,GAAA,YAAAiD,EACA,OAAAnD,EAAAG,QAGA,IAAAiD,EAAAD,EAAAnW,QAAA,KACA,GAAAoW,GAAA,EAAA,CACA,IAAAC,EAAA7E,EAAAJ,cAAA+E,EAAA9U,OAAA,EAAA+U,IACA9C,EAAA9B,EAAAJ,cAAA+E,EAAA9U,OAAA+U,EAAA,IACAE,EAAA/X,KAAAuV,kBAAAlB,YAAAyD,EAAA,IAAA/C,GACAD,EAAA9U,KAAAuV,kBAAAlB,YAAAyD,GACA,OAAA,IAAAjD,EAAAkD,EAAAjD,EAAAC,GAEA,OAAA,IAAAN,EAAAzU,KAAAuV,kBAAAlB,YAAApB,EAAAJ,cAAA+E,MAEA5C,EAAArU,UAAA4W,uBAAA,SAAAvE,EAAAC,GAEA,IADA,IAAAtT,EAAA,GAAAqX,EAAA,EACApX,EAAA,EAAAC,EAAAmT,EAAAlT,OAAAF,EAAAC,EAAAD,IACAD,EAAAqX,KAAAhX,KAAA2X,qBAAA3E,EAAApT,GAAAqT,GAEA,OAAAtT,GAEAqV,EAAArU,UAAAqX,iBAAA,SAAA/E,EAAAD,EAAAxP,EAAAyG,GACA,GAAA,iBAAA+I,EACA,OAAAhT,KAAAiY,mBAAAjF,EAAAC,GAEAjT,KAAAsX,aAAA/X,EAAA4C,UAAA6B,0BAAAgP,EAAAxP,EAAAyG,EAAA,KAAAgJ,IAOA+B,EAAArU,UAAAsX,mBAAA,SAAAC,EAAAjF,QACA,IAAAA,IAAAA,EAAA,IAAAX,EAAA4F;CACA,IAAAN,EAAA5X,KAAA2X,qBAAAO,EAAAjF,GACAsD,EAAAvW,KAAAyV,UAAAmC,EAAAzT,IACA,IAAAoS,EACA,MAAA,IAAA5R,MAAA,qEAAAuT,EAAA,gDAEA,IAAA3B,EAAAxC,aACA,MAAA,IAAApP,MAAA,qEAAAuT,EAAA,wDAEA,GAAA3B,EAAA3Q,MACA,MAAA2Q,EAAA3Q,MAEA,OAAA2Q,EAAAtV,SAEA+T,EAAArU,UAAAwX,UAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAtY,KAAAwV,QAAA9L,oBAEA1J,KAAAwV,QADA6C,EACA,IAAA9Y,EAAAsH,cAAA7G,KAAA+G,KAAAqR,GAGApY,KAAAwV,QAAA9M,cAAA0P,GAEApY,KAAAwV,QAAA9L,sBAAA4O,IACAtY,KAAA8V,UAAA,OAGAd,EAAArU,UAAAyK,UAAA,WACA,OAAApL,KAAAwV,SAMAR,EAAArU,UAAA4X,QAAA,SAAA1S,GACA,GAAA,OAAA7F,KAAA6V,6BAAA,CACA,IAAA2C,EAAAxY,KAAA6V,6BACA7V,KAAA6V,6BAAA,KAEA7V,KAAAsX,aAAAtX,KAAAuV,kBAAAf,eAAA3O,GAAA2S,EAAAxF,aAAAwF,EAAAhV,SAAA,KAAAgV,EAAA1T,SAGAkQ,EAAArU,UAAA8X,iBAAA,SAAA5S,EAAA6S;AACA,IAAAvQ,EAAAnI,KACA2T,EAAA3T,KAAAuV,kBAAAf,eAAA3O,GACAC,GAAA9F,KAAA2V,sBAAA9P,IAAA,IAAA2R,KAAA,SAAAmB,GAAA,OAAAxQ,EAAAoN,kBAAAf,eAAAmE,MACAjU,EAAAnF,EAAAkF,YAAAiU,GAIA,OAHAhU,EAAAgB,MAAA,UACAhB,EAAAmB,SAAA8N,EACAjP,EAAAoB,SAAAA,EACApB,GAMAsQ,EAAArU,UAAAiY,aAAA,SAAA/S,EAAAnB,GACA,IAAAkB,EAAA5F,KAAAyY,iBAAA5S,EAAAnB,GACA1E,KAAAyV,UAAA5P,KACA7F,KAAAyV,UAAA5P,GAAA,IAAAmG,EAAAnG,EAAA7F,KAAAuV,kBAAAf,eAAA3O,GAAA,IAAA,eAAA,cAAA,OAIA,IADA,IAAAgT,EAAA,GACAjZ,EAAA,EAAAC,EAAAG,KAAAuV,kBAAAjB,iBAAA1U,EAAAC,EAAAD,IACAiZ,EAAAjZ,IAAA,EAEA,IAAAkZ,GAAA,EACAC,EAAA,GAGA,IAFAA,EAAA7W,KAAA2D,GACAgT,EAAAhT,IAAA,EACAkT,EAAAjZ,OAAA,GAAA,CACA,IAAAkZ,EAAAD,EAAAE,QACA1C,EAAAvW,KAAAyV,UAAAuD,GACAzC,IACAuC,EAAAvC,EAAAzC,kBAAAlO,IAAAkT,GAEA,IAAAI,EAAAlZ,KAAA2V,sBAAAqD,GACA,GAAAE,EACA,IAAAtZ,EAAA,EAAAC,EAAAqZ,EAAApZ,OAAAF,EAAAC,EAAAD,IAAA,CACA,IAAAuZ,EAAAD,EAAAtZ,GACAiZ,EAAAM,KACAJ,EAAA7W,KAAAiX,GACAN,EAAAM,IAAA,IAKAL,GACA9Y,KAAAwV,QAAA/P,QAAAG,IASAoP,EAAArU,UAAAyY,mBAAA,SAAAC,EAAAC,GACA,IAAAjR,EAAArI,KAAAyV,UAAA4D,GACA,IAAAhR,EACA,OAAA,EAGA,IADA,IAAAkR,EAAA,GACA3Z,EAAA,EAAAC,EAAAG,KAAAuV,kBAAAjB,iBAAA1U,EAAAC,EAAAD,IACA2Z,EAAA3Z,IAAA,EAEA,IAAAmZ,EAAA,GAIA,IAFAA,EAAA7W,KAAAmG,GACAkR,EAAAF,IAAA,EACAN,EAAAjZ,OAAA,GAAA,CAEA,IACAkT,EADA+F,EAAAE,QACAjG,aACA,GAAAA,EAEA,IAAApT,EAAA,EAAAC,EAAAmT,EAAAlT,OAAAF,EAAAC,EAAAD,IAAA;AACA,IAAAgY,EAAA5E,EAAApT,GACA,GAAAgY,EAAAzT,KAAAmV,EAEA,OAAA,EAEA,IAAAE,EAAAxZ,KAAAyV,UAAAmC,EAAAzT,IACAqV,IAAAD,EAAA3B,EAAAzT,MAEAoV,EAAA3B,EAAAzT,KAAA,EACA4U,EAAA7W,KAAAsX,KAMA,OAAA,GAQAxE,EAAArU,UAAA8Y,eAAA,SAAAJ,EAAAC,EAAAI,GACA,GAAAL,IAAAC,GAAA,KAAAI,EACA,MAAA,CAAAL,GAEA,IAAAhR,EAAArI,KAAAyV,UAAA4D,GACA,IAAAhR,EACA,OAAA,KAGA,IAAA2K,EAAA3K,EAAA2K,aACA,GAAAA,EACA,IAAA,IAAApT,EAAA,EAAAC,EAAAmT,EAAAlT,OAAAF,EAAAC,EAAAD,IAAA,CACA,IAAAyG,EAAArG,KAAAyZ,eAAAzG,EAAApT,GAAAuE,GAAAmV,EAAAI,EAAA,GACA,GAAA,OAAArT,EAEA,OADAA,EAAAnE,KAAAmX,GACAhT,EAIA,OAAA,MAKA2O,EAAArU,UAAAgZ,eAAA,SAAA1G,GACA,IAAA9K,EAAAnI,KACAL,EAAA,SAAAqT,EAAAxP,EAAAyG,GACA,OAAA9B,EAAA6P,iBAAA/E,EAAAD,EAAAxP,EAAAyG,IASA,OAPAtK,EAAAia,MAAA,SAAAzV,GACA,OAAAgE,EAAAqN,QAAAlM,aAAA2J,EAAAJ,cAAA1O,KAEAxE,EAAAka,SAAA,WACA,OAAA1R,EAAAkP,mBAEA1X,EAAAma,iBAAAva,EAAAW,OAAAiH,YACAxH,GAEAqV,EAAArU,UAAAoZ,YAAA,SAAAlU,GACA,IAAAsC,EAAAnI,KACA,IAAAA,KAAAyV,UAAA5P,KAAA7F,KAAA0V,eAAA7P,GAAA,CAIA7F,KAAA0V,eAAA7P,IAAA,EACA,IAAA8N,EAAA3T,KAAAuV,kBAAAf,eAAA3O,GACAT,EAAApF,KAAAwV,QAAApM,gBAAAuK,GAEA3T,KAAA+G,KAAAO,UAAA,IAAAqM,EAAAlS,QAAA,MADA,oBACAoB,KAAA8Q,KACAvO,EAAAlD,KAAA,QAAAyR,GAEA,IAAAqG,GAAA,EACAC,EAAA,SAAAvV,GAEA,KADAsV,GACA5U,EAAAtF,OAEAqI,EAAAyQ,aAAA/S,EAAAnB,OAEA,CACA,IAAAwV,EAAA9U,EAAA4U,GACAG,EAAAhS,EAAAoE;CACA,GAAApE,EAAAqN,QAAArQ,WAAA,WAAA+U,EAIA,OAHA/R,EAAA4N,eAAAlQ,GAAAqU,EACA/R,EAAAmP,aAAAnP,EAAAoN,kBAAAf,eAAA3O,GAAA,GAAA,KAAA,KAAA,WACAsC,EAAAoQ,QAAA1S,GAGAsU,EAAAlY,OAAA,GAAAiY,GACA/R,EAAAyB,cAAAE,KAAA3B,EAAA+R,GAAA,WACA/R,EAAAqN,QAAArQ,YACAgD,EAAA4N,eAAAlQ,GAAAqU,GAEAC,EAAAlY,OAAA,GAAAiY,GACA/R,EAAAoQ,QAAA1S,MACA,SAAAnB,GACAyV,EAAAlY,OAAA,GAAAiY,GACAD,EAAAvV,QAIAuV,EAAA,QAQAjF,EAAArU,UAAAyZ,sBAAA,SAAAC,EAAAC,GACA,IAAAnS,EAAAnI,KACA,IAAAA,KAAAyV,UAAA6E,EAAAnW,MAAAnE,KAAA0V,eAAA4E,EAAAnW,IAAA,CAIAnE,KAAA0V,eAAA4E,EAAAnW,KAAA,EAEA,IAAA2F,EAAA,SAAA/F,GACAoE,EAAAmP,aAAAnP,EAAAoN,kBAAAf,eAAA8F,EAAAnW,IAAA,GAAAJ,EAAA,KAAA,OAEA+F,EAAAlE,MAAA,SAAAlB,GACAyD,EAAAqN,QAAA/P,QAAA0C,EAAAsQ,iBAAA6B,EAAAnW,GAAAO,KAEA2V,EAAAvQ,KAAAwQ,EAAAvF,YAAA/U,KAAA2Z,eAAArH,EAAAQ,MAAAhJ,EAAA9J,KAAAwV,QAAA7M,uBAKAqM,EAAArU,UAAA+W,SAAA,SAAA1W,GACA,IAAAmH,EAAAnI,KACAgT,EAAAhS,EAAAgS,aACA,GAAAA,EACA,IAAA,IAAApT,EAAA,EAAAC,EAAAmT,EAAAlT,OAAAF,EAAAC,EAAAD,IAAA,CACA,IAAAgY,EAAA5E,EAAApT,GACA,GAAAgY,IAAAnD,EAAAC,QAKA,GAAAkD,IAAAnD,EAAAE,OAIA,GAAAiD,IAAAnD,EAAAG,QAAA,CAIA,IAAA4E,EAAAxZ,KAAAyV,UAAAmC,EAAAzT,IACA,GAAAqV,GAAAA,EAAAzF,aAAA,CACA,GAAAyF,EAAA5T,MAEA,YADA5E,EAAA8S,kBAAA0F,EAAA5T,OAGA5E,EAAAqS;MAGA,GAAArT,KAAAoZ,mBAAAxB,EAAAzT,GAAAnD,EAAAmD,IAAA,CACAwB,QAAAyM,KAAA,wCAAApS,KAAAuV,kBAAAf,eAAAoD,EAAAzT,IAAA,UAAAnE,KAAAuV,kBAAAf,eAAAxT,EAAAmD,IAAA,+BACA,IAAAoW,EAAAva,KAAAyZ,eAAA7B,EAAAzT,GAAAnD,EAAAmD,GAAA,IAAA,GACAoW,EAAAC,UACAD,EAAArY,KAAA0V,EAAAzT,IACAwB,QAAAyM,KAAAmI,EAAA/C,KAAA,SAAArT,GAAA,OAAAgE,EAAAoN,kBAAAf,eAAArQ,MAAAyM,KAAA,WAEA5P,EAAAqS,mCAMA,GAFArT,KAAA2V,sBAAAiC,EAAAzT,IAAAnE,KAAA2V,sBAAAiC,EAAAzT,KAAA,GACAnE,KAAA2V,sBAAAiC,EAAAzT,IAAAjC,KAAAlB,EAAAmD,IACAyT,aAAA/C,EAAA,CACA,IAAAwF,EAAAra,KAAAyV,UAAAmC,EAAA9C,UACA,GAAAuF,GAAAA,EAAAtG,aAAA,CACA/T,KAAAoa,sBAAAC,EAAApZ,QAAA2W,GACA,SAGA,IAAA6C,EAAAza,KAAA4V,4BAAAhV,IAAAgX,EAAA9C,UACA2F,IACAA,EAAA,GACAza,KAAA4V,4BAAArB,IAAAqD,EAAA9C,SAAA2F,IAEAA,EAAAvY,KAAA0V,GACA5X,KAAA+Z,YAAAnC,EAAA9C,eAGA9U,KAAA+Z,YAAAnC,EAAAzT,SAzCAnD,EAAAqS,mCAJArS,EAAAqS,mCALArS,EAAAoS,iBAAA,EACApS,EAAAqS;AAoDA,IAAArS,EAAAqS,6BACArT,KAAA0a,kBAAA1Z,IAGAgU,EAAArU,UAAA+Z,kBAAA,SAAA1Z,GACA,IAAAmH,EAAAnI,KACAsM,EAAAtM,KAAAuM,cACA,IAAAvL,EAAA+S,aAAA,CAIA,IAAAf,EAAAhS,EAAAgS,aACAY,EAAA,GACA,GAAAZ,EACA,IAAA,IAAApT,EAAA,EAAAC,EAAAmT,EAAAlT,OAAAF,EAAAC,EAAAD,IAAA,CACA,IAAAgY,EAAA5E,EAAApT,GACA,GAAAgY,IAAAnD,EAAAC,QAIA,GAAAkD,IAAAnD,EAAAE,OASA,GAAAiD,IAAAnD,EAAAG,QAAA,CAIA,IAAA4E,EAAAxZ,KAAAyV,UAAAmC,EAAAzT,IAEAyP,EAAAhU,GADA4Z,EACAA,EAAAvY,QAGA,UARA2S,EAAAhU,GAAAI,KAAA2Z,eAAA3Y,EAAAiS,uBATAW,EAAAhU,GAAA,CACAuE,GAAAnD,EAAA+R,MACA1N,OAAA,WACA,OAAA8C,EAAAqN,QAAAhM,mBAAAxI,EAAA+R,cAPAa,EAAAhU,GAAAoB,EAAAC,QAwBAD,EAAA6S,SAAAvH,EAAAtM,KAAAwV,QAAA5B,GAEA,IAAAsF,EAAAlZ,KAAA2V,sBAAA3U,EAAAmD,IAEA,GADAnE,KAAA2V,sBAAA3U,EAAAmD,IAAA,KACA+U,EAGA,IAAAtZ,EAAA,EAAAC,EAAAqZ,EAAApZ,OAAAF,EAAAC,EAAAD,IAAA,CACA,IAAA+a,EAAAzB,EAAAtZ,GACAgb,EAAA5a,KAAAyV,UAAAkF,GACAC,EAAAvH,8BACA,IAAAuH,EAAAvH,6BACArT,KAAA0a,kBAAAE,GAIA,IAAAH,EAAAza,KAAA4V,4BAAAhV,IAAAI,EAAAmD,IACA,GAAAsW,EAAA,CAGAza,KAAA4V,4BAAAiF,OAAA7Z,EAAAmD,IAEA,IAAAvE,EAAA,EAAAC,EAAA4a,EAAA3a,OAAAF,EAAAC,EAAAD,IACAI,KAAAoa,sBAAApZ,EAAAC,QAAAwZ,EAAA7a,OAIAoV,EA1iBA,GA4iBAzV,EAAAyV,cAAAA,EA3uBA,CA4uBAzV,IAAAA,EAAA,KAGA,SAAAA,GACA,IAAAuH,EAAA,IAAAvH,EAAAY,YACA4J,EAAA,KACA+Q,EAAA,SAAA3W,EAAA6O,EAAAxP;AACA,iBAAAW,IACAX,EAAAwP,EACAA,EAAA7O,EACAA,EAAA,MAEA,iBAAA6O,GAAAnP,MAAAC,QAAAkP,KACAxP,EAAAwP,EACAA,EAAA,MAEAA,IACAA,EAAA,CAAA,UAAA,UAAA,WAEA7O,EACA4F,EAAAuN,aAAAnT,EAAA6O,EAAAxP,EAAA,KAAA,MAGAuG,EAAA2E,6BAAAsE,EAAAxP,IAGAsX,EAAA9K,IAAA,CACA+K,QAAA,GAEA,IAAAC,EAAA,SAAA5C,EAAAC,QACA,IAAAA,IAAAA,GAAA,GACAtO,EAAAoO,UAAAC,EAAAC,IAEA4C,EAAA,WACA,GAAA,IAAAlL,UAAAjQ,OAAA,CACA,GAAAiQ,UAAA,aAAAtP,SAAAoD,MAAAC,QAAAiM,UAAA,IAEA,YADAiL,EAAAjL,UAAA,IAGA,GAAA,iBAAAA,UAAA,GACA,OAAAhG,EAAAkO,mBAAAlI,UAAA,IAGA,GAAA,IAAAA,UAAAjQ,QAAA,IAAAiQ,UAAAjQ,SACA+D,MAAAC,QAAAiM,UAAA,IAKA,MAAA,IAAApL,MAAA,6BAJAoF,EAAAuN,aAAA/X,EAAA4C,UAAA6B,0BAAA+L,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,OAsBA,SAAAmL,IACA,QAAA,IAAA3b,EAAAW,OAAAiN,SAAA,oBAAAA,QAAA,CACA,IAAAgO,EAAA5b,EAAAW,OAAAiN,SAAAA,QACA,GAAA,mBAAAgO,GAAA,mBAAAA,EAAA7N,QAAA,CAEA,IAAAnG,EAAA,SAAAiU,GACArR,EAAAwC,cAAAtK,OAAA,GAAAmZ,GACA,IACA,OAAAD,EAAAC,GAEA,QACArR,EAAAwC,cAAAtK,OAAA,GAAAmZ,KAGA7b,EAAAW,OAAAiH,YAAAA,EACA8T,EAAA9T,YAAAA,EACA8T,EAAAnB,iBAAA3S;AAGAL,EAAAQ,SAAAR,EAAAqJ,oBACAnP,OAAAC,QAAAga,EACA9N,QAAA8N,IAGAnU,EAAAqJ,qBACA5Q,EAAAW,OAAAZ,OAAAwb,GAEAvb,EAAAW,OAAAiN,QAAA8N,GA3CAA,EAAA5V,OAAA2V,EACAC,EAAA7P,UAAA,WACA,OAAArB,EAAAqB,YAAAzC,qBAEAsS,EAAA/E,MAAA,WACAnM,EAAAA,EAAAmM,SAEA+E,EAAAlE,aAAA,WACA,OAAAhN,EAAAgN,gBAEAkE,EAAApB,SAAA,WACA,OAAA9P,EAAAsN,mBAEA4D,EAAA3b,OAAA,WACA,OAAAwb,EAAA7M,MAAA,KAAA8B,YAgCAxQ,EAAA2b,KAAAA,EACA,mBAAA3b,EAAAW,OAAAZ,QAAAC,EAAAW,OAAAZ,OAAA0Q,MACAjG,EAAA,IAAAxK,EAAAyV,cAAAlO,EAAAvH,EAAA8S,mBAAAvL,GAAAgU,EAAAG,EAAA1b,EAAA4C,UAAAC,oCAEA,IAAA7C,EAAAW,OAAAiN,SAAA,mBAAA5N,EAAAW,OAAAiN,SACA8N,EAAA5V,OAAA9F,EAAAW,OAAAiN,UAGA7N,EAAA,WACA,OAAAwb,EAAA7M,MAAA,KAAA8B,aAEAC,IAAA8K,EAAA9K,IACA,oBAAAqL,iBACAH,KA3GA,CA8GA3b,IAAAA,EAAA,mGCrwDA,IAAA+b,EAAA,WA8BC,SAAAA,EAAYC,EAAuBC,EAAwBC,EAAuBC,GAEjF1b,KAAKub,cAAgBA,EACrBvb,KAAKwb,eAAiBA,EACtBxb,KAAKyb,cAAgBA,EACrBzb,KAAK0b,eAAiBA,EAgBxB,OAVQJ,EAAA3a,UAAAgb,eAAP;AACC,OAAO3b,KAAKub,cAAgBvb,KAAKwb,gBAM3BF,EAAA3a,UAAAib,eAAP,WACC,OAAO5b,KAAKyb,cAAgBzb,KAAK0b,gBAEnCJ,EAnDA,GAAara,EAAAqa,WAAAA,kbCMb,IAAAO,EAAA,WAIC,SAAAA,IAEC7b,KAAK8b,UAAY,GAEjB9b,KAAK+b,uBAAyB,SAAUhR,GACvCwG,YAAW,WACV,GAAIxG,EAAEjG,MACL,MAAM,IAAIH,MAAMoG,EAAEnG,QAAU,OAASmG,EAAEjG,OAGxC,MAAMiG,IACJ,IAuCN,OAnCQ8Q,EAAAlb,UAAAqb,YAAP,SAAmBC,GAAnB,IAAA9T,EAAAnI,KAGC,OAFAA,KAAK8b,UAAU5Z,KAAK+Z,GAEb,WACN9T,EAAK+T,gBAAgBD,KAIfJ,EAAAlb,UAAAwb,KAAR,SAAapR,GACZ/K,KAAK8b,UAAUM,SAAQ,SAACH,GACvBA,EAASlR,OAIH8Q,EAAAlb,UAAAub,gBAAR,SAAwBD;AACvBjc,KAAK8b,UAAUO,OAAOrc,KAAK8b,UAAUra,QAAQwa,GAAW,IAGlDJ,EAAAlb,UAAA2b,0BAAP,SAAiCC,GAChCvc,KAAK+b,uBAAyBQ,GAGxBV,EAAAlb,UAAA6b,0BAAP,WACC,OAAOxc,KAAK+b,wBAGNF,EAAAlb,UAAA8b,kBAAP,SAAyB1R,GACxB/K,KAAK+b,uBAAuBhR,GAC5B/K,KAAKmc,KAAKpR,IAIJ8Q,EAAAlb,UAAA+b,0BAAP,SAAiC3R,GAChC/K,KAAK+b,uBAAuBhR,IAE9B8Q,EAtDA,GAAa5a,EAAA4a,aAAAA,EAwDA5a,EAAA0b,aAAe,IAAId,EAEhC5a,EAAAqb,0BAAA,SAA0CC,GACzCtb,EAAA0b,aAAaL,0BAA0BC,IAGxCtb,EAAAwb,kBAAA,SAAkC1R,GAE5B6R,EAAuB7R,IAC3B9J,EAAA0b,aAAaF,kBAAkB1R,IAKjC9J,EAAAyb,0BAAA,SAA0C3R,GAEpC6R,EAAuB7R,IAC3B9J,EAAA0b,aAAaD,0BAA0B3R,IAczC9J,EAAA4b,+BAAA,SAA+CjX,GAC9C,OAAIA,aAAiBjB,MAGb,CACNmY,UAAU,EACVC,KAJKnX,EAAAmX,KAKLnY,QALWgB,EAAAhB,QAMXE,MAL2Bc,EAAOoX,YAAoBpX,EAAOd,OAUxDc,GAqBR,IAAMqX,EAAe,WAKrB,SAAgBL,EAAuBhX,GACtC,OAAOA,aAAiBjB,OAASiB,EAAMmX,OAASE,GAAgBrX,EAAMhB,UAAYqY,EADnFhc,EAAA2b,uBAAAA,EAOA3b,EAAAic,SAAA,WACC,IAAMtX,EAAQ,IAAIjB,MAAMsY,GAExB,OADArX,EAAMmX,KAAOnX,EAAMhB,QACZgB;AAGR3E,EAAAkc,gBAAA,SAAgCJ,GAC/B,OAAIA,EACI,IAAIpY,MAAM,qBAAqBoY,GAE/B,IAAIpY,MAAM,qBAInB1D,EAAAmc,aAAA,SAA6BL,GAC5B,OAAIA,EACI,IAAIpY,MAAM,kBAAkBoY,GAE5B,IAAIpY,MAAM,kBAInB1D,EAAAoc,SAAA,SAAyBN,GACxB,OAAOA,EACJ,IAAIpY,MAAM,sBAAsBoY,EAAI,uBACpC,IAAIpY,MAAM,wCAGd1D,EAAAqc,SAAA,SAAyBlC,GACxB,IAAMzb,EAAS,IAAIgF,MAASyW,EAAI,sBAEhC,OADAzb,EAAOod,KAAO,WACPpd,GAGRsB,EAAAsc,gBAAA,SAAgC7Y,GAC/B,OAAKA,EAIDA,EAAIE,QACAF,EAAIE,QAGRF,EAAII,MACAJ,EAAII,MAAM0J,MAAM,MAAM,GAGvB3J,OAAOH,GAXN,SAcT,IAAA8Y,EAAA,SAAAC,GACC,SAAAD,EAAY5Y,GAAZ,IAAAuD,EACCsV,EAAAxN,KAAAjQ,KAAM,mBAAiBA,YACnB4E,IACHuD,EAAKvD,QAAUA,KAGlB,OAPyC8Y,EAAAF,EAAAC,GAOzCD,EAPA,CAAyC7Y,OAA5B1D,EAAAuc,oBAAAA;;wHC9Hb,SAAgBG,EAAqBC,EAAyBC,GAC7D,IAAIC,EAAM,EAAGC,EAAOH,EAAM9d,OAC1B,GAAa,IAATie,EACH,OAAO,EAER,KAAOD,EAAMC,GAAM,CAClB,IAAMC,EAAMvW,KAAKwW,OAAOH,EAAMC,GAAQ,GAClCF,EAAED,EAAMI,IACXD,EAAOC,EAEPF,EAAME,EAAM,EAGd,OAAOF,EASR,SAAgBI,EAAaxR,EAAWyR,GAEvC,OAyBD,SAASC,EAAS5V,EAAQ2V,EAAqBE,EAAYC,EAAYC,GACtE,GAAID,GAAMD,EACT,OAED,IAAML,EAAMK,GAAOC,EAAKD,GAAM,EAAK,EACnCD,EAAM5V,EAAG2V,EAASE,EAAIL,EAAKO,GAC3BH,EAAM5V,EAAG2V,EAASH,EAAM,EAAGM,EAAIC,GAC/B,GAAIJ,EAAQ3V,EAAEwV,GAAMxV,EAAEwV,EAAM,KAAO,EAIlC,QAjCF,SAAmBxV,EAAQ2V,EAAqBE,EAAYL,EAAaM,EAAYC,GAEpF,IADA,IAAIC,EAAUH,EAAII,EAAWT,EAAM,EAC1Bpe,EAAIye,EAAIze,GAAK0e,EAAI1e,IACzB2e,EAAI3e,GAAK4I,EAAE5I,GAEZ,IAASA,EAAIye,EAAIze,GAAK0e,EAAI1e,IACrB4e,EAAUR,EAEbxV,EAAE5I,GAAK2e,EAAIE,KACDA,EAAWH,EAErB9V,EAAE5I,GAAK2e,EAAIC,KACDL,EAAQI,EAAIE,GAAWF,EAAIC,IAAY,EAEjDhW,EAAE5I,GAAK2e,EAAIE,KAGXjW,EAAE5I,GAAK2e,EAAIC,KAkBbE,CAAOlW,EAAG2V,EAASE,EAAIL,EAAKM,EAAIC,GAvChCH,CAAM1R,EAAMyR,EAAS,EAAGzR,EAAK5M,OAAS,EAAG,IAClC4M,EA+DR,SAAgBiS,EAAcC,EAA0BC,EAAyBV,GAChF,IAAMxe,EAA8B,GAEpC,SAASmf,EAAWC,EAAeC,EAAqBC,SACvD,GAAoB,IAAhBD,GAAyC,IAApBC,EAASnf,OAAlC,CAIA,IAAMof,EAASvf,EAAOA,EAAOG,OAAS,GAElCof,GAAUA,EAAOH,MAAQG,EAAOF,cAAgBD,GACnDG,EAAOF,aAAeA,GACtB/W,EAAAiX,EAAOD,UAAS/c,KAAI+L,MAAAhG,EAAIgX,IAExBtf,EAAOuC,KAAK,CAAE6c,MAAKA,EAAEC,YAAWA,EAAEC,SAAQA,KAO5C,IAHA,IAAIE,EAAY,EACZC,EAAW,IAEF,CACZ,GAAID,IAAcP,EAAO9e,OAAQ,CAChCgf,EAAWK,EAAW,EAAGN,EAAMjS,MAAMwS,IACrC,MAED,GAAIA,IAAaP,EAAM/e,OAAQ,CAC9Bgf,EAAWK,EAAWP,EAAO9e,OAASqf,EAAW,IACjD,MAGD,IAAME,EAAgBT,EAAOO,GACvBG,EAAeT,EAAMO,GACrBG,EAAIpB,EAAQkB,EAAeC,GACvB,IAANC,GAEHJ,GAAa,EACbC,GAAY,GACFG,EAAI,GAEdT,EAAWK,EAAW,EAAG,IACzBA,GAAa,GACHI,EAAI,IAEdT,EAAWK,EAAW,EAAG,CAACG,IAC1BF,GAAY,GAId,OAAOzf,EA4ER,SAAS6f,EAAW5B,EAAyBO,EAAiCxe,EAAaC,EAAW2W,GACrG,mBAAWgJ;AACV,IAAME,EAAU7B,EAAMhe,GACtB,GAAIue,EAAQsB,EAAS9f,EAAO4f,EAAI,IAAM,EAAG,CACxC5f,EAAO+f,MACP,IAAM5W,EAAI6U,EAAkBhe,GAAQ,SAAAoL,GAAK,OAAAoT,EAAQsB,EAAS1U,GAAK,KAC/DpL,EAAO0c,OAAOvT,EAAG,EAAG2W,KALXF,EAAI5f,EAAOG,OAAQF,EAAI2W,EAAG3W,MAA1B2f,GA2HZ,SAAgBI,EAAc/B,EAAyBgC,GACtD,IAAK,IAAIhgB,EAAI,EAAGA,EAAIge,EAAM9d,OAAQF,IAAK,CAGtC,GAAIggB,EAFYhC,EAAMhe,IAGrB,OAAOA,EAIT,OAAQ,mDAlZTqB,EAAA4e,KAAA,SAAwBjC,EAAqB2B,GAC5C,YAD4C,IAAAA,IAAAA,EAAA,GACrC3B,EAAMA,EAAM9d,QAAU,EAAIyf,KAGlCte,EAAA6e,MAAA,SAAyBC,GACxB,GAAmB,IAAfA,EAAIjgB,OACP,MAAM,IAAI6E,MAAM,qBAGjB,MAAO,CAACob,EAAInT,MAAM,EAAGmT,EAAIjgB,OAAS,GAAIigB,EAAIA,EAAIjgB,OAAS,KAGxDmB,EAAAkR,OAAA,SAA0B6N,EAAmCC,EAAqCC,GACjG,QADiG,IAAAA,IAAAA,EAAA,SAAuC1X,EAAGC,GAAM,OAAAD,IAAMC,IACnJuX,IAAQC,EACX,OAAO,EAGR,IAAKD,IAAQC,EACZ,OAAO,EAGR,GAAID,EAAIlgB,SAAWmgB,EAAMngB,OACxB,OAAO,EAGR,IAAK,IAAIF,EAAI,EAAGC,EAAMmgB,EAAIlgB,OAAQF,EAAIC,EAAKD,IAC1C,IAAKsgB,EAAWF,EAAIpgB,GAAIqgB,EAAMrgB,IAC7B,OAAO,EAIT,OAAO,GAGRqB,EAAAkf,aAAA,SAAgCvC,EAAyBna,EAAQ2c,GAIhE,IAHA,IAAItC,EAAM,EACTC,EAAOH,EAAM9d,OAAS,EAEhBge,GAAOC,GAAM,CACnB,IAAMC,GAAQF,EAAMC,GAAQ,EAAK,EAC3BsC,EAAOD,EAAWxC,EAAMI,GAAMva,GACpC,GAAI4c,EAAO,EACVvC,EAAME,EAAM,MACN,CAAA,KAAIqC,EAAO,GAGjB,OAAOrC,EAFPD,EAAOC,EAAM,GAKf,QAASF,EAAM,IAQhB7c,EAAA0c,kBAAAA,EAsBA1c,EAAAid,UAAAA,EA4CAjd,EAAAqf,QAAA,SAA2B5T,EAAwByR,GAGlD,IAFA,IAAMxe,EAAgB,GAClB4gB,OAAgCja,EACd0B,EAAA,EAAAC,EAAAiW,EAAUxR,EAAKE,MAAM,GAAIuR,GAAzBnW,EAAAC,EAAAnI,OAAAkI,IAAmC,CAApD,IAAMyX,EAAOxX,EAAAD,GACZuY,GAAsD,IAAtCpC,EAAQoC,EAAa,GAAId,GAI7Cc,EAAare,KAAKud,IAHlBc,EAAe,CAACd,GAChB9f,EAAOuC,KAAKqe,IAKd,OAAO5gB,GAURsB,EAAA0d,WAAAA,EAwDA1d,EAAAuf,MAAA,SAAyB5B,EAA0BC,EAAyBV;AAK3E,IAJA,IACMsC,EAAe,GACfC,EAAa,GAEE1Y,EAAA,EAAA2Y,EAJLhC,EAAWC,EAAQC,EAAOV,GAIrBnW,EAAA2Y,EAAA7gB,OAAAkI,IAAS,CAAzB,IAAMqU,EAAMsE,EAAA3Y,GAChByY,EAAQve,KAAI+L,MAAZwS,EAAgB7B,EAAOhS,MAAMyP,EAAO0C,MAAO1C,EAAO0C,MAAQ1C,EAAO2C,cACjE0B,EAAMxe,KAAI+L,MAAVyS,EAAcrE,EAAO4C,UAGtB,MAAO,CAAEwB,QAAOA,EAAEC,MAAKA,IAaxBzf,EAAA2f,IAAA,SAAuBhD,EAAyBO,EAAiCoB,GAChF,GAAU,IAANA,EACH,MAAO,GAER,IAAM5f,EAASie,EAAMhR,MAAM,EAAG2S,GAAGhX,KAAK4V,GAEtC,OADAqB,EAAQ5B,EAAOO,EAASxe,EAAQ4f,EAAG3B,EAAM9d,QAClCH,GAgBRsB,EAAA4f,SAAA,SAA4BjD,EAAYO,EAAiCoB,EAAWuB,EAAeC,GAAnG,IAAA5Y,EAAAnI,KACC,OAAU,IAANuf,EACIyB,QAAQ1T,QAAQ,IAGjB,IAAI0T,SAAQ,SAAC1T,EAAS2T,GAC3BC,EAAA/Y,OAAA,OAAA,GAAA,yEACMgZ,EAAIvD,EAAM9d,OACVH,EAASie,EAAMhR,MAAM,EAAG2S,GAAGhX,KAAK4V,GAC7Bve,EAAI2f,EAAGhJ,EAAI9O,KAAK2Z,IAAI7B,EAAIuB,EAAOK,2BAAIvhB,EAAIuhB,EAC3CvhB,EAAI2f,EACP,CAAA,EAAM,IAAIyB,SAAQ,SAAA1T,GAAW,OAAAiE,WAAWjE,OADrC,CAAA,EAAA,GAD4C,CAAA,EAAA,UAE/CrF,EAAAoZ,wBAED,GAAIN,GAASA,EAAMO,wBAClB,MAAMC,EAAArE,WAEPsC,EAAQ5B,EAAOO,EAASxe,EAAQC,EAAG2W,2BAPe3W,EAAI2W,EAAGA,EAAI9O,KAAK2Z,IAAI7K,EAAIuK,EAAOK,gBASlF,MAAA,CAAA,EAAOxhB,UAEN6hB,KAAKlU,EAAS2T,OAkBlBhgB,EAAAwgB,SAAA,SAA4B7D,GAC3B,OAAYA,EAAM8D,QAAO,SAAA3W,GAAK,QAAEA,MAMjC9J,EAAA0gB,gBAAA,SAAmC/D,GAElC,IADA,IAAItV,EAAK,EACA1I,EAAI,EAAGA,EAAIge,EAAM9d,OAAQF,IAC3Bge,EAAMhe,KACXge,EAAMtV,GAAMsV,EAAMhe,GAClB0I,GAAM,GAGRsV,EAAM9d,OAASwI,GAMhBrH,EAAA2gB,KAAA,SAAqBhE,EAAcvV,EAAcC,GAChDsV,EAAMvB,OAAO/T,EAAI,EAAGsV,EAAMvB,OAAOhU,EAAM,GAAG;AAM3CpH,EAAA4gB,eAAA,SAA+Bte,GAC9B,OAAQM,MAAMC,QAAQP,IAAuB,IAAfA,EAAIzD,QAQnCmB,EAAA6gB,gBAAA,SAAmCve,GAClC,OAAOM,MAAMC,QAAQP,IAAQA,EAAIzD,OAAS,GAO3CmB,EAAA8gB,SAAA,SAA4BnE,EAAyBoE,GACpD,IAAKA,EACJ,OAAOpE,EAAM8D,QAAO,SAACjC,EAASwC,GAC7B,OAAOrE,EAAMnc,QAAQge,KAAawC,KAIpC,IAAMC,EAAoCzhB,OAAOsH,OAAO,MACxD,OAAO6V,EAAM8D,QAAO,SAACS,GACpB,IAAM1e,EAAMue,EAAMG,GAClB,OAAID,EAAKze,KAITye,EAAKze,IAAO,GAEL,OAITxC,EAAAmhB,YAAA,SAA+BxE,GAC9B,IAAMsE,EAAO,IAAIG,IACjB,OAAOzE,EAAM8D,QAAO,SAAAjC,GACnB,OAAIyC,EAAKI,IAAI7C,KAIbyC,EAAKK,IAAI9C,IACF,OAITxe,EAAAuhB,QAAA,SAA2BjO,GAC1B,IAAM5U,EAAc,GAEpB,OADA4U,EAAI6H,SAAQ,SAAA+E,GAAK,OAAAxhB,EAAOuC,KAAKif,MACtBxhB,GAGRsB,EAAAwhB,aAAA,SAAgCT,GAC/B,IAAME,EAAoCzhB,OAAOsH,OAAO,MAExD,OAAO,SAAA0X,GACN,IAAMhc,EAAMue,EAAMvC,GAElB,OAAIyC,EAAKze,KAITye,EAAKze,IAAO,GACL,KAITxC,EAAAyhB,UAAA,SAA6B9E,EAAyBgC,GACrD,IAAK,IAAIhgB,EAAIge,EAAM9d,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAG3C,GAAIggB,EAFYhC,EAAMhe,IAGrB,OAAOA,EAIT,OAAQ,GAGTqB,EAAA0e,WAAAA,EAcA1e,EAAA0hB,MAAA,SAAyB/E,EAAyBgC,EAA0BgD,QAAA,IAAAA,IAAAA,OAAAtc,GAC3E,IAAMuc,EAAQlD,EAAW/B,EAAOgC,GAChC,OAAOiD,EAAQ,EAAID,EAAgBhF,EAAMiF,IAK1C5hB,EAAA6hB,eAAA,SAAgDlF,EAAyBgF,GACxE,OAAOhF,EAAM9d,OAAS,EAAI8d,EAAM,GAAKgF,GAGtC3hB,EAAA8hB,mBAAA,SAAsC/C,EAAuBC,EAAyB9N,QAAA,IAAAA,IAAAA,EAAA,SAAmC3J,EAAGC,GAAM,OAAAD,IAAMC,IAGvI,IAFA,IAAI9I,EAAS,EAEJC,EAAI,EAAGC,EAAM4H,KAAK2Z,IAAIpB,EAAIlgB,OAAQmgB,EAAMngB,QAASF,EAAIC,GAAOsS,EAAO6N,EAAIpgB,GAAIqgB,EAAMrgB,IAAKA,IAC9FD,IAGD,OAAOA;AAGRsB,EAAA+hB,QAAA,SAA2BjD,SAC1B,OAAO9X,EAAM,IAAIvB,OAAMuH,MAAAhG,EAAI8X,IAK5B9e,EAAAgiB,MAAA,SAAsBC,EAAa5a,GAClC,IAAID,EAAqB,iBAAPC,EAAkB4a,EAAM,EAExB,iBAAP5a,EACVD,EAAO6a,GAEP7a,EAAO,EACPC,EAAK4a,GAGN,IAAMvjB,EAAmB,GAEzB,GAAI0I,GAAQC,EACX,IAAK,IAAI1I,EAAIyI,EAAMzI,EAAI0I,EAAI1I,IAC1BD,EAAOuC,KAAKtC,QAGb,IAASA,EAAIyI,EAAMzI,EAAI0I,EAAI1I,IAC1BD,EAAOuC,KAAKtC,GAId,OAAOD,GAGRsB,EAAAkiB,KAAA,SAAwBC,EAAarf,EAAUgc,QAAA,IAAAA,IAAAA,EAAA,IAC9C,IAAK,IAAIngB,EAAI,EAAGA,EAAIwjB,EAAKxjB,IACxBmgB,EAAIngB,GAAKmE,EAGV,OAAOgc,GAKR9e,EAAA4hB,MAAA,SAA4BjF,EAAyByF,EAA2BC,GAC/E,YAD+E,IAAAA,IAAAA,EAAA,SAA4BC,GAAK,OAAAA,IACzG3F,EAAM4F,QAAO,SAAC5Q,EAAG2Q,GACvB,IAAM9f,EAAM4f,EAAQE,GAEpB,OADA3Q,EAAEnP,GAAO6f,EAAOC,EAAG3Q,EAAEnP,IACdmP,IACLnS,OAAOsH,OAAO,QAOlB9G,EAAAwiB,OAAA,SAA0B7F,EAAY6B,GAGrC,OAFA7B,EAAM1b,KAAKud,GAEJ,WACN,IAAMoD,EAAQjF,EAAMnc,QAAQge,GACxBoD,GAAS,GACZjF,EAAMvB,OAAOwG,EAAO,KASvB5hB,EAAAyiB,YAAA,SAA+BC,EAAaC,EAAqBC,GAChE,IAAMjF,EAAS+E,EAAO/W,MAAM,EAAGgX,GACzB/E,EAAQ8E,EAAO/W,MAAMgX,GAC3B,OAAOhF,EAAOlY,OAAOmd,EAAWhF,IAMjC5d,EAAA6iB,QAAA,SAA2BlG,EAAYmG,GACtC,IAAIC,EAEJ,GAAqB,iBAAVD,EAAoB,CAC9B,IAAIE,EAAOF,EAGXC,EAAO,WACN,IAAME,EAAuB,UAAnBzc,KAAK0c,IAAIF,KACnB,OAAOC,EAAIzc,KAAKwW,MAAMiG,SAGvBF,EAAOvc,KAAK0J,OAGb,IAAK,IAAIvR,EAAIge,EAAM9d,OAAS,EAAGF,EAAI,EAAGA,GAAK,EAAG,CAC7C,IAAMkJ,EAAIrB,KAAKwW,MAAM+F,KAAUpkB,EAAI,IAC7BwkB,EAAOxG,EAAMhe,GACnBge,EAAMhe,GAAKge,EAAM9U,GACjB8U,EAAM9U,GAAKsb,IAObnjB,EAAAojB,YAAA,SAA+BtE,EAAUhc,GACxC,IAAM8e,EAAQ9C,EAAIte,QAAQsC,GAEtB8e,GAAS,IACZ9C,EAAI1D,OAAOwG,EAAO,GAClB9C,EAAIuE,QAAQvgB,KAOd9C,EAAAsjB,UAAA,SAA6BxE,EAAUhc,GACtC,IAAM8e,EAAQ9C,EAAIte,QAAQsC,GAEtB8e,GAAS,IACZ9C,EAAI1D,OAAOwG,EAAO;AAClB9C,EAAI7d,KAAK6B,KAIX9C,EAAAujB,KAAA,SAAwBzE,EAAmB0E,GAC1C,IAAK,IAAI7kB,EAAI,EAAGA,EAAImgB,EAAIjgB,OAAQF,IAAK,CACpC,IAAM6f,EAAUM,EAAIngB,GACpB,GAAI6kB,EAAUhF,EAAS7f,EAAGmgB,GACzB,OAAON,IAOVxe,EAAAyjB,cAAA,SAAoCC,EAAgB/E,GACnD,OAAO/b,MAAMC,QAAQ6gB,GACpBA,EAAMnN,IAAIoI,GACVA,EAAG+E,IAGL1jB,EAAA2jB,QAAA,SAA2BV,GAC1B,OAAOrgB,MAAMC,QAAQogB,GAAKA,EAAI,CAACA,oGCnkBhCjjB,EAAA4jB,KAAA,SAAoDjF,GACnD,IAEIjgB,EAFEwI,EAAQnI,KACV8kB,GAAU,EAGd,OAAO,WACN,OAAIA,EACInlB,GAGRmlB,GAAU,EACVnlB,EAASigB,EAAG3R,MAAM9F,EAAO4H,8DCR3B,SAAgBQ,EAAKhN,EAAUwhB,GAC9B,YAD8B,IAAAA,IAAAA,EAAA,UACfxhB,GACd,IAAK,SACJ,OAAY,OAARA,EACIyhB,EAAW,IAAKD,GACblhB,MAAMC,QAAQP,IAiCTwc,EAhCExc,EAiCpB0hB,EAAiBD,EAAW,OADEC,EAhCLF,GAkClBhF,EAAIyD,QAAO,SAACuB,EAASG,GAAS,OAAA3U,EAAK2U,EAAMH,KAAUE,IAG3D,SAAoB1hB,EAAU0hB,GAE7B,OADAA,EAAiBD,EAAW,OAAQC,GAC7BxkB,OAAO0kB,KAAK5hB,GAAKgF,OAAOib,QAAO,SAACuB,EAASthB,GAE/C,OADAshB,EAAUK,EAAW3hB,EAAKshB,GACnBxU,EAAKhN,EAAIE,GAAMshB,KACpBE,GAxCMI,CAAW9hB,EAAKwhB,GACxB,IAAK,SACJ,OAAOK,EAAW7hB,EAAKwhB,GACxB,IAAK,UACJ,OAcH,SAAqBtc,EAAYwc,GAChC,OAAOD,EAAWvc,EAAI,IAAM,IAAKwc,GAfxBK,CAAY/hB,EAAKwhB,GACzB,IAAK,SACJ,OAAOC,EAAWzhB,EAAKwhB,GACxB,IAAK,YACJ,OAAOC,EAAW,EAAG,KACtB,QACC,OAAOA,EAAW,EAAG,KAoBxB,IAAmBjF,EAAYkF,EAhB/B,SAASD,EAAWO,EAAaN,GAChC,OAAUA,GAAkB,GAAKA,EAAkBM,EAAO,EAO3D,SAAgBH,EAAWI,EAAWT,GACrCA,EAAUC,EAAW,OAAQD;CAC7B,IAAK,IAAInlB,EAAI,EAAG6lB,EAASD,EAAE1lB,OAAQF,EAAI6lB,EAAQ7lB,IAC9CmlB,EAAUC,EAAWQ,EAAErW,WAAWvP,GAAImlB,GAEvC,OAAOA,mDAnCR9jB,EAAAsP,KAAAA,EA8BAtP,EAAAmkB,WAAAA,EAqBA,IAAAM,EAAA,WAAA,SAAAA,IAES1lB,KAAA2lB,OAAS,EAUlB,OARCllB,OAAAC,eAAIglB,EAAA/kB,UAAA,QAAK,KAAT,WACC,OAAOX,KAAK2lB,wCAGbD,EAAA/kB,UAAA4P,KAAA,SAAKhN,GAEJ,OADAvD,KAAK2lB,OAASpV,EAAKhN,EAAKvD,KAAK2lB,QACtB3lB,KAAK2lB,QAEdD,EAZA,GAAazkB,EAAAykB,OAAAA,6GClDb,IAAAE,EAAA,WAEC,SAAAA,EAAoBC,GAAA7lB,KAAA6lB,OAAAA,EAUrB,OARCD,EAAAjlB,UAAAmlB,YAAA,WAGC,IAFA,IAAMD,EAAS7lB,KAAK6lB,OACdE,EAAa,IAAIC,WAAWH,EAAO/lB,QAChCF,EAAI,EAAGC,EAAMgmB,EAAO/lB,OAAQF,EAAIC,EAAKD,IAC7CmmB,EAAWnmB,GAAKimB,EAAO1W,WAAWvP,GAEnC,OAAOmmB,GAETH,EAZA,GAAa3kB,EAAA2kB,mBAAAA,EAcb3kB,EAAAglB,WAAA,SAA2BC,EAAkBC,EAAkBC,GAC9D,OAAO,IAAIC,EAAQ,IAAIT,EAAmBM,GAAW,IAAIN,EAAmBO,IAAWG,YAAYF,GAAQG,SA8C5G,IAAAC,EAAA,WAAA,SAAAA,KAOA,OALeA,EAAAC,OAAd,SAAqBC,EAAoB9hB,GACxC,IAAK8hB,EACJ,MAAM,IAAI/hB,MAAMC,IAGnB4hB,EAPA,GAAavlB,EAAAulB,MAAAA,EASb,IAAAG,EAAA,WAAA,SAAAA,KA0BA,OAVeA,EAAAC,KAAd,SAAmBC,EAAoBC,EAAqBC,EAAyBC,EAA0BlnB,GAC9G,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAC3BmnB,EAAiBC,EAAmBpnB,GAAKinB,EAAYC,EAAclnB;AAGvD+mB,EAAAM,MAAd,SAAoBJ,EAAyBC,EAAqBC,EAA8BC,EAA0BlnB,GACzH,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAC3BmnB,EAAiBC,EAAmBpnB,GAAKinB,EAAYC,EAAclnB,IAGtE+mB,EA1BA,GAAa1lB,EAAA0lB,QAAAA,EAoDb,IAAAO,EAAA,WAWC,SAAAA,IACClnB,KAAKmnB,UAAY,GACjBnnB,KAAKonB,gBAAe,WACpBpnB,KAAKqnB,gBAAe,WACpBrnB,KAAKsnB,gBAAkB,EACvBtnB,KAAKunB,gBAAkB,EA4EzB,OAtEQL,EAAAvmB,UAAA6mB,eAAP,YAEKxnB,KAAKsnB,gBAAkB,GAAKtnB,KAAKunB,gBAAkB,IAEtDvnB,KAAKmnB,UAAUjlB,KAAK,IAAIulB,EAAAnM,WAAWtb,KAAKonB,gBAAiBpnB,KAAKsnB,gBAC7DtnB,KAAKqnB,gBAAiBrnB,KAAKunB,kBAI7BvnB,KAAKsnB,gBAAkB,EACvBtnB,KAAKunB,gBAAkB,EACvBvnB,KAAKonB,gBAAe,WACpBpnB,KAAKqnB,gBAAe,YAUdH,EAAAvmB,UAAA+mB,mBAAP,SAA0BC,EAAuBC,GAEhD5nB,KAAKonB,gBAAkB3f,KAAK2Z,IAAIphB,KAAKonB,gBAAiBO,GACtD3nB,KAAKqnB,gBAAkB5f,KAAK2Z,IAAIphB,KAAKqnB,gBAAiBO,GAEtD5nB,KAAKsnB,mBAUCJ,EAAAvmB,UAAAknB,mBAAP,SAA0BF,EAAuBC,GAEhD5nB,KAAKonB,gBAAkB3f,KAAK2Z,IAAIphB,KAAKonB,gBAAiBO,GACtD3nB,KAAKqnB,gBAAkB5f,KAAK2Z,IAAIphB,KAAKqnB,gBAAiBO,GAEtD5nB,KAAKunB,mBAMCL,EAAAvmB,UAAAmnB,WAAP;AAMC,OALI9nB,KAAKsnB,gBAAkB,GAAKtnB,KAAKunB,gBAAkB,IAEtDvnB,KAAKwnB,iBAGCxnB,KAAKmnB,WAMND,EAAAvmB,UAAAonB,kBAAP,WAOC,OANI/nB,KAAKsnB,gBAAkB,GAAKtnB,KAAKunB,gBAAkB,IAEtDvnB,KAAKwnB,iBAGNxnB,KAAKmnB,UAAU3M,UACRxa,KAAKmnB,WAGdD,EA5FA,GAkGAb,EAAA,WAgBC,SAAAA,EAAY2B,EAA6BC,EAA6BC,QAAA,IAAAA,IAAAA,EAAA,MACrEloB,KAAKmoB,4BAA8BD,EAE7B,IAAAjgB,EAAAoe,EAAA+B,aAAAJ,GAACK,EAAApgB,EAAA,GAAwBqgB,EAAArgB,EAAA,GAAwBsgB,EAAAtgB,EAAA,GACjDugB,EAAAnC,EAAA+B,aAAAH,GAACQ,EAAAD,EAAA,GAAwBE,EAAAF,EAAA,GAAwBG,EAAAH,EAAA,GAEvDxoB,KAAK4oB,YAAeL,GAAsBI,EAC1C3oB,KAAK6oB,wBAA0BR,EAC/BroB,KAAK8oB,wBAA0BR,EAC/BtoB,KAAK+oB,wBAA0BN,EAC/BzoB,KAAKgpB,wBAA0BN,EAE/B1oB,KAAKipB,iBAAmB,GACxBjpB,KAAKkpB,iBAAmB,GAkwB1B,OA/vBgB7C,EAAA8C,eAAf,SAA8BpJ,GAC7B,OAAQA,EAAIjgB,OAAS,GAAuB,iBAAXigB,EAAI,IAGvBsG,EAAA+B,aAAf,SAA4BgB,GAC3B,IAAMC,EAAWD,EAAStD,cAE1B,GAAIO,EAAQ8C,eAAeE,GAAW,CAErC,IADA,IAAMC,EAAS,IAAItD,WAAWqD,EAASvpB,QAC9BF,EAAI,EAAGC,EAAMwpB,EAASvpB,OAAQF,EAAIC,EAAKD,IAC/C0pB,EAAO1pB,GAAK2pB,EAAAnE,WAAWiE,EAASzpB,GAAI,GAErC,MAAO,CAACypB,EAAUC,GAAQ,GAG3B,OAAID,aAAoBrD,WAChB,CAAC,GAAIqD,GAAU,GAGhB,CAAC,GAAI,IAAIrD,WAAWqD,IAAW,IAG/BhD,EAAA1lB,UAAA6oB,iBAAR,SAAyB7B,EAAuB8B;AAC/C,OAAIzpB,KAAK8oB,wBAAwBnB,KAAmB3nB,KAAKgpB,wBAAwBS,MAGzEzpB,KAAK4oB,aAAc5oB,KAAK6oB,wBAAwBlB,KAAmB3nB,KAAK+oB,wBAAwBU,KAGjGpD,EAAA1lB,UAAA+oB,yBAAR,SAAiCC,EAAgBC,GAChD,OAAI5pB,KAAK8oB,wBAAwBa,KAAY3pB,KAAK8oB,wBAAwBc,MAGlE5pB,KAAK4oB,aAAc5oB,KAAK6oB,wBAAwBc,KAAY3pB,KAAK6oB,wBAAwBe,KAG1FvD,EAAA1lB,UAAAkpB,yBAAR,SAAiCF,EAAgBC,GAChD,OAAI5pB,KAAKgpB,wBAAwBW,KAAY3pB,KAAKgpB,wBAAwBY,MAGlE5pB,KAAK4oB,aAAc5oB,KAAK+oB,wBAAwBY,KAAY3pB,KAAK+oB,wBAAwBa,KAG3FvD,EAAA1lB,UAAA2lB,YAAP,SAAmBF,GAClB,OAAOpmB,KAAK8pB,aAAa,EAAG9pB,KAAK8oB,wBAAwBhpB,OAAS,EAAG,EAAGE,KAAKgpB,wBAAwBlpB,OAAS,EAAGsmB,IAQ1GC,EAAA1lB,UAAAmpB,aAAR,SAAqBvO,EAAuBwO,EAAqBtO,EAAuBuO,EAAqB5D,GAC5G,IAAM6D,EAAe,EAAC,GAClB1D,EAAUvmB,KAAKkqB,qBAAqB3O,EAAewO,EAAatO,EAAeuO,EAAaC,GAShG,OAPI7D,IAIHG,EAAUvmB,KAAKmqB,gBAAgB5D,IAGzB,CACN6D,UAAWH,EAAa,GACxB1D,QAASA,IASHF,EAAA1lB,UAAAupB,qBAAR,SAA6B3O,EAAuBwO,EAAqBtO,EAAuBuO,EAAqBC,GAIpH,IAHAA,EAAa,IAAK,EAGX1O,GAAiBwO,GAAetO,GAAiBuO,GAAehqB,KAAKwpB,iBAAiBjO,EAAeE,IAC3GF,IACAE;CAID,KAAOsO,GAAexO,GAAiByO,GAAevO,GAAiBzb,KAAKwpB,iBAAiBO,EAAaC,IACzGD,IACAC,IAID,GAAIzO,EAAgBwO,GAAetO,EAAgBuO,EAAa,CAC/D,IAAIzD,OAAO,EAwBX,OAtBI9K,GAAiBuO,GACpBxD,EAAMC,OAAOlL,IAAkBwO,EAAc,EAAG,0DAGhDxD,EAAU,CACT,IAAIkB,EAAAnM,WAAWC,EAAe,EAAGE,EAAeuO,EAAcvO,EAAgB,KAErEF,GAAiBwO,GAC3BvD,EAAMC,OAAOhL,IAAkBuO,EAAc,EAAG,0DAGhDzD,EAAU,CACT,IAAIkB,EAAAnM,WAAWC,EAAewO,EAAcxO,EAAgB,EAAGE,EAAe,MAG/E+K,EAAMC,OAAOlL,IAAkBwO,EAAc,EAAG,0DAChDvD,EAAMC,OAAOhL,IAAkBuO,EAAc,EAAG,0DAGhDzD,EAAU,IAGJA,EAIR,IAAM8D,EAAiB,CAAC,GAClBC,EAAiB,CAAC,GAClB3qB,EAASK,KAAKuqB,sBAAsBhP,EAAewO,EAAatO,EAAeuO,EAAaK,EAAgBC,EAAgBL,GAE5HO,EAAcH,EAAe,GAC7BI,EAAcH,EAAe,GAEnC,GAAe,OAAX3qB,EAGH,OAAOA,EACD,IAAKsqB,EAAa,GAAI,CAM5B,IAAMS,EAAc1qB,KAAKkqB,qBAAqB3O,EAAeiP,EAAa/O,EAAegP,EAAaR,GAClGU,EAA6B,GAYjC,OALCA,EALIV,EAAa,GAKF,CACd,IAAIxC,EAAAnM,WAAWkP,EAAc,EAAGT,GAAeS,EAAc,GAAK,EAAGC,EAAc,EAAGT,GAAeS,EAAc,GAAK,IAL1GzqB,KAAKkqB,qBAAqBM,EAAc,EAAGT,EAAaU,EAAc,EAAGT,EAAaC,GAS/FjqB,KAAK4qB,mBAAmBF,EAAaC,GAI7C,MAAO,CACN,IAAIlD,EAAAnM,WAAWC,EAAewO,EAAcxO,EAAgB,EAAGE,EAAeuO,EAAcvO,EAAgB,KAItG4K,EAAA1lB,UAAAkqB,UAAR,SAAkBC,EAA6BC,EAA8BC,EAA4BC,EACxGC,EAA6BC,EAA8BC,EAA4BC,EACvFC,EAA2BC,EAC3B5D,EAAuBoC,EAAqBM,EAC5CzC,EAAuBoC,EAAqBM,EAC5CkB,EAAsBvB,GAEtB,IAAIwB,EACAC,EAAsC,KAGtCC,EAAe,IAAIzE,EACnB0E,EAAcb,EACdc,EAAcb,EACdc,EAAoBzB,EAAe,GAAKC,EAAe,GAAMW,EAC7Dc,GAAiB,WACjBC,EAAehsB,KAAKipB,iBAAiBnpB,OAAS,EAElD,EAAG,EAEImsB,EAAWH,EAAmBhB,KAGnBc,GAAgBK,EAAWJ,GAAeP,EAAcW,EAAW,GAAKX,EAAcW,EAAW,IAGjHrE,GADAD,EAAgB2D,EAAcW,EAAW,IACTH,EAAmBb;AAC/CtD,EAAgBoE,GACnBJ,EAAanE,iBAEduE,EAAoBpE,EACpBgE,EAAa9D,mBAAmBF,EAAgB,EAAGC,GACnDkE,EAAoBG,EAAW,EAAKnB,IAIpClD,GADAD,EAAgB2D,EAAcW,EAAW,GAAK,GACdH,EAAmBb,EAC/CtD,EAAgBoE,GACnBJ,EAAanE,iBAEduE,EAAoBpE,EAAgB,EACpCgE,EAAajE,mBAAmBC,EAAeC,EAAgB,GAC/DkE,EAAoBG,EAAW,EAAKnB,GAGjCkB,GAAgB,IAEnBlB,GADAQ,EAAgBtrB,KAAKipB,iBAAiB+C,IACF,GACpCJ,EAAc,EACdC,EAAcP,EAAcxrB,OAAS,WAE5BksB,IAAiB,GAM5B,GAFAP,EAAiBE,EAAa5D,oBAE1BkC,EAAa,GAAI,CAIpB,IAAIiC,EAAqB7B,EAAe,GAAK,EACzC8B,EAAqB7B,EAAe,GAAK,EAE7C,GAAuB,OAAnBmB,GAA2BA,EAAe3rB,OAAS,EAAG,CACzD,IAAMssB,EAAoBX,EAAeA,EAAe3rB,OAAS,GACjEosB,EAAqBzkB,KAAKC,IAAIwkB,EAAoBE,EAAkBzQ,kBACpEwQ,EAAqB1kB,KAAKC,IAAIykB,EAAoBC,EAAkBxQ,kBAGrE8P,EAAiB,CAChB,IAAIjE,EAAAnM,WAAW4Q,EAAoBnC,EAAcmC,EAAqB,EACrEC,EAAoBnC,EAAcmC,EAAqB,QAEnD,CAENR,EAAe,IAAIzE,EACnB0E,EAAcT,EACdU,EAAcT,EACdU,EAAoBzB,EAAe,GAAKC,EAAe,GAAMe,EAC7DU,EAAiB,WACjBC,EAAe,EAAgBhsB,KAAKkpB,iBAAiBppB,OAAS,EAAIE,KAAKkpB,iBAAiBppB,OAAS,EAEjG,EAAG,CAEF,IAAMmsB,GAAAA,EAAWH,EAAmBZ,KAGnBU,GAAgBK,EAAWJ,GAAeN,EAAcU,EAAW,IAAMV,EAAcU,EAAW,IAGlHrE,GADAD,EAAgB4D,EAAcU,EAAW,GAAK,GACdH,EAAmBT,EAC/C1D,EAAgBoE,GACnBJ,EAAanE,iBAEduE,EAAoBpE,EAAgB,EACpCgE,EAAajE,mBAAmBC,EAAgB,EAAGC,EAAgB,GACnEkE,EAAoBG,EAAW,EAAKf,IAIpCtD,GADAD,EAAgB4D,EAAcU,EAAW,IACTH,EAAmBT,EAC/C1D,EAAgBoE,GACnBJ,EAAanE,iBAEduE,EAAoBpE,EACpBgE,EAAa9D,mBAAmBF,EAAgB,EAAGC,EAAgB,GACnEkE,EAAoBG,EAAW,EAAKf,GAGjCc,GAAgB,IAEnBd,GADAK,EAAgBvrB,KAAKkpB,iBAAiB8C,IACF,GACpCJ,EAAc,EACdC,EAAcN,EAAczrB,OAAS,WAE5BksB,IAAiB,GAI5BN,EAAiBC,EAAa7D,aAG/B,OAAO9nB,KAAK4qB,mBAAmBa,EAAgBC,IAmBxCrF,EAAA1lB,UAAA4pB,sBAAR,SAA8BhP,EAAuBwO,EAAqBtO,EAAuBuO,EAAqBK,EAA0BC,EAA0BL,GACzK,IAAItC,EAAgB,EAAGC,EAAgB,EACnCmD,EAAuB,EAAGC,EAAqB,EAC/CG,EAAuB,EAAGC,EAAqB,EAInD7P,IACAE,IAIA4O,EAAe,GAAK,EACpBC,EAAe,GAAK,EAGpBtqB,KAAKipB,iBAAmB;AACxBjpB,KAAKkpB,iBAAmB,GAMxB,IAAMmD,EAAkBtC,EAAcxO,GAAkByO,EAAcvO,GAChE6Q,EAAeD,EAAiB,EAChCf,EAAgB,IAAItF,WAAWsG,GAC/Bf,EAAgB,IAAIvF,WAAWsG,GAG/BxB,EAAuBd,EAAcvO,EACrCyP,EAAuBnB,EAAcxO,EAKrC0P,EAAyB1P,EAAgBE,EACzC4P,EAAyBtB,EAAcC,EAMvCwB,GADQN,EAAsBJ,GACP,GAAM,EAInCQ,EAAcR,GAAuBvP,EACrCgQ,EAAcL,GAAuBnB,EAGrCE,EAAa,IAAK,EAWlB,IAAK,IAAIsC,EAAiB,EAAGA,GAAmBF,EAAiB,EAAK,EAAGE,IAAkB,CAC1F,IAAIC,EAAwB,EACxBC,EAAwB,EAG5B1B,EAAuB/qB,KAAK0sB,kBAAkB5B,EAAsByB,EAAgBA,EAAgBzB,EAAqBwB,GACzHtB,EAAqBhrB,KAAK0sB,kBAAkB5B,EAAsByB,EAAgBA,EAAgBzB,EAAqBwB,GACvH,IAAK,IAAIL,EAAWlB,EAAsBkB,GAAYjB,EAAoBiB,GAAY,EAAG,CASxFrE,GAJCD,EADGsE,IAAalB,GAAyBkB,EAAWjB,GAAsBM,EAAcW,EAAW,GAAKX,EAAcW,EAAW,GACjHX,EAAcW,EAAW,GAEzBX,EAAcW,EAAW,GAAK,IAEdA,EAAWnB,GAAuBG,EAOnE,IAJA,IAAM0B,EAAoBhF,EAInBA,EAAgBoC,GAAenC,EAAgBoC,GAAehqB,KAAKwpB,iBAAiB7B,EAAgB,EAAGC,EAAgB,IAC7HD,IACAC,IAaD,GAXA0D,EAAcW,GAAYtE,EAEtBA,EAAgBC,EAAgB4E,EAAwBC,IAC3DD,EAAwB7E,EACxB8E,EAAwB7E,IAOpB4D,GAAe/jB,KAAKmlB,IAAIX,EAAWf,IAAyBqB,EAAiB,GAC7E5E,GAAiB4D,EAAcU,GAIlC,OAHA5B,EAAe,GAAK1C,EACpB2C,EAAe,GAAK1C,EAEhB+E,GAAqBpB,EAAcU,IAAyDM,GAAkB,KAE1GvsB,KAAK6qB,UAAUC,EAAqBC,EAAsBC,EAAoBC,EACpFC,EAAqBC,EAAsBC,EAAoBC,EAC/DC,EAAeC,EACf5D,EAAeoC,EAAaM,EAC5BzC,EAAeoC,EAAaM,EAC5BkB,EAAavB,GAKP,KAOX,IAAM4C,GAAyBL,EAAwBjR,GAAkBkR,EAAwBhR,GAAiB8Q,GAAkB,EAEpI,GAAyC,OAArCvsB,KAAKmoB,8BAAyCnoB,KAAKmoB,4BAA4BqE,EAAuBK,GAQzG,OANA5C,EAAa,IAAK,EAGlBI,EAAe,GAAKmC,EACpBlC,EAAe,GAAKmC,EAEhBI,EAAuB,GAAiDN,GAAkB,KAEtFvsB,KAAK6qB,UAAUC,EAAqBC,EAAsBC,EAAoBC,EACpFC,EAAqBC,EAAsBC,EAAoBC,EAC/DC,EAAeC,EACf5D,EAAeoC,EAAaM,EAC5BzC,EAAeoC,EAAaM,EAC5BkB,EAAavB,IAOd1O,IACAE,IAEO,CACN,IAAIgM,EAAAnM,WAAWC,EAAewO,EAAcxO,EAAgB,EAC3DE,EAAeuO,EAAcvO,EAAgB,KAMjD0P,EAAuBnrB,KAAK0sB,kBAAkBxB,EAAsBqB,EAAgBA,EAAgBrB,EAAqBoB,GACzHlB,EAAqBprB,KAAK0sB,kBAAkBxB,EAAsBqB,EAAgBA,EAAgBrB,EAAqBoB,GACvH,IAASL,EAAWd,EAAsBc,GAAYb,EAAoBa,GAAY,EAAG,CASxFrE,GAJCD,EADGsE,IAAad,GAAyBc,EAAWb,GAAsBG,EAAcU,EAAW,IAAMV,EAAcU,EAAW,GAClHV,EAAcU,EAAW,GAAK,EAE9BV,EAAcU,EAAW,KAETA,EAAWf,GAAuBG,EAOnE,IAJMsB,EAAoBhF,EAInBA,EAAgBpM,GAAiBqM,EAAgBnM,GAAiBzb,KAAKwpB,iBAAiB7B,EAAeC,IAC7GD,IACAC,IAOD,GALA2D,EAAcU,GAAYtE;AAKtB6D,GAAe/jB,KAAKmlB,IAAIX,EAAWnB,IAAwByB,GAC1D5E,GAAiB2D,EAAcW,GAIlC,OAHA5B,EAAe,GAAK1C,EACpB2C,EAAe,GAAK1C,EAEhB+E,GAAqBrB,EAAcW,IAAyDM,GAAkB,KAE1GvsB,KAAK6qB,UAAUC,EAAqBC,EAAsBC,EAAoBC,EACpFC,EAAqBC,EAAsBC,EAAoBC,EAC/DC,EAAeC,EACf5D,EAAeoC,EAAaM,EAC5BzC,EAAeoC,EAAaM,EAC5BkB,EAAavB,GAKP,KAOX,GAAIsC,GAAc,KAA0C,CAG3D,IAAInI,EAAO,IAAI4B,WAAWgF,EAAqBD,EAAuB,GACtE3G,EAAK,GAAK0G,EAAsBC,EAAuB,EACvDpE,EAAQM,MAAMqE,EAAeP,EAAsB3G,EAAM,EAAG4G,EAAqBD,EAAuB,GACxG/qB,KAAKipB,iBAAiB/mB,KAAKkiB,IAE3BA,EAAO,IAAI4B,WAAWoF,EAAqBD,EAAuB,IAC7D,GAAKD,EAAsBC,EAAuB,EACvDxE,EAAQM,MAAMsE,EAAeJ,EAAsB/G,EAAM,EAAGgH,EAAqBD,EAAuB,GACxGnrB,KAAKkpB,iBAAiBhnB,KAAKkiB,IAO7B,OAAOpkB,KAAK6qB,UAAUC,EAAqBC,EAAsBC,EAAoBC,EACpFC,EAAqBC,EAAsBC,EAAoBC,EAC/DC,EAAeC,EACf5D,EAAeoC,EAAaM,EAC5BzC,EAAeoC,EAAaM,EAC5BkB,EAAavB,IAYP5D,EAAA1lB,UAAAwpB,gBAAR,SAAwB5D,GAGvB,IAAK,IAAI3mB,EAAI,EAAGA,EAAI2mB,EAAQzmB,OAAQF,IAAK,CAOxC,IANA,IAAMktB,EAASvG,EAAQ3mB,GACjBmtB,EAAgBntB,EAAI2mB,EAAQzmB,OAAS,EAAKymB,EAAQ3mB,EAAI,GAAG2b,cAAgBvb,KAAK8oB,wBAAwBhpB,OACtGktB,EAAgBptB,EAAI2mB,EAAQzmB,OAAS,EAAKymB,EAAQ3mB,EAAI,GAAG6b,cAAgBzb,KAAKgpB,wBAAwBlpB,OACtGmtB,EAAgBH,EAAOtR,eAAiB,EACxC0R,EAAgBJ,EAAOpR,eAAiB,EAEvCoR,EAAOvR,cAAgBuR,EAAOtR,eAAiBuR,GACrDD,EAAOrR,cAAgBqR,EAAOpR,eAAiBsR,KAC7CC,GAAiBjtB,KAAK0pB,yBAAyBoD,EAAOvR,cAAeuR,EAAOvR,cAAgBuR,EAAOtR,oBACnG0R,GAAiBltB,KAAK6pB,yBAAyBiD,EAAOrR,cAAeqR,EAAOrR,cAAgBqR,EAAOpR,kBACrGoR,EAAOvR,gBACPuR,EAAOrR,gBAGR,IAAI0R,EAA4C,CAAC,MAC7CvtB,EAAI2mB,EAAQzmB,OAAS,GAAKE,KAAKotB,eAAe7G,EAAQ3mB,GAAI2mB,EAAQ3mB,EAAI,GAAIutB,KAC7E5G,EAAQ3mB,GAAKutB,EAAgB,GAC7B5G,EAAQlK,OAAOzc,EAAI,EAAG,GACtBA;AAMF,IAASA,EAAI2mB,EAAQzmB,OAAS,EAAGF,GAAK,EAAGA,IAAK,CACvCktB,EAASvG,EAAQ3mB,GAEnBmtB,EAAe,EACfC,EAAe,EACnB,GAAIptB,EAAI,EAAG,CACV,IAAMytB,EAAa9G,EAAQ3mB,EAAI,GAC3BytB,EAAW7R,eAAiB,IAC/BuR,EAAeM,EAAW9R,cAAgB8R,EAAW7R,gBAElD6R,EAAW3R,eAAiB,IAC/BsR,EAAeK,EAAW5R,cAAgB4R,EAAW3R,gBAIjDuR,EAAgBH,EAAOtR,eAAiB,EACxC0R,EAAgBJ,EAAOpR,eAAiB,EAK9C,IANA,IAGI4R,EAAY,EACZC,EAAYvtB,KAAKwtB,eAAeV,EAAOvR,cAAeuR,EAAOtR,eAAgBsR,EAAOrR,cAAeqR,EAAOpR,gBAErG8E,EAAQ,GAAKA,IAAS,CAC9B,IAAMjF,EAAgBuR,EAAOvR,cAAgBiF,EACvC/E,EAAgBqR,EAAOrR,cAAgB+E,EAE7C,GAAIjF,EAAgBwR,GAAgBtR,EAAgBuR,EACnD,MAGD,GAAIC,IAAkBjtB,KAAK0pB,yBAAyBnO,EAAeA,EAAgBuR,EAAOtR,gBACzF,MAGD,GAAI0R,IAAkBltB,KAAK6pB,yBAAyBpO,EAAeA,EAAgBqR,EAAOpR,gBACzF,MAGD,IAAM+R,EAAQztB,KAAKwtB,eAAejS,EAAeuR,EAAOtR,eAAgBC,EAAeqR,EAAOpR,gBAE1F+R,EAAQF,IACXA,EAAYE,EACZH,EAAY9M,GAIdsM,EAAOvR,eAAiB+R,EACxBR,EAAOrR,eAAiB6R,EAGzB,OAAO/G,GAGAF,EAAA1lB,UAAA+sB,oBAAR,SAA4B7K,GAC3B,OAAIA,GAAS,GAAKA,GAAS7iB,KAAK8oB,wBAAwBhpB,OAAS,GAGzDE,KAAK4oB,aAAe,QAAQ/lB,KAAK7C,KAAK6oB,wBAAwBhG,KAG/DwD,EAAA1lB,UAAAgtB,0BAAR,SAAkCpS,EAAuBC,GACxD,GAAIxb,KAAK0tB,oBAAoBnS,IAAkBvb,KAAK0tB,oBAAoBnS,EAAgB,GACvF,OAAO,EAER,GAAIC,EAAiB,EAAG,CACvB,IAAMuO,EAAcxO,EAAgBC;CACpC,GAAIxb,KAAK0tB,oBAAoB3D,EAAc,IAAM/pB,KAAK0tB,oBAAoB3D,GACzE,OAAO,EAGT,OAAO,GAGA1D,EAAA1lB,UAAAitB,oBAAR,SAA4B/K,GAC3B,OAAIA,GAAS,GAAKA,GAAS7iB,KAAKgpB,wBAAwBlpB,OAAS,GAGzDE,KAAK4oB,aAAe,QAAQ/lB,KAAK7C,KAAK+oB,wBAAwBlG,KAG/DwD,EAAA1lB,UAAAktB,0BAAR,SAAkCpS,EAAuBC,GACxD,GAAI1b,KAAK4tB,oBAAoBnS,IAAkBzb,KAAK4tB,oBAAoBnS,EAAgB,GACvF,OAAO,EAER,GAAIC,EAAiB,EAAG,CACvB,IAAMsO,EAAcvO,EAAgBC,EACpC,GAAI1b,KAAK4tB,oBAAoB5D,EAAc,IAAMhqB,KAAK4tB,oBAAoB5D,GACzE,OAAO,EAGT,OAAO,GAGA3D,EAAA1lB,UAAA6sB,eAAR,SAAuBjS,EAAuBC,EAAwBC,EAAuBC,GAG5F,OAFuB1b,KAAK2tB,0BAA0BpS,EAAeC,GAAkB,EAAI,IACpExb,KAAK6tB,0BAA0BpS,EAAeC,GAAkB,EAAI,IAWpF2K,EAAA1lB,UAAAiqB,mBAAR,SAA2BkD,EAAoBC,GAC9C,IAAIZ,EAAgC,GAEpC,GAAoB,IAAhBW,EAAKhuB,QAAiC,IAAjBiuB,EAAMjuB,OAC9B,OAAQiuB,EAAMjuB,OAAS,EAAKiuB,EAAQD,EAC9B,GAAI9tB,KAAKotB,eAAeU,EAAKA,EAAKhuB,OAAS,GAAIiuB,EAAM,GAAIZ,GAAkB,CAKjF,IAAMxtB,EAAS,IAAIkE,MAAkBiqB,EAAKhuB,OAASiuB,EAAMjuB,OAAS,GAKlE,OAJA6mB,EAAQC,KAAKkH,EAAM,EAAGnuB,EAAQ,EAAGmuB,EAAKhuB,OAAS,GAC/CH,EAAOmuB,EAAKhuB,OAAS,GAAKqtB,EAAgB,GAC1CxG,EAAQC,KAAKmH,EAAO,EAAGpuB,EAAQmuB,EAAKhuB,OAAQiuB,EAAMjuB,OAAS,GAEpDH,EAEDA,EAAS,IAAIkE,MAAkBiqB,EAAKhuB,OAASiuB,EAAMjuB,QAIzD,OAHA6mB,EAAQC,KAAKkH,EAAM,EAAGnuB,EAAQ,EAAGmuB,EAAKhuB,QACtC6mB,EAAQC,KAAKmH,EAAO,EAAGpuB,EAAQmuB,EAAKhuB,OAAQiuB,EAAMjuB,QAE3CH,GAYD0mB,EAAA1lB,UAAAysB,eAAR,SAAuBU,EAAkBC,EAAmBZ;AAI3D,GAHA3G,EAAMC,OAAOqH,EAAKvS,eAAiBwS,EAAMxS,cAAe,yDACxDiL,EAAMC,OAAOqH,EAAKrS,eAAiBsS,EAAMtS,cAAe,yDAEpDqS,EAAKvS,cAAgBuS,EAAKtS,gBAAkBuS,EAAMxS,eAAiBuS,EAAKrS,cAAgBqS,EAAKpS,gBAAkBqS,EAAMtS,cAAe,CACvI,IAAMF,EAAgBuS,EAAKvS,cACvBC,EAAiBsS,EAAKtS,eACpBC,EAAgBqS,EAAKrS,cACvBC,EAAiBoS,EAAKpS,eAU1B,OARIoS,EAAKvS,cAAgBuS,EAAKtS,gBAAkBuS,EAAMxS,gBACrDC,EAAiBuS,EAAMxS,cAAgBwS,EAAMvS,eAAiBsS,EAAKvS,eAEhEuS,EAAKrS,cAAgBqS,EAAKpS,gBAAkBqS,EAAMtS,gBACrDC,EAAiBqS,EAAMtS,cAAgBsS,EAAMrS,eAAiBoS,EAAKrS,eAGpE0R,EAAgB,GAAK,IAAI1F,EAAAnM,WAAWC,EAAeC,EAAgBC,EAAeC,IAC3E,EAGP,OADAyR,EAAgB,GAAK,MACd,GAgBD9G,EAAA1lB,UAAA+rB,kBAAR,SAA0BT,EAAkBM,EAAwByB,EAA2B1B,GAC9F,GAAIL,GAAY,GAAKA,EAAWK,EAE/B,OAAOL,EAKR,IAEMgC,EAAY1B,EAAiB,GAAM,EAEzC,OAAIN,EAAW,EAENgC,KANcD,EAKmB,GAAM,GACR,EAAI,EAGnCC,MARc3B,EAAe0B,EAAoB,GAOhB,GAAM,GACR1B,EAAe,EAAIA,EAAe,GAG5EjG,EA/xBA,GAAaplB,EAAAolB,QAAAA,kDCjMb,IAAc6H,mDAvBDjtB,EAAAktB,IAA+B,CAAEC,MAAM,EAAMrqB,WAAOuC,GAuBjE,SAAc4nB,GACb,IAAMG,EAAwB,CAC7BC,KAAI,WACH,OAAOrtB,EAAAktB,MAIOD,EAAAK,MAAhB,WACC,OAAOF;AAGQH,EAAAM,OAAhB,SAA0BzqB,GACzB,IAAIqqB,GAAO,EAEX,MAAO,CACNE,KAAA,WACC,OAAIF,EACIntB,EAAAktB,KAGRC,GAAO,EACA,CAAEA,MAAM,EAAOrqB,MAAKA,OAKdmqB,EAAAO,UAAhB,SAA6B7Q,EAAyBiF,EAAW/iB,GAChE,YADqD,IAAA+iB,IAAAA,EAAA,QAAW,IAAA/iB,IAAAA,EAAS8d,EAAM9d,QACxE,CACNwuB,KAAA,WACC,OAAIzL,GAAS/iB,EACLmB,EAAAktB,IAGD,CAAEC,MAAM,EAAOrqB,MAAO6Z,EAAMiF,SAKtBqL,EAAAQ,mBAAhB,SAAsCC,GACrC,MAAO,CACNL,KAAA,WACC,IAAM3uB,EAASgvB,EAAGL,OAElB,OAAI3uB,EAAOyuB,KACHntB,EAAAktB,IAGD,CAAEC,MAAM,EAAOrqB,MAAOpE,EAAOoE,UAKvBmqB,EAAA7lB,KAAhB,SAAwBghB,GACvB,OAAKA,EAEMxlB,MAAMC,QAAQulB,GACjB6E,EAASO,UAAUpF,GAEnBA,EAJA6E,EAASK,SAQFL,EAAA1W,IAAhB,SAA0BoX,EAAuBhP,GAChD,MAAO,CACN0O,KAAI,WACH,IAAM7O,EAAUmP,EAASN,OACzB,OAAI7O,EAAQ2O,KACJntB,EAAAktB,IAEA,CAAEC,MAAM,EAAOrqB,MAAO6b,EAAGH,EAAQ1b,WAM5BmqB,EAAAxM,OAAhB,SAA0BkN,EAAuBhP,GAChD,MAAO,CACN0O,KAAI,WACH,OAAa,CACZ,IAAM7O,EAAUmP,EAASN,OACzB,GAAI7O,EAAQ2O,KACX,OAAOntB,EAAAktB,IAER,GAAIvO,EAAGH,EAAQ1b,OACd,MAAO,CAAEqqB,MAAM,EAAOrqB,MAAO0b,EAAQ1b,WAO1BmqB,EAAA9R,QAAhB,SAA2BwS,EAAuBhP,GACjD,IAAK,IAAI0O,EAAOM,EAASN,QAASA,EAAKF,KAAME,EAAOM,EAASN,OAC5D1O,EAAG0O,EAAKvqB,QAIMmqB,EAAAW,QAAhB,SAA2BD,EAAuBE,QAAA,IAAAA,IAAAA,EAAiBC,OAAOC,mBACzE,IAAMrvB,EAAc,GAEpB,GAAe,IAAXmvB,EACH,OAAOnvB,EAKR,IAFA,IAAIC,EAAI,EAEC0uB,EAAOM,EAASN,QAASA,EAAKF,OACtCzuB,EAAOuC,KAAKosB,EAAKvqB,WAEXnE,GAAKkvB,IAHiCR,EAAOM,EAASN,QAQ7D,OAAO3uB,GAGQuuB,EAAAxnB,OAAhB,eAA0B,IAAAuoB,EAAA,GAAAjnB,EAAA,EAAAA,EAAA+H,UAAAjQ,OAAAkI,IAAAinB,EAAAjnB,GAAA+H,UAAA/H,GACzB,IAAIpI,EAAI,EAER,MAAO;AACN0uB,KAAI,WACH,GAAI1uB,GAAKqvB,EAAUnvB,OAClB,OAAOmB,EAAAktB,IAGR,IACMxuB,EADWsvB,EAAUrvB,GACH0uB,OAExB,OAAI3uB,EAAOyuB,MACVxuB,IACOI,KAAKsuB,QAGN3uB,KAKMuuB,EAAAgB,MAAhB,SAAyBN,GACxB,OAAO,IAAIO,EAAkBP,IA5I/B,CAAcV,EAAAjtB,EAAAitB,WAAAjtB,EAAAitB,SAAQ,KAgJtB,IAAAiB,EAAA,WAEC,SAAAA,EAAoBR,GAAA3uB,KAAA2uB,GAAAA,EAKrB,OAHCQ,EAAAxuB,UAAA2tB,KAAA,WAA4B,OAAOtuB,KAAK2uB,GAAGL,QAC3Ca,EAAAxuB,UAAA6W,IAAA,SAAOoI,GAAyC,OAAO,IAAIuP,EAAkBjB,EAAS1W,IAAIxX,KAAK2uB,GAAI/O,KACnGuP,EAAAxuB,UAAA+gB,OAAA,SAAO9B,GAA+C,OAAO,IAAIuP,EAAkBjB,EAASxM,OAAO1hB,KAAK2uB,GAAI/O,KAC7GuP,EAPA,GAAaluB,EAAAkuB,kBAAAA,EAWbluB,EAAAmuB,oBAAA,SAAuClM,GACtC,OAAIrf,MAAMC,QAAQof,GACVgL,EAASO,UAAUvL,GACfA,GACJgL,EAASK,SAUlB,IAAAc,EAAA,WAOC,SAAAA,EAAY1K,EAAqB5F,EAAmBuQ,EAA4BzM,QAA/C,IAAA9D,IAAAA,EAAA,QAAmB,IAAAuQ,IAAAA,EAAc3K,EAAM7kB,aAAQ,IAAA+iB,IAAAA,EAAQ9D,EAAQ,GAC/F/e,KAAK2kB,MAAQA,EACb3kB,KAAK+e,MAAQA,EACb/e,KAAKsvB,IAAMA,EACXtvB,KAAK6iB,MAAQA,EAoBf,OAjBQwM,EAAA1uB,UAAAgiB,MAAP,WAEC,OADA3iB,KAAK6iB,MAAQ7iB,KAAK+e,MACX/e,KAAKuvB,WAGNF,EAAA1uB,UAAA2tB,KAAP,WAEC,OADAtuB,KAAK6iB,MAAQpb,KAAK2Z,IAAIphB,KAAK6iB,MAAQ,EAAG7iB,KAAKsvB,KACpCtvB,KAAKuvB,WAGHF,EAAA1uB,UAAA4uB,QAAV,WACC,OAAIvvB,KAAK6iB,QAAU7iB,KAAK+e,MAAQ,GAAK/e,KAAK6iB,QAAU7iB,KAAKsvB,IACjD,KAGDtvB,KAAK2kB,MAAM3kB,KAAK6iB,QAEzBwM,EA/BA,GAAapuB,EAAAouB,cAAAA,EAiCb,IAAAG,EAAA,SAAA/R,GAEC,SAAA+R,EAAY7K,EAAqB5F,EAAmBuQ,EAA4BzM;YAA/C,IAAA9D,IAAAA,EAAA,QAAmB,IAAAuQ,IAAAA,EAAc3K,EAAM7kB,aAAQ,IAAA+iB,IAAAA,EAAQ9D,EAAQ,GAC/FtB,EAAAxN,KAAAjQ,KAAM2kB,EAAO5F,EAAOuQ,EAAKzM,IAAM7iB,KAyBjC,OA5BuC0d,EAAA8R,EAAA/R,GAM/B+R,EAAA7uB,UAAA4uB,QAAP,WACC,OAAO9R,EAAA9c,UAAM4uB,QAAOtf,KAAAjQ,OAGdwvB,EAAA7uB,UAAA8uB,SAAP,WAEC,OADAzvB,KAAK6iB,MAAQpb,KAAKC,IAAI1H,KAAK6iB,MAAQ,EAAG7iB,KAAK+e,MAAQ,GAC5C/e,KAAKuvB,WAGNC,EAAA7uB,UAAAgiB,MAAP,WAEC,OADA3iB,KAAK6iB,MAAQ7iB,KAAK+e,MACX/e,KAAKuvB,WAGNC,EAAA7uB,UAAA+uB,KAAP,WAEC,OADA1vB,KAAK6iB,MAAQ7iB,KAAKsvB,IAAM,EACjBtvB,KAAKuvB,WAGNC,EAAA7uB,UAAAgvB,OAAP,WACC,OAAO,MAETH,EA5BA,CAAuCH,GAA1BpuB,EAAAuuB,eAAAA,EA8Bb,IAAAI,EAAA,WAEC,SAAAA,EAAsBhB,EAAsChP,GAAtC5f,KAAA4uB,SAAAA,EAAsC5uB,KAAA4f,GAAAA,EAK7D,OADCgQ,EAAAjvB,UAAA2tB,KAAA,WAAS,OAAOtuB,KAAK4f,GAAG5f,KAAK4uB,SAASN,SACvCsB,EAPA,GAAa3uB,EAAA2uB,eAAAA,EAkBb,IAAAC,EAAA,SAAApS,GAEC,SAAAoS,EAAsBtuB,EAA0Bqe,GAAhD,IAAAzX,EACCsV,EAAAxN,KAAAjQ,KAAMuB,EAAWqe,IAAG5f,YADCmI,EAAA5G,UAAAA,IAUvB,OAZ2Cmc,EAAAmS,EAAApS,GAM1CoS,EAAAlvB,UAAA4uB,QAAA,WAAY,OAAOvvB,KAAK4f,GAAG5f,KAAKuB,UAAUguB,YAC1CM,EAAAlvB,UAAA8uB,SAAA,WAAa,OAAOzvB,KAAK4f,GAAG5f,KAAKuB,UAAUkuB,aAC3CI,EAAAlvB,UAAAgvB,OAAA,WAAW,OAAO3vB,KAAK4f,GAAG5f,KAAKuB,UAAUouB,WACzCE,EAAAlvB,UAAAgiB,MAAA;AAAU,OAAO3iB,KAAK4f,GAAG5f,KAAKuB,UAAUohB,UACxCkN,EAAAlvB,UAAA+uB,KAAA,WAAS,OAAO1vB,KAAK4f,GAAG5f,KAAKuB,UAAUmuB,SACvCG,EAAAlvB,UAAA2tB,KAAA,WAAS,OAAOtuB,KAAK4f,GAAG5f,KAAKuB,UAAU+sB,SACxCuB,EAZA,CAA2CD,GAA9B3uB,EAAA4uB,gBAAAA,uGCrFb,IAAAC,EAAA,WAKC,SAAAA,IACC9vB,KAAK+vB,cAAgB,GACrB/vB,KAAKgwB,cAAgBvvB,OAAOsH,OAAO,MAerC,OAZC+nB,EAAAnvB,UAAArB,OAAA,SAAO2wB,EAAkB7Z,GACxBpW,KAAK+vB,cAAcE,GAAW7Z,EAC9BpW,KAAKgwB,cAAc5Z,EAAI8Z,eAAiBD,GAGzCH,EAAAnvB,UAAAwvB,aAAA,SAAaF,GACZ,OAAOjwB,KAAK+vB,cAAcE,IAG3BH,EAAAnvB,UAAAyvB,aAAA,SAAaha,GACZ,OAAOpW,KAAKgwB,cAAc5Z,EAAI8Z,gBAAc,GAE9CJ,EAtBA,GAwBMO,EAAQ,IAAIP,EACZQ,EAAoB,IAAIR,EACxBS,EAAyB,IAAIT,EAyMnC,SAAgBU,EAAuBC,EAAoBC,GAE1D,IAAMC,KAAqB,KAAVF,GACXG,KAAqB,IAAVH,GAQjB,OAAO,IAAII,EANQ,IAAFH,EAAmCE,EAAUD,KAClC,KAAVF,MACQ,IAAVA,GACG,IAAFC,EAAmCC,EAAUC,EACnC,IAAVH,IAhNlB,WAEC,SAASnxB,EAAO2wB,EAAkBa,EAAiBC,EAAuCC,QAAvC,IAAAD,IAAAA,EAAAD,QAAuC,IAAAE,IAAAA,EAAAD,GACzFV,EAAM/wB,OAAO2wB,EAASa,GACtBR,EAAkBhxB,OAAO2wB,EAASc,GAClCR,EAAuBjxB,OAAO2wB,EAASe,GAGxC1xB,EAAM,EAAkB,WAExBA,EAAM,EAAoB,aAC1BA,EAAM,EAAc,OACpBA,EAAM,EAAgB,SACtBA,EAAM,EAAgB,SACtBA,EAAM,EAAe,QACrBA,EAAM,EAAc,OACpBA,EAAM,EAAqB,cAC3BA,EAAM,EAAmB;AACzBA,EAAM,EAAiB,UACvBA,EAAM,GAAgB,SACtBA,EAAM,GAAiB,UACvBA,EAAM,GAAmB,YACzBA,EAAM,GAAc,OACpBA,EAAM,GAAe,QAErBA,EAAM,GAAoB,YAAa,QACvCA,EAAM,GAAkB,UAAW,MACnCA,EAAM,GAAqB,aAAc,SACzCA,EAAM,GAAoB,YAAa,QACvCA,EAAM,GAAiB,UACvBA,EAAM,GAAiB,UAEvBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KAEtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KACtBA,EAAM,GAAgB,KAEtBA,EAAM,GAAe,QACrBA,EAAM,GAAsB,eAE5BA,EAAM,GAAa,MACnBA,EAAM,GAAa,MACnBA,EAAM,GAAa,MACnBA,EAAM,GAAa,MACnBA,EAAM,GAAa,MACnBA,EAAM,GAAa,MACnBA,EAAM,GAAa,MACnBA,EAAM,GAAa,MACnBA,EAAM,GAAa,MACnBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OACpBA,EAAM,GAAc,OAEpBA,EAAM,GAAkB,WACxBA,EAAM,GAAqB,cAE3BA,EAAM,GAAuB,IAAK,IAAK,SACvCA,EAAM,GAAmB,IAAK,IAAK,YACnCA,EAAM,GAAmB,IAAK,IAAK,aACnCA,EAAM,GAAmB,IAAK,IAAK,aACnCA,EAAM,GAAiB,IAAK,IAAK,cACjCA,EAAM,GAAmB,IAAK,IAAK;AACnCA,EAAM,GAAsB,IAAK,IAAK,SACtCA,EAAM,IAAkB,WACxBA,EAAM,IAAkB,WACxBA,EAAM,GAAiC,IAAK,IAAK,SACjDA,EAAM,GAAuB,KAAM,KAAM,SACzCA,EAAM,GAAkC,IAAK,IAAK,SAClDA,EAAM,GAAmB,IAAM,IAAM,SACrCA,EAAM,GAAgB,SACtBA,EAAM,GAAkB,WAExBA,EAAM,GAAmB,WACzBA,EAAM,GAAmB,WACzBA,EAAM,GAAmB,WACzBA,EAAM,GAAmB,WACzBA,EAAM,GAAmB,WACzBA,EAAM,GAAmB,WACzBA,EAAM,GAAmB,WACzBA,EAAM,IAAmB,WACzBA,EAAM,IAAmB,WACzBA,EAAM,IAAmB,WAEzBA,EAAM,IAA0B,mBAChCA,EAAM,IAAqB,cAC3BA,EAAM,IAA2B,oBACjCA,EAAM,IAA0B,mBAChCA,EAAM,IAAyB,kBAC/BA,EAAM,IAAwB,iBAhI/B,GAoIA,SAAiB2xB,GACAA,EAAAC,SAAhB,SAAyBjB,GACxB,OAAOI,EAAMF,aAAaF,IAEXgB,EAAAE,WAAhB,SAA2B1tB,GAC1B,OAAO4sB,EAAMD,aAAa3sB,IAGXwtB,EAAAG,iBAAhB,SAAiCnB,GAChC,OAAOK,EAAkBH,aAAaF,IAEvBgB,EAAAI,sBAAhB,SAAsCpB,GACrC,OAAOM,EAAuBJ,aAAaF,IAE5BgB,EAAAK,iBAAhB,SAAiC7tB,GAChC,OAAO6sB,EAAkBF,aAAa3sB,IAAQ8sB,EAAuBH,aAAa3sB,IAfpF,CAAiBxC,EAAAgwB,eAAAhwB,EAAAgwB,aAAY,KA+C7BhwB,EAAAswB,SAAA,SAAyBC,EAAmBC,GAE3C,OAAQD,GADyB,MAAbC,IAA4B,KAAQ,KACrB,GAGpCxwB,EAAAywB,iBAAA,SAAiCjB,EAAoBC,GACpD,GAAmB,IAAfD,EACH,OAAO,KAER,IAAMe,GAA0B,MAAbf,KAA6B,EAC1CkB,GAA0B,WAAblB,KAA6B;CAChD,OACQ,IAAImB,EADM,IAAdD,EACwB,CAC1BnB,EAAuBgB,EAAWd,GAClCF,EAAuBmB,EAAWjB,IAGT,CAACF,EAAuBgB,EAAWd,MAG/DzvB,EAAAuvB,uBAAAA,EAcA,IAAAK,EAAA,WAOC,SAAAA,EAAYgB,EAAkBC,EAAmBC,EAAiBC,EAAkB/B,GACnFjwB,KAAK6xB,QAAUA,EACf7xB,KAAK8xB,SAAWA,EAChB9xB,KAAK+xB,OAASA,EACd/xB,KAAKgyB,QAAUA,EACfhyB,KAAKiwB,QAAUA,EA8CjB,OA3CQY,EAAAlwB,UAAAwR,OAAP,SAAc8N,GACb,OACCjgB,KAAK6xB,UAAY5R,EAAM4R,SACpB7xB,KAAK8xB,WAAa7R,EAAM6R,UACxB9xB,KAAK+xB,SAAW9R,EAAM8R,QACtB/xB,KAAKgyB,UAAY/R,EAAM+R,SACvBhyB,KAAKiwB,UAAYhQ,EAAMgQ,SAIrBY,EAAAlwB,UAAAsxB,YAAP,WAKC,MAAO,IAJMjyB,KAAK6xB,QAAU,IAAM,MACpB7xB,KAAK8xB,SAAW,IAAM,MACxB9xB,KAAK+xB,OAAS,IAAM,MACnB/xB,KAAKgyB,QAAU,IAAM,KACIhyB,KAAKiwB,SAGrCY,EAAAlwB,UAAAuxB,cAAP,WACC,OACa,IAAZlyB,KAAKiwB,SACU,IAAZjwB,KAAKiwB,SACO,KAAZjwB,KAAKiwB,SACO,IAAZjwB,KAAKiwB,SACO,IAAZjwB,KAAKiwB,SAIHY,EAAAlwB,UAAAwxB,QAAP,WACC,OAAO,IAAIP,EAAgB,CAAC5xB,QAMtB6wB,EAAAlwB,UAAAyxB,wBAAP,WACC,OACEpyB,KAAK6xB,SAAuB,IAAZ7xB,KAAKiwB,SAClBjwB,KAAK8xB,UAAwB,IAAZ9xB,KAAKiwB,SACtBjwB,KAAK+xB,QAAsB,IAAZ/xB,KAAKiwB,SACpBjwB,KAAKgyB,SAAuB,KAAZhyB,KAAKiwB,SAG5BY,EA1DA,GAAa5vB,EAAA4vB,iBAAAA,EA4Db,IAAAe,EAAA,WAGC,SAAAA,EAAYS,GACX,GAAqB,IAAjBA,EAAMvyB,OACT,MAAMyhB,EAAApE,gBAAgB,SAEvBnd,KAAKqyB,MAAQA;AA4Bf,OAzBQT,EAAAjxB,UAAAsxB,YAAP,WAEC,IADA,IAAItyB,EAAS,GACJC,EAAI,EAAGC,EAAMG,KAAKqyB,MAAMvyB,OAAQF,EAAIC,EAAKD,IACvC,IAANA,IACHD,GAAU,KAEXA,GAAUK,KAAKqyB,MAAMzyB,GAAGqyB,cAEzB,OAAOtyB,GAGDiyB,EAAAjxB,UAAAwR,OAAP,SAAc8N,GACb,GAAc,OAAVA,EACH,OAAO,EAER,GAAIjgB,KAAKqyB,MAAMvyB,SAAWmgB,EAAMoS,MAAMvyB,OACrC,OAAO,EAER,IAAK,IAAIF,EAAI,EAAGA,EAAII,KAAKqyB,MAAMvyB,OAAQF,IACtC,IAAKI,KAAKqyB,MAAMzyB,GAAGuS,OAAO8N,EAAMoS,MAAMzyB,IACrC,OAAO,EAGT,OAAO,GAETgyB,EAnCA,GAAa3wB,EAAA2wB,gBAAAA,EAuCb,IAAAU,EASC,SAAYT,EAAkBC,EAAmBC,EAAiBC,EAAkBO,EAAwBC,GAC3GxyB,KAAK6xB,QAAUA,EACf7xB,KAAK8xB,SAAWA,EAChB9xB,KAAK+xB,OAASA,EACd/xB,KAAKgyB,QAAUA,EACfhyB,KAAKyyB,SAAWF,EAChBvyB,KAAK0yB,aAAeF,GAfTvxB,EAAAqxB,uBAAAA,EAsBb,IAAAK,EAAA,aAAsB1xB,EAAA0xB,mBAAAA,sGCriBtB,IAAMC,GAAoB,EAEpBC,EAA4B,4BAElC,SAASC,EAAmC5O,GAC3C,GAAK0O,GAID1O,GAAKA,IAAM6O,EAAWC,KACzB,IACE9O,EAAU2O,IAA6B,EACvC,MAAA5qB,KAMJ,SAASgrB,EAAuC/O,GAC/C,IAAK0O,EACJ,OAAO1O,EAGR,IAAMpf,EAAQ,IAAIH,MAAM,iCAAiCG,MAMzD,OALAyM,YAAW,WACJ2S,EAAU2O,IACfltB,QAAQutB,IAAIpuB,KAEX,KACIof,EAgBR,SAAgBiP,EAA+BC,GAC9C,OAAIvvB,MAAMC,QAAQsvB,IACjBA,EAAYhX,SAAQ,SAAAiX,GACfA,IACHP,EAAYO,GACZA,EAAEF,cAGG,IACGC,GACVN,EAAYM,GACZA,EAAYD,UACLC,QAEP;AAvBFnyB,EAAAqyB,aAAA,SAA+CC,GAC9C,MAAoD,mBAAnBA,EAAOJ,SACS,IAA1BI,EAAOJ,QAAQrzB,QAOvCmB,EAAAkyB,QAAAA,EAkBAlyB,EAAAuyB,mBAAA,eAAmC,IAAAJ,EAAA,GAAAprB,EAAA,EAAAA,EAAA+H,UAAAjQ,OAAAkI,IAAAorB,EAAAprB,GAAA+H,UAAA/H,GAElC,OADAorB,EAAYhX,QAAQ0W,GACbG,EAAgB,CAAEE,QAAS,WAAM,OAAAA,EAAQC,OAGjDnyB,EAAAwyB,aAAA,SAA6B7T,GAC5B,IAAM8T,EAAOT,EAAgB,CAC5BE,QAAS,WACRL,EAAYY,GACZ9T,OAGF,OAAO8T,GAGR,IAAAC,EAAA,WAAA,SAAAA,IACS3zB,KAAA4zB,WAAa,IAAIvR,IACjBriB,KAAA6zB,aAAc,EA0CvB,OAnCQF,EAAAhzB,UAAAwyB,QAAP,WACKnzB,KAAK6zB,cAITf,EAAY9yB,MACZA,KAAK6zB,aAAc,EACnB7zB,KAAK8zB,UAMCH,EAAAhzB,UAAAmzB,MAAP,WACC9zB,KAAK4zB,WAAWxX,SAAQ,SAAA8I,GAAQ,OAAAA,EAAKiO,aACrCnzB,KAAK4zB,WAAWE,SAGVH,EAAAhzB,UAAA4hB,IAAP,SAAkCgB,GACjC,IAAKA,EACJ,OAAOA,EAER,GAAKA,IAAiCvjB,KACrC,MAAM,IAAI2E,MAAM,2CAUjB,OAPAmuB,EAAYvP,GACRvjB,KAAK6zB,YACRluB,QAAQyM,KAAK,IAAIzN,MAAM,uHAAuHG,OAE9I9E,KAAK4zB,WAAWrR,IAAIgB,GAGdA,GAEToQ,EA5CA,GAAa1yB,EAAA0yB,gBAAAA,EA8Cb,IAAAZ,EAAA,WAMC,SAAAA,IAFiB/yB,KAAA+zB,OAAS,IAAIJ,EAG7BV,EAAgBjzB;AAelB,OAZQ+yB,EAAApyB,UAAAwyB,QAAP,WACCL,EAAY9yB,MAEZA,KAAK+zB,OAAOZ,WAGHJ,EAAApyB,UAAAqzB,UAAV,SAA2CzQ,GAC1C,GAAKA,IAA4BvjB,KAChC,MAAM,IAAI2E,MAAM,2CAEjB,OAAO3E,KAAK+zB,OAAOxR,IAAIgB,IAlBRwP,EAAAC,KAAOvyB,OAAOwzB,OAAoB,CAAEd,QAAO,eAoB5DJ,EAtBA,GAAsB9xB,EAAA8xB,WAAAA,EA8BtB,IAAAmB,EAAA,WAIC,SAAAA,IAFQl0B,KAAA6zB,aAAc,EAGrBZ,EAAgBjzB,MAiClB,OA9BCS,OAAAC,eAAIwzB,EAAAvzB,UAAA,QAAK,KAAT,WACC,OAAOX,KAAK6zB,iBAAcvtB,EAAYtG,KAAK2lB,YAG5C,SAAU5hB,GACL/D,KAAK6zB,aAAe9vB,IAAU/D,KAAK2lB,SAInC3lB,KAAK2lB,QACR3lB,KAAK2lB,OAAOwN,UAETpvB,GACH+uB,EAAY/uB,GAEb/D,KAAK2lB,OAAS5hB,oCAGfmwB,EAAAvzB,UAAAmzB,MAAA,WACC9zB,KAAK+D,WAAQuC,GAGd4tB,EAAAvzB,UAAAwyB,QAAA,WACCnzB,KAAK6zB,aAAc,EACnBf,EAAY9yB,MACRA,KAAK2lB,QACR3lB,KAAK2lB,OAAOwN,UAEbnzB,KAAK2lB,YAASrf,GAEhB4tB,EAtCA,GAAajzB,EAAAizB,kBAAAA,EA4Cb,IAAAC,EAAA,WAAA,SAAAA,IAEkBn0B,KAAAo0B,WAAoE,IAAIjgB,IAyB1F,OAvBCggB,EAAAxzB,UAAA0zB,QAAA,SAAQ5wB,GAAR,IAAA0E,EAAAnI,KACKs0B,EAAYt0B,KAAKo0B,WAAWxzB,IAAI6C,GAE/B6wB,IACJA,EAAY,CAAEC,QAAS,EAAGC,OAAQx0B,KAAKy0B,uBAAuBhxB,IAC9DzD,KAAKo0B,WAAW7f,IAAI9Q,EAAK6wB,IAGlB,IAAAE,EAAAF,EAAAE,OACFrB,EAAUuB,EAAA7P,MAAK;AACS,KAAvByP,EAAWC,UAChBpsB,EAAKwsB,wBAAwBlxB,EAAK6wB,EAAWE,QAC7CrsB,EAAKisB,WAAWvZ,OAAOpX,OAMzB,OAFA6wB,EAAUC,UAEH,CAAEC,OAAMA,EAAErB,QAAOA,IAK1BgB,EA3BA,GAAsBlzB,EAAAkzB,oBAAAA,EA6BtB,IAAAS,EAAA,WACC,SAAAA,EAAmBJ,GAAAx0B,KAAAw0B,OAAAA,EAEpB,OADCI,EAAAj0B,UAAAwyB,QAAA,aACDyB,EAHA,GAAa3zB,EAAA2zB,kBAAAA,wGC1Ob,IAAAC,EAAA,WAQC,SAAAA,EAAYpV,GACXzf,KAAKyf,QAAUA,EACfzf,KAAKsuB,KAAOuG,EAAKC,UACjB90B,KAAK+0B,KAAOF,EAAKC,UAEnB,OAXiBD,EAAAC,UAAY,IAAID,OAAUvuB,GAW3CuuB,EAbA,GAeAG,EAAA,WAAA,SAAAA,IAESh1B,KAAAi1B,OAAkBJ,EAAKC,UACvB90B,KAAAk1B,MAAiBL,EAAKC,UACtB90B,KAAAm1B,MAAgB,EAiIzB,OA/HC10B,OAAAC,eAAIs0B,EAAAr0B,UAAA,OAAI,KAAR,WACC,OAAOX,KAAKm1B,uCAGbH,EAAAr0B,UAAAgD,QAAA,WACC,OAAO3D,KAAKi1B,SAAWJ,EAAKC,WAG7BE,EAAAr0B,UAAAmzB,MAAA,WACC9zB,KAAKi1B,OAASJ,EAAKC,UACnB90B,KAAKk1B,MAAQL,EAAKC,UAClB90B,KAAKm1B,MAAQ,GAGdH,EAAAr0B,UAAA2jB,QAAA,SAAQ7E,GACP,OAAOzf,KAAKo1B,QAAQ3V,GAAS,IAG9BuV,EAAAr0B,UAAAuB,KAAA,SAAKud,GACJ,OAAOzf,KAAKo1B,QAAQ3V,GAAS,IAGtBuV,EAAAr0B,UAAAy0B,QAAR,SAAgB3V,EAAY4V,GAA5B,IAAAltB,EAAAnI,KACOs1B,EAAU,IAAIT,EAAKpV;CACzB,GAAIzf,KAAKi1B,SAAWJ,EAAKC,UACxB90B,KAAKi1B,OAASK,EACdt1B,KAAKk1B,MAAQI,OAEP,GAAID,EAAU,CAEpB,IAAME,EAAUv1B,KAAKk1B,MACrBl1B,KAAKk1B,MAAQI,EACbA,EAAQP,KAAOQ,EACfA,EAAQjH,KAAOgH,MAET,CAEN,IAAME,EAAWx1B,KAAKi1B,OACtBj1B,KAAKi1B,OAASK,EACdA,EAAQhH,KAAOkH,EACfA,EAAST,KAAOO,EAEjBt1B,KAAKm1B,OAAS,EAEd,IAAIM,GAAY,EAChB,OAAO,WACDA,IACJA,GAAY,EACZttB,EAAKutB,QAAQJ,MAKhBN,EAAAr0B,UAAAsY,MAAA,WACC,GAAIjZ,KAAKi1B,SAAWJ,EAAKC,UAAzB,CAGC,IAAMa,EAAM31B,KAAKi1B,OAAOxV,QAExB,OADAzf,KAAK01B,QAAQ11B,KAAKi1B,QACXU,IAITX,EAAAr0B,UAAA+e,IAAA,WACC,GAAI1f,KAAKk1B,QAAUL,EAAKC,UAAxB,CAGC,IAAMa,EAAM31B,KAAKk1B,MAAMzV,QAEvB,OADAzf,KAAK01B,QAAQ11B,KAAKk1B,OACXS,IAIDX,EAAAr0B,UAAA+0B,QAAR,SAAgBE,GACf,GAAIA,EAAKb,OAASF,EAAKC,WAAac,EAAKtH,OAASuG,EAAKC,UAAW,CAEjE,IAAMe,EAASD,EAAKb,KACpBc,EAAOvH,KAAOsH,EAAKtH,KACnBsH,EAAKtH,KAAKyG,KAAOc,OAEPD,EAAKb,OAASF,EAAKC,WAAac,EAAKtH,OAASuG,EAAKC,WAE7D90B,KAAKi1B,OAASJ,EAAKC,UACnB90B,KAAKk1B,MAAQL,EAAKC,WAERc,EAAKtH,OAASuG,EAAKC,WAE7B90B,KAAKk1B,MAAQl1B,KAAKk1B,MAAOH,KACzB/0B,KAAKk1B,MAAM5G,KAAOuG,EAAKC,WAEbc,EAAKb,OAASF,EAAKC,YAE7B90B,KAAKi1B,OAASj1B,KAAKi1B,OAAQ3G,KAC3BtuB,KAAKi1B,OAAOF,KAAOF,EAAKC,WAIzB90B,KAAKm1B,OAAS,GAGfH,EAAAr0B,UAAAiuB,SAAA,WACC,IAAInP,EACAmW,EAAO51B,KAAKi1B,OAChB,MAAO,CACN3G,KAAA,WACC,OAAIsH,IAASf,EAAKC,UACVgB,EAAA3H,KAGH1O,EAGJA,EAAQ1b,MAAQ6xB,EAAKnW,QAFrBA,EAAU,CAAE2O,MAAM,EAAOrqB,MAAO6xB,EAAKnW;AAItCmW,EAAOA,EAAKtH,KACL7O,MAKVuV,EAAAr0B,UAAAo1B,QAAA,WAEC,IADA,IAAMp2B,EAAc,GACXi2B,EAAO51B,KAAKi1B,OAAQW,IAASf,EAAKC,UAAWc,EAAOA,EAAKtH,KACjE3uB,EAAOuC,KAAK0zB,EAAKnW,SAElB,OAAO9f,GAETq1B,EArIA,GAAa/zB,EAAA+zB,WAAAA,SClBbgB,oSCeA,IAAiBC,mDAAjB,SAAiBA,GAMhB,SAAgBpR,EAAQqR,GACvB,OAAO,SAACja,EAAUka,EAAiB/C,QAAjB,IAAA+C,IAAAA,EAAA,MAEjB,IACIx2B,EADAy2B,GAAU,EAkBd,OAhBAz2B,EAASu2B,GAAM,SAAAnrB,GACd,IAAIqrB,EAQJ,OANWz2B,EACVA,EAAOwzB,UAEPiD,GAAU,EAGJna,EAAShM,KAAKkmB,EAAUprB,KAC7B,KAAMqoB,GAELgD,GACHz2B,EAAOwzB,UAGDxzB,GAQT,SAAgB6X,EAAU0e,EAAiB1e,GAC1C,OAAO6e,GAAS,SAACpa,EAAUka,EAAiB/C,GAAiB,YAAlC,IAAA+C,IAAAA,EAAA,MAAkCD,GAAM,SAAAt2B,GAAK,OAAAqc,EAAShM,KAAKkmB,EAAU3e,EAAI5X,MAAK,KAAMwzB,MAOhH,SAAgBhX,EAAW8Z,EAAiBI,GAC3C,OAAOD,GAAS,SAACpa,EAAUka,EAAiB/C,GAAiB,YAAlC,IAAA+C,IAAAA,EAAA,MAAkCD,GAAM,SAAAt2B,GAAO02B,EAAK12B,GAAIqc,EAAShM,KAAKkmB,EAAUv2B,KAAO,KAAMwzB,MASzH,SAAgB1R,EAAUwU,EAAiBxU,GAC1C,OAAO2U,GAAS,SAACpa,EAAUka,EAAiB/C,GAAiB,YAAlC,IAAA+C,IAAAA,EAAA,MAAkCD,GAAM,SAAAnrB,GAAK,OAAA2W,EAAO3W,IAAMkR,EAAShM,KAAKkmB,EAAUprB;GAAI,KAAMqoB,MAsBxH,SAAgB5P,EAAa0S,EAAiBK,EAA6CC,GAC1F,IAAIC,EAAwBD,EAE5B,OAAOhf,EAAU0e,GAAO,SAAAnrB,GAEvB,OADA0rB,EAASF,EAAME,EAAQ1rB,MAUzB,SAAgBsrB,EAAYH,GAC3B,IAAIja,EACEya,EAAU,IAAIC,EAAW,CAC9BC,mBAAkB,WACjB3a,EAAWia,EAAMQ,EAAQG,KAAMH,IAEhCI,qBAAoB,WACnB7a,EAASkX,aAIX,OAAOuD,EAAQR,MAchB,SAAgBa,EAAeb,EAAiBK,EAA6CS,EAAqBC,EAAiBC,GAElI,IAAIC,OAFwF,IAAAH,IAAAA,EAAA,UAAqB,IAAAC,IAAAA,GAAA,GAGjH,IAAIR,OAAwBnwB,EACxB8wB,OAAc9wB,EACd+wB,EAAoB,EAElBX,EAAU,IAAIC,EAAW,CAC9BO,qBAAoBA,EACpBN,mBAAA,WACCO,EAAejB,GAAM,SAAAoB,GACpBD,IACAZ,EAASF,EAAME,EAAQa,GAEnBL,IAAYG,GACfV,EAAQG,KAAKJ,GAGdc,aAAaH,GACbA,EAAS7lB,YAAW,WACnB,IAAMimB,EAAUf,EAChBA,OAASnwB,EACT8wB,OAAS9wB,IACJ2wB,GAAWI,EAAoB,IACnCX,EAAQG,KAAKW,GAGdH,EAAoB,IAClBL,OAGLF,qBAAoB,WACnBK,EAAahE,aAIf,OAAOuD,EAAQR,MAiBhB,SAAgBuB,EAASvB,GACxB,IACItoB,EADA8pB,GAAY,EAGhB,OAAOhW,EAAOwU,GAAO,SAAAnyB,GACpB,IAAM4zB,EAAaD,GAAa3zB,IAAU6J,EAG1C,OAFA8pB,GAAY,EACZ9pB,EAAQ7J,EACD4zB,KA/KI1B,EAAAjD,KAAmB,WAAM,OAAA4E,EAAA7E,WAAWC,MAKjCiD,EAAApR,KAAIA,EA6BJoR,EAAAze,IAAGA,EAQHye,EAAA7Z,QAAOA,EAUP6Z,EAAAvU,OAAMA,EAONuU,EAAA4B,OAAhB,SAA0B3B,GACzB,OAAOA,GAOQD,EAAA6B,IAAhB,eAAuB,IAAAC,EAAA,GAAA/vB,EAAA,EAAAA,EAAA+H,UAAAjQ,OAAAkI,IAAA+vB,EAAA/vB,GAAA+H,UAAA/H,GACtB,OAAO,SAACiU,EAAUka,EAAiB/C,GAAiB,YAAlC,IAAA+C,IAAAA,EAAA,MAAkCyB,EAAApE,mBAAkBvlB,WAAA,EAAI8pB,EAAOvgB,KAAI,SAAA0e,GAAS,OAAAA,GAAM,SAAAnrB,GAAK,OAAAkR,EAAShM,KAAKkmB,EAAUprB,KAAI,KAAMqoB;AAO5H6C,EAAAzS,OAAMA,EAcNyS,EAAAI,SAAQA,EAyBRJ,EAAAc,SAAQA,EA4CRd,EAAA+B,UAAhB,SAA6B9B,GAC5B,IAAMnX,GAAQ,IAAIva,MAAOyzB,UACzB,OAAOzgB,EAAIqN,EAAKqR,IAAQ,SAAAgC,GAAK,OAAA,IAAI1zB,MAAOyzB,UAAYlZ,MAOrCkX,EAAAwB,MAAKA,EAkCLxB,EAAAkC,OAAhB,SAA0BjC,EAAiBkC,EAAkBC,QAAlB,IAAAD,IAAAA,GAAA,QAAkB,IAAAC,IAAAA,EAAA,IAC5D,IAAIF,EAAqBE,EAAQzrB,QAE7BqP,EAA+Bia,GAAM,SAAAnrB,GACpCotB,EACHA,EAAOj2B,KAAK6I,GAEZ2rB,EAAQG,KAAK9rB,MAITutB,EAAQ,WACTH,GACHA,EAAO/b,SAAQ,SAAArR,GAAK,OAAA2rB,EAAQG,KAAK9rB,MAElCotB,EAAS,MAGJzB,EAAU,IAAIC,EAAW,CAC9BC,mBAAkB,WACZ3a,IACJA,EAAWia,GAAM,SAAAnrB,GAAK,OAAA2rB,EAAQG,KAAK9rB,QAIrCwtB,sBAAqB,WAChBJ,IACCC,EACH7mB,WAAW+mB,GAEXA,MAKHxB,qBAAoB,WACf7a,GACHA,EAASkX,UAEVlX,EAAW,QAIb,OAAOya,EAAQR,OAgBhB,IAAAsC,EAAA,WAEC,SAAAA,EAAqBtC,GAAAl2B,KAAAk2B,MAAAA,EAmCtB,OAjCCsC,EAAA73B,UAAA6W,IAAA,SAAOoI,GACN,OAAO,IAAI4Y,EAAehhB,EAAIxX,KAAKk2B,MAAOtW,KAG3C4Y,EAAA73B,UAAAyb,QAAA,SAAQwD,GACP,OAAO,IAAI4Y,EAAepc,EAAQpc,KAAKk2B,MAAOtW,KAG/C4Y,EAAA73B,UAAA+gB,OAAA,SAAO9B,GACN,OAAO,IAAI4Y,EAAe9W,EAAO1hB,KAAKk2B,MAAOtW,KAG9C4Y,EAAA73B,UAAA6iB,OAAA,SAAU+S,EAA6CC,GACtD,OAAO,IAAIgC,EAAehV,EAAOxjB,KAAKk2B,MAAOK,EAAOC,KAGrDgC,EAAA73B,UAAA82B,MAAA,WACC,OAAO,IAAIe,EAAef,EAAMz3B,KAAKk2B,SAKtCsC,EAAA73B,UAAAo2B,SAAA,SAAYR,EAA6CS,EAAqBC,EAAiBC,GAC9F,YADwD,IAAAF,IAAAA,EAAA,UAAqB,IAAAC,IAAAA,GAAA;AACtE,IAAIuB,EAAezB,EAAS/2B,KAAKk2B,MAAOK,EAAOS,EAAOC,EAASC,KAGvEsB,EAAA73B,UAAA83B,GAAA,SAAGxc,EAAyBka,EAAe/C,GAC1C,OAAOpzB,KAAKk2B,MAAMja,EAAUka,EAAU/C,IAGvCoF,EAAA73B,UAAAkkB,KAAA,SAAK5I,EAAyBka,EAAe/C,GAC5C,OAAOvO,EAAK7kB,KAAKk2B,MAAVrR,CAAiB5I,EAAUka,EAAU/C,IAE9CoF,EArCA,GAuCgBvC,EAAA/G,MAAhB,SAAyBgH,GACxB,OAAO,IAAIsC,EAAetC,IAQXD,EAAAyC,qBAAhB,SAAwChC,EAA2BiC,EAAmBnhB,QAAA,IAAAA,IAAAA,EAAA,SAA6BrT,GAAM,OAAAA,IACxH,IAAMyb,EAAK,eAAC,IAAA7R,EAAA,GAAA/F,EAAA,EAAAA,EAAA+H,UAAAjQ,OAAAkI,IAAA+F,EAAA/F,GAAA+H,UAAA/H,GAAmB,OAAArI,EAAOk3B,KAAKrf,EAAGvJ,WAAA,EAAIF,KAG5CpO,EAAS,IAAIg3B,EAAW,CAAEC,mBAFL,WAAM,OAAAF,EAAQ+B,GAAGE,EAAW/Y,IAEHkX,qBADvB,WAAM,OAAAJ,EAAQkC,eAAeD,EAAW/Y,MAGrE,OAAOjgB,EAAOu2B,OAQCD,EAAA4C,oBAAhB,SAAuCnC,EAA0BiC,EAAmBnhB,QAAA,IAAAA,IAAAA,EAAA,SAA6BrT,GAAM,OAAAA,IACtH,IAAMyb,EAAK,eAAC,IAAA7R,EAAA,GAAA/F,EAAA,EAAAA,EAAA+H,UAAAjQ,OAAAkI,IAAA+F,EAAA/F,GAAA+H,UAAA/H,GAAmB,OAAArI,EAAOk3B,KAAKrf,EAAGvJ,WAAA,EAAIF,KAG5CpO,EAAS,IAAIg3B,EAAW,CAAEC,mBAFL,WAAM,OAAAF,EAAQ1rB,iBAAiB2tB,EAAW/Y,IAEjBkX,qBADvB,WAAM,OAAAJ,EAAQ9rB,oBAAoB+tB,EAAW/Y,MAG1E,OAAOjgB,EAAOu2B,OAGCD,EAAA6C,YAAhB,SAAqCC,GACpC,IAAMrC,EAAU,IAAIC,EAChBgB,GAAa,EAajB,OAXAoB,EACEvX,UAAKlb,GAAW,WAAM,OAAA,QACtBkb,MAAK,WACAmW,EAGJjB,EAAQG,UAAKvwB,GAFbiL,YAAW,WAAM,OAAAmlB,EAAQG,UAAKvwB;GAAY,MAM7CqxB,GAAa,EACNjB,EAAQR,OAGAD,EAAA+C,UAAhB,SAA6B9C,GAC5B,OAAO,IAAIlV,SAAQ,SAAA1S,GAAK,OAAAuW,EAAKqR,EAALrR,CAAYvW,OA/VtC,CAAiB2nB,EAAAh1B,EAAAg1B,QAAAh1B,EAAAg1B,MAAK,KA6WtB,IAAIgD,GAA+B,EACnCh4B,EAAAi4B,8BAAA,SAA8C3Z,GAC7C,IAAM4Z,EAAWF,EAEjB,OADAA,EAA8B1Z,EACvB,CACN4T,QAAO,WACN8F,EAA8BE,KAKjC,IAAAC,EAAA,WAKC,SAAAA,EACUC,EACAtc,QAAA,IAAAA,IAAAA,EAAetV,KAAK0J,SAAS+f,SAAS,IAAItkB,MAAM,EAAG,IADnD5M,KAAAq5B,gBAAAA,EACAr5B,KAAA+c,KAAAA,EAJF/c,KAAAs5B,eAAyB,EAwDlC,OAjDCF,EAAAz4B,UAAAwyB,QAAA,WACKnzB,KAAKu5B,SACRv5B,KAAKu5B,QAAQzF,SAIfsF,EAAAz4B,UAAA64B,MAAA,SAAMC,GAAN,IAAAtxB,EAAAnI,KAEK05B,EAAYT,EAKhB,GAJoC,iBAAzBj5B,KAAKq5B,kBACfK,EAAY15B,KAAKq5B,mBAGdK,GAAa,GAAKD,EAAgBC,GAAtC,CAIK15B,KAAKu5B,UACTv5B,KAAKu5B,QAAU,IAAIplB,KAEpB,IAAMrP,GAAQ,IAAIH,OAAQG,MAAO0J,MAAM,MAAM5B,MAAM,GAAGgE,KAAK,MACrD+oB,EAAS35B,KAAKu5B,QAAQ34B,IAAIkE,IAAU,EAI1C,GAHA9E,KAAKu5B,QAAQhlB,IAAIzP,EAAO60B,EAAQ,GAChC35B,KAAKs5B,gBAAkB,EAEnBt5B,KAAKs5B,gBAAkB,EAAG,CAM7B,IAAIM,EAHJ55B,KAAKs5B,eAA6B,GAAZI,EAItB,IAAIG,EAAmB,EACvB75B,KAAKu5B,QAAQnd,SAAQ,SAACud,EAAO70B,KACvB80B,GAAYC,EAAWF,KAC3BC,EAAW90B,EACX+0B,EAAWF,MAIbh0B,QAAQyM,KAAK,IAAIpS,KAAK+c,KAAI,8CAA8C0c,EAAa,+CAA+CI,EAAQ,MAC5Il0B,QAAQyM,KAAKwnB,GAGd,OAAO;AACN,IAAMD,EAASxxB,EAAKoxB,QAAS34B,IAAIkE,IAAU,EAC3CqD,EAAKoxB,QAAShlB,IAAIzP,EAAO60B,EAAQ,MAGpCP,EA3DA,GAkFAzC,EAAA,WAWC,SAAAA,EAAY1xB,GALJjF,KAAA85B,WAAqB,EAM5B95B,KAAK+5B,SAAW90B,EAChBjF,KAAKg6B,YAAcf,EAA8B,EAC9C,IAAIG,EAAep5B,KAAK+5B,UAAY/5B,KAAK+5B,SAAS7C,2BAClD5wB,EA+GL,OAxGC7F,OAAAC,eAAIi2B,EAAAh2B,UAAA,QAAK,KAAT,WAAA,IAAAwH,EAAAnI,KAwDC,OAvDKA,KAAKi6B,SACTj6B,KAAKi6B,OAAS,SAAChe,EAAyBka,EAAgB/C,GAClDjrB,EAAK+xB,aACT/xB,EAAK+xB,WAAa,IAAIC,EAAAnF,YAGvB,IAAMoF,EAAgBjyB,EAAK+xB,WAAWv2B,UAElCy2B,GAAiBjyB,EAAK4xB,UAAY5xB,EAAK4xB,SAASnD,oBACnDzuB,EAAK4xB,SAASnD,mBAAmBzuB,GAGlC,IAWIkyB,EAKA16B,EAhBE26B,EAASnyB,EAAK+xB,WAAWh4B,KAAMi0B,EAAsB,CAACla,EAAUka,GAAtBla,GAwChD,OAtCIme,GAAiBjyB,EAAK4xB,UAAY5xB,EAAK4xB,SAASxB,uBACnDpwB,EAAK4xB,SAASxB,sBAAsBpwB,GAGjCA,EAAK4xB,UAAY5xB,EAAK4xB,SAASQ,kBAClCpyB,EAAK4xB,SAASQ,iBAAiBpyB,EAAM8T,EAAUka,GAK5ChuB,EAAK6xB,cACRK,EAAgBlyB,EAAK6xB,YAAYR,MAAMrxB,EAAK+xB,WAAWM,OAIxD76B,EAAS,CACRwzB,QAAS,YACJkH,GACHA,IAED16B,EAAOwzB,QAAUwD,EAAQ8D,MACpBtyB,EAAK2xB,aACTQ,IACInyB,EAAK4xB,UAAY5xB,EAAK4xB,SAASjD,uBACZ3uB,EAAK+xB,aAAe/xB,EAAK+xB,WAAWv2B,WAEzDwE,EAAK4xB,SAASjD,qBAAqB3uB,OAMpCirB,aAAuBwE,EAAAjE,gBAC1BP,EAAY7Q,IAAI5iB,GACNkE,MAAMC,QAAQsvB,IACxBA,EAAYlxB,KAAKvC,GAGXA,IAGFK,KAAKi6B;gCAObtD,EAAAh2B,UAAAk2B,KAAA,SAAKX,GACJ,GAAIl2B,KAAKk6B,WAAY,CAKfl6B,KAAK06B,iBACT16B,KAAK06B,eAAiB,IAAIP,EAAAnF,YAG3B,IAAK,IAAI2F,EAAO36B,KAAKk6B,WAAWtL,WAAY7jB,EAAI4vB,EAAKrM,QAASvjB,EAAEqjB,KAAMrjB,EAAI4vB,EAAKrM,OAC9EtuB,KAAK06B,eAAex4B,KAAK,CAAC6I,EAAEhH,MAAOmyB,IAGpC,KAAOl2B,KAAK06B,eAAeF,KAAO,GAAG,CAC9B,IAAAvyB,EAAAjI,KAAA06B,eAAAzhB,QAACgD,EAAAhU,EAAA,GAAU2yB,EAAA3yB,EAAA,GACjB,IACyB,mBAAbgU,EACVA,EAAShM,UAAK3J,EAAWs0B,GAEzB3e,EAAS,GAAGhM,KAAKgM,EAAS,GAAI2e,GAE9B,MAAO7vB,GACRwW,EAAA9E,kBAAkB1R,OAMtB4rB,EAAAh2B,UAAAwyB,QAAA,WACKnzB,KAAKk6B,YACRl6B,KAAKk6B,WAAWpG,QAEb9zB,KAAK06B,gBACR16B,KAAK06B,eAAe5G,QAEjB9zB,KAAKg6B,aACRh6B,KAAKg6B,YAAY7G,UAElBnzB,KAAK85B,WAAY,GA1HMnD,EAAA8D,MAAQ,aA4HjC9D,EA9HA,GAAa11B,EAAA01B,QAAAA,EAgIb,IAAAkE,EAAA,SAAApd,GAMC,SAAAod,EAAY51B,GAAZ,IAAAkD,EACCsV,EAAAxN,KAAAjQ,KAAMiF,IAAQjF,YALPmI,EAAA2yB,UAAY,EACZ3yB,EAAA4yB,YAAc,IAAIZ,EAAAnF,WAKzB7sB,EAAK6yB,SAAW/1B,GAAWA,EAAQsxB,QAmCrC,OA3CyC7Y,EAAAmd,EAAApd,GAWxCod,EAAAl6B,UAAAs6B,MAAA,WACCj7B,KAAK86B,aAGND,EAAAl6B,UAAAu6B,OAAA,WACC,GAAuB,IAAnBl7B,KAAK86B,WAAwC,KAAnB96B,KAAK86B,UAClC,GAAI96B,KAAKg7B,SAAU,CAGlB,IAAMjD,EAAS/3B,KAAK+6B,YAAYhF,UAChC/1B,KAAK+6B,YAAYjH;AACjBrW,EAAA9c,UAAMk2B,KAAI5mB,KAAAjQ,KAACA,KAAKg7B,SAASjD,SAKzB,MAAQ/3B,KAAK86B,WAAuC,IAA1B96B,KAAK+6B,YAAYP,MAC1C/c,EAAA9c,UAAMk2B,KAAI5mB,KAAAjQ,KAACA,KAAK+6B,YAAY9hB,UAMhC4hB,EAAAl6B,UAAAk2B,KAAA,SAAKX,GACAl2B,KAAKk6B,aACe,IAAnBl6B,KAAK86B,UACR96B,KAAK+6B,YAAY74B,KAAKg0B,GAEtBzY,EAAA9c,UAAMk2B,KAAI5mB,KAAAjQ,KAACk2B,KAIf2E,EA3CA,CAAyClE,GAA5B11B,EAAA45B,iBAAAA,EAiDb,IAAAM,EAAA,SAAA1d,GAAA,SAAA0d,mDAoDA,OApDwDzd,EAAAyd,EAAA1d,GAIjD0d,EAAAx6B,UAAAy6B,UAAN,SAAgB1uB,EAA4BqU,EAA0Bsa,yGACrE,IAAKr7B,KAAKk6B,WACT,MAAA,CAAA,GAOD,IAJKl6B,KAAKs7B,sBACTt7B,KAAKs7B,oBAAsB,IAAInB,EAAAnF,YAGvB2F,EAAO36B,KAAKk6B,WAAWtL,WAAY7jB,EAAI4vB,EAAKrM,QAASvjB,EAAEqjB,KAAMrjB,EAAI4vB,EAAKrM,OAC9EtuB,KAAKs7B,oBAAoBp5B,KAAK,CAAC6I,EAAEhH,MAAO2I,iFAKlCzE,EAAmBszB,EAAKD,oBAAoBriB,QAA3CgD,EAAQhU,EAAA,GAAEuzB,EAAAvzB,EAAA,GACXwzB,EAA4B,GAE5BC,EAAQC,EAAAA,EAAA,GACVH,GAAI,CACPI,UAAW,SAAC/d,GACX,GAAIpd,OAAOo7B,SAASJ,GACnB,MAAM,IAAI92B,MAAM;CAEb02B,IACHxd,EAAIwd,EAAYxd,EAAuB,mBAAb5B,EAA0BA,EAAWA,EAAS,KAEzEwf,EAAUv5B,KAAK2b,MAIjB,IACyB,mBAAb5B,EACVA,EAAShM,UAAK3J,EAAWo1B,GAEzBzf,EAAS,GAAGhM,KAAKgM,EAAS,GAAIyf,GAE9B,MAAO3wB,UACRwW,EAAA9E,kBAAkB1R,kBAOnB,OADAtK,OAAOwzB,OAAOwH,GACd,CAAA,EAAMza,QAAQ8a,IAAIL,GAAWM,OAAM,SAAAhxB,GAAK,OAAAwW,EAAA9E,kBAAkB1R,qBAA1Dyd,EAAAnH,+CAhCMrhB,KAAKs7B,oBAAoBd,KAAO,IAAMzZ,EAAMO,gCAAuB,CAAA,EAAA,yDAmC5E6Z,EApDA,CAAwDxE,GAA3C11B,EAAAk6B,aAAAA,EAsDb,IAAAa,EAAA,WAMC,SAAAA,IAAA,IAAA7zB,EAAAnI,KAHQA,KAAAi8B,cAAe,EACfj8B,KAAA+3B,OAA+D,GAGtE/3B,KAAK02B,QAAU,IAAIC,EAAW,CAC7BC,mBAAoB,WAAM,OAAAzuB,EAAKyuB,sBAC/BE,qBAAsB,WAAM,OAAA3uB,EAAK2uB,0BAoDpC,OAhDCr2B,OAAAC,eAAIs7B,EAAAr7B,UAAA,QAAK,KAAT,WACC,OAAOX,KAAK02B,QAAQR,uCAGrB8F,EAAAr7B,UAAA4hB,IAAA,SAAI2T,GAAJ,IAAA/tB,EAAAnI,KACO+K,EAAI,CAAEmrB,MAAOA,EAAOja,SAAU,MACpCjc,KAAK+3B,OAAO71B,KAAK6I,GAEb/K,KAAKi8B,cACRj8B,KAAKk8B,KAAKnxB,GAYX,OAAO6sB,EAAAnE,aAAaiB,EAAA7P,MATJ,WACX1c,EAAK8zB,cACR9zB,EAAKg0B,OAAOpxB;CAGb,IAAMqxB,EAAMj0B,EAAK4vB,OAAOt2B,QAAQsJ,GAChC5C,EAAK4vB,OAAO1b,OAAO+f,EAAK,QAMlBJ,EAAAr7B,UAAAi2B,mBAAR,WAAA,IAAAzuB,EAAAnI,KACCA,KAAKi8B,cAAe,EACpBj8B,KAAK+3B,OAAO3b,SAAQ,SAAArR,GAAK,OAAA5C,EAAK+zB,KAAKnxB,OAG5BixB,EAAAr7B,UAAAm2B,qBAAR,WAAA,IAAA3uB,EAAAnI,KACCA,KAAKi8B,cAAe,EACpBj8B,KAAK+3B,OAAO3b,SAAQ,SAAArR,GAAK,OAAA5C,EAAKg0B,OAAOpxB,OAG9BixB,EAAAr7B,UAAAu7B,KAAR,SAAanxB,GAAb,IAAA5C,EAAAnI,KACC+K,EAAEkR,SAAWlR,EAAEmrB,OAAM,SAAAtjB,GAAK,OAAAzK,EAAKuuB,QAAQG,KAAKjkB,OAGrCopB,EAAAr7B,UAAAw7B,OAAR,SAAepxB,GACVA,EAAEkR,UACLlR,EAAEkR,SAASkX,UAEZpoB,EAAEkR,SAAW,MAGd+f,EAAAr7B,UAAAwyB,QAAA,WACCnzB,KAAK02B,QAAQvD,WAEf6I,EA7DA,GAAa/6B,EAAA+6B,iBAAAA,EAmFb,IAAAK,EAAA,WAAA,SAAAA,IAESr8B,KAAAs8B,QAAwB,GAwBjC,OAtBCD,EAAA17B,UAAA47B,UAAA,SAAarG,GAAb,IAAA/tB,EAAAnI,KACC,OAAO,SAACic,EAAUka,EAAW/C,GAC5B,OAAO8C,GAAM,SAAAt2B,GACZ,IAAMu4B,EAAShwB,EAAKm0B,QAAQn0B,EAAKm0B,QAAQx8B,OAAS,GAE9Cq4B,EACHA,EAAOj2B,MAAK,WAAM,OAAA+Z,EAAShM,KAAKkmB,EAAUv2B,MAE1Cqc,EAAShM,KAAKkmB,EAAUv2B,UAEvB0G,EAAW8sB,KAIhBiJ,EAAA17B,UAAA67B,aAAA,SAAuB5c,GACtB,IAAMuY,EAAyB,GAC/Bn4B,KAAKs8B,QAAQp6B,KAAKi2B,GAClB,IAAMvlB,EAAIgN,IAGV,OAFA5f,KAAKs8B,QAAQ5c,MACbyY,EAAO/b,SAAQ,SAAAkc,GAAS,OAAAA,OACjB1lB,GAETypB,EA1BA,GAAap7B,EAAAo7B,cAAAA,EAkCb,IAAAI,EAAA,WAAA,SAAAA;AAAA,IAAAt0B,EAAAnI,KAESA,KAAA08B,WAAY,EACZ18B,KAAA28B,WAAuB1G,EAAMjD,KAC7BhzB,KAAA48B,mBAAkChF,EAAA7E,WAAWC,KAEpChzB,KAAA02B,QAAU,IAAIC,EAAW,CACzC4B,sBAAuB,WACtBpwB,EAAKu0B,WAAY,EACjBv0B,EAAKy0B,mBAAqBz0B,EAAKw0B,WAAWx0B,EAAKuuB,QAAQG,KAAM1uB,EAAKuuB,UAEnEI,qBAAsB,WACrB3uB,EAAKu0B,WAAY,EACjBv0B,EAAKy0B,mBAAmBzJ,aAIjBnzB,KAAAk2B,MAAkBl2B,KAAK02B,QAAQR,MAezC,OAbCz1B,OAAAC,eAAI+7B,EAAA97B,UAAA,QAAK,KAAT,SAAUu1B,GACTl2B,KAAK28B,WAAazG,EAEdl2B,KAAK08B,YACR18B,KAAK48B,mBAAmBzJ,UACxBnzB,KAAK48B,mBAAqB1G,EAAMl2B,KAAK02B,QAAQG,KAAM72B,KAAK02B,2CAI1D+F,EAAA97B,UAAAwyB,QAAA,WACCnzB,KAAK48B,mBAAmBzJ,UACxBnzB,KAAK02B,QAAQvD,WAEfsJ,EAhCA,GAAax7B,EAAAw7B,MAAAA,wGCxyBb,IAKiBI,EALXC,EAAgBr8B,OAAOwzB,QAAO,SAAUzwB,EAAUu5B,GACvD,IAAM3F,EAAS7lB,WAAW/N,EAASw5B,KAAKD,GAAU,GAClD,MAAO,CAAE5J,QAAO,WAAKoE,aAAaH,SAGnC,SAAiByF,GAEAA,EAAAI,oBAAhB,SAAoC1J;AACnC,OAAIA,IAAUsJ,EAAkB7J,MAAQO,IAAUsJ,EAAkBK,YAGhE3J,aAAiB4J,MAGhB5J,GAA0B,iBAAVA,KAGkD,kBAAxDA,EAA4BjS,yBACyB,mBAAxDiS,EAA4B6J,2BAI5BP,EAAA7J,KAA0BvyB,OAAOwzB,OAAO,CACpD3S,yBAAyB,EACzB8b,wBAAyBxC,EAAA3E,MAAMjD,OAGnB6J,EAAAK,UAA+Bz8B,OAAOwzB,OAAO,CACzD3S,yBAAyB,EACzB8b,wBAAyBN,IAxB3B,CAAiBD,EAAA57B,EAAA47B,oBAAA57B,EAAA47B,kBAAiB,KA4BlC,IAAAM,EAAA,WAAA,SAAAA,IAESn9B,KAAAq9B,cAAwB,EACxBr9B,KAAAs9B,SAAgC,KAgCzC,OA9BQH,EAAAx8B,UAAA48B,OAAP,WACMv9B,KAAKq9B,eACTr9B,KAAKq9B,cAAe,EAChBr9B,KAAKs9B,WACRt9B,KAAKs9B,SAASzG,UAAKvwB,GACnBtG,KAAKmzB,aAKR1yB,OAAAC,eAAIy8B,EAAAx8B,UAAA,0BAAuB,KAA3B,WACC,OAAOX,KAAKq9B,8CAGb58B,OAAAC,eAAIy8B,EAAAx8B,UAAA,0BAAuB,KAA3B,WACC,OAAIX,KAAKq9B,aACDP,GAEH98B,KAAKs9B,WACTt9B,KAAKs9B,SAAW,IAAI1C,EAAAjE,SAEd32B,KAAKs9B,SAASpH,wCAGfiH,EAAAx8B,UAAAwyB,QAAP,WACKnzB,KAAKs9B,WACRt9B,KAAKs9B,SAASnK;AACdnzB,KAAKs9B,SAAW,OAGnBH,EAnCA,GAqCAK,EAAA,WAKC,SAAAA,EAAY7N,GAHJ3vB,KAAAy9B,YAA6Bn3B,EAC7BtG,KAAA09B,qBAAgCp3B,EAGvCtG,KAAK09B,gBAAkB/N,GAAUA,EAAOyN,wBAAwBp9B,KAAKu9B,OAAQv9B,MAyC/E,OAtCCS,OAAAC,eAAI88B,EAAA78B,UAAA,QAAK,KAAT,WAMC,OALKX,KAAKy9B,SAGTz9B,KAAKy9B,OAAS,IAAIN,GAEZn9B,KAAKy9B,wCAGbD,EAAA78B,UAAA48B,OAAA,WACMv9B,KAAKy9B,OAMCz9B,KAAKy9B,kBAAkBN,GAEjCn9B,KAAKy9B,OAAOF,SAJZv9B,KAAKy9B,OAASZ,EAAkBK,WAQlCM,EAAA78B,UAAAwyB,QAAA,SAAQoK,QAAA,IAAAA,IAAAA,GAAA,GACHA,GACHv9B,KAAKu9B,SAEFv9B,KAAK09B,iBACR19B,KAAK09B,gBAAgBvK,UAEjBnzB,KAAKy9B,OAICz9B,KAAKy9B,kBAAkBN,GAEjCn9B,KAAKy9B,OAAOtK,UAJZnzB,KAAKy9B,OAASZ,EAAkB7J,MAOnCwK,EA/CA,GAAav8B,EAAAu8B,wBAAAA,kGClFb,IAEIn9B,GAAa,EACbs9B,GAAe,EACfC,GAAW,EACXC,GAAY,EACZC,GAAS,EACTC,GAAS,EACTC,OAA8B13B,EAC9B23B,EATqB,KAUrBC,OAA8C53B,EAC9C63B,OAAiC73B,EAiC/B6J,EAAyC,oBAAZjP,cAAuD,IAArBA,QAAQC,eAAiE,IAA9BD,QAAQC,SAASC,UAA6C,aAAjBF,QAAQG,KAGrK,GAAyB,iBAAdE,WAA2B4O,GAS/B,GAAuB,iBAAZjP,QAAsB;AACvCb,EAAmC,UAArBa,QAAQQ,SACtBi8B,EAAqC,WAArBz8B,QAAQQ,SACxBk8B,EAAiC,UAArB18B,QAAQQ,SACpBs8B,EA5DwB,KA6DxBC,EA7DwB,KA8DxB,IAAMG,EAAel9B,QAAQ4F,IAAuB,kBACpD,GAAIs3B,EACH,IACC,IAAMC,EAAuBC,KAAKC,MAAMH,GAClCI,EAAWH,EAAUI,mBAAmB,KAC9CT,EAAUK,EAAUK,OAEpBT,EAAYO,GArEU,KAsEtBN,EAA0BG,EAAUH,wBACnC,MAAOnzB,IAGV8yB,GAAY,QA1BZM,EAAa58B,UAAUC,UACvBnB,EAAa89B,EAAW18B,QAAQ,YAAc,EAC9Ck8B,EAAeQ,EAAW18B,QAAQ,cAAgB,EAClDs8B,EAASI,EAAW18B,QAAQ,cAAgB,KAAOF,UAAUo9B,gBAAkBp9B,UAAUo9B,eAAiB,EAC1Gf,EAAWO,EAAW18B,QAAQ,UAAY,EAC1Cq8B,GAAS,EAETG,EADAD,EAAUz8B,UAAUq9B,SA6BrB39B,EAAA49B,iBAAA,SAAiCn9B,GAChC,OAAQA,GACP,KAAA,EAAmB,MAAO,MAC1B,KAAA,EAAmB,MAAO,MAC1B,KAAA,EAAqB,MAAO,QAC5B,KAAA,EAAuB,MAAO,YAIhC,IAAIo9B,EAAS,EACTnB,EACHmB,EAAS,EACCz+B,EACVy+B,EAAS,EACClB,IACVkB,EAAS,GAGG79B,EAAAwB,UAAYpC,EACZY,EAAA89B,YAAcpB,EACd18B,EAAA+9B,QAAUpB,EACV38B,EAAAg+B,SAAWpB,EACX58B,EAAAi+B,MAAQpB,EACR78B,EAAAk+B,MAAQpB,EACR98B,EAAAS,SAAWo9B,EACX79B,EAAAO,UAAY28B,EAEzBl9B,EAAAm+B,WAAA,WACC,OAAOvB,IAAcx9B,GAAoC,IAArBa,QAAQm+B,UAQhCp+B,EAAA29B,SAAWX,EAExB,SAAiBqB,GAEAA,EAAAv7B,MAAhB,WACC,OAAO9C,EAAA29B,UAGQU,EAAAC,iBAAhB,WACC,OAAwB,IAApBt+B,EAAA29B,SAAS9+B,OACQ,OAAbmB,EAAA29B,SACG39B,EAAA29B,SAAS9+B,QAAU,IACN,MAAhBmB,EAAA29B,SAAS,IAA8B,MAAhB39B,EAAA29B,SAAS,IAA8B,MAAhB39B,EAAA29B,SAAS;AAMhDU,EAAAE,UAAhB,WACC,MAAoB,OAAbv+B,EAAA29B,UAjBT,CAAiB39B,EAAAq+B,WAAAr+B,EAAAq+B,SAAQ,KA0BZr+B,EAAAy9B,OAASV,EAKT/8B,EAAAw+B,uBAAyBvB,EAEtC,IAAMwB,EAA4B,iBAAThM,KAAoBA,KAAyB,iBAAXxzB,OAAsBA,OAAS,GAC7Ee,EAAA0+B,QAAeD,EAMfz+B,EAAA2+B,aAA8B,WAC1C,GAAI3+B,EAAA0+B,QAAQC,aACX,OAAO3+B,EAAA0+B,QAAQC,aAAa5C,KAAK/7B,EAAA0+B,SAElC,GAAmC,mBAAxB1+B,EAAA0+B,QAAQE,cAA+B5+B,EAAA0+B,QAAQr+B,cAAe,CAKxE,IAAIw+B,EAA2B,GAC/B7+B,EAAA0+B,QAAQ30B,iBAAiB,WAAW,SAACD,GACpC,GAAIA,EAAE2B,MAAQ3B,EAAE2B,KAAKqzB,qBACpB,IAAK,IAAIngC,EAAI,EAAGC,EAAMigC,EAAQhgC,OAAQF,EAAIC,EAAKD,IAAK,CACnD,IAAMogC,EAAYF,EAAQlgC,GAC1B,GAAIogC,EAAU77B,KAAO4G,EAAE2B,KAAKqzB,qBAG3B,OAFAD,EAAQzjB,OAAOzc,EAAG,QAClBogC,EAAUx8B,eAMd,IAAIy8B,EAAS,EACb,OAAO,SAACz8B,GACP,IAAM08B,IAASD,EACfH,EAAQ59B,KAAK,CACZiC,GAAI+7B,EACJ18B,SAAUA,IAEXvC,EAAA0+B,QAAQE,YAAY,CAAEE,qBAAsBG,GAAQ,MAGtD,GAAuB,oBAAZh/B,SAAuD,mBAArBA,QAAQk3B,SACpD,OAAOl3B,QAAQk3B,SAAS4E,KAAK97B,SAE9B,IAAMi/B,EAAWnf,QAAQ1T,UACzB,OAAO,SAAC9J,GAAuC,OAAA28B,EAAS3e,KAAKhe,IApCnB,GA4C9BvC,EAAAyvB,GAAMiN,EAAc,EAA8Bt9B,EAAY,EAA0B,mGC1MrGY,EAAAm/B,oBAAA,SAAoChqB;AACnC,OAAKA,GAAsB,iBAARA,GAGU,IAAtBA,EAAIiqB,OAAOvgC,QAMnBmB,EAAAq/B,IAAA,SAAoB/gB,EAAWghB,EAAWC,QAAA,IAAAA,IAAAA,EAAA,KAIzC,IAHA,IAAMpqB,EAAM,GAAKmJ,EACX3M,EAAI,CAACwD,GAEFxW,EAAIwW,EAAItW,OAAQF,EAAI2gC,EAAG3gC,IAC/BgT,EAAE1Q,KAAKs+B,GAGR,OAAO5tB,EAAE4H,UAAU5J,KAAK,KAGzB,IAAM6vB,EAAgB,WAsCtB,SAAgBC,EAAuB38B,GACtC,OAAOA,EAAMnB,QAAQ,kCAAmC,QAkBzD,SAAgB+9B,EAAM39B,EAAkBC,GACvC,IAAKD,IAAaC,EACjB,OAAOD,EAGR,IAAM49B,EAAY39B,EAAOnD,OACzB,GAAkB,IAAd8gC,GAAuC,IAApB59B,EAASlD,OAC/B,OAAOkD,EAKR,IAFA,IAAI69B,EAAS,EAEN79B,EAASvB,QAAQwB,EAAQ49B,KAAYA,GAC3CA,GAAkBD,EAEnB,OAAO59B,EAAS4E,UAAUi5B,GAQ3B,SAAgBC,EAAM99B,EAAkBC,GACvC,IAAKD,IAAaC,EACjB,OAAOD,EAGR,IAAM49B,EAAY39B,EAAOnD,OACxBihC,EAAc/9B,EAASlD,OAExB,GAAkB,IAAd8gC,GAAmC,IAAhBG,EACtB,OAAO/9B,EAMR,IAHA,IAAI69B,EAASE,EACZ3E,GAAO,GAIM,KADbA,EAAMp5B,EAAS2E,YAAY1E,EAAQ49B,EAAS,KAC1BzE,EAAMwE,IAAcC,GAF1B,CAKZ,GAAY,IAARzE,EACH,MAAO,GAERyE,EAASzE,EAGV,OAAOp5B,EAAS4E,UAAU,EAAGi5B,GAwJ9B,SAAgB1iB,EAAQ3V,EAAWC,GAClC,OAAID,EAAIC,GACC,EACED,EAAIC,EACP,EAEA,EA+CT,SAAgBu4B,EAAmBC,GAClC,OAAOA,GAAI,IAAkBA,GAAI,IAGlC,SAAgBC,EAAmBD,GAClC,OAAOA,GAAI,IAAkBA,GAAI,GAGlC,SAASE,EAAcF,GACtB,OAAOD,EAAmBC,IAASC,EAAmBD,GAOvD,SAASG,EAAmB54B,EAAWC,EAAW44B,QAAA,IAAAA,IAAAA,EAAS74B,EAAE1I,QAC5D,IAAK,IAAIF,EAAI,EAAGA,EAAIyhC,EAAQzhC,IAAK,CAChC,IAAM0hC,EAAQ94B,EAAE2G,WAAWvP,GACrB2hC,EAAQ94B,EAAE0G,WAAWvP,GAE3B,GAAI0hC,IAAUC,EAKd,GAAIJ,EAAcG,IAAUH,EAAcI,GAAQ,CACjD,IAAMC,EAAO/5B,KAAKmlB,IAAI0U,EAAQC,GAC9B,GAAa,IAATC,GAAuB,KAATA,EACjB,OAAO,OAMR,GAAI38B,OAAO48B,aAAaH,GAAOpR,gBAAkBrrB,OAAO48B,aAAaF,GAAOrR,cAC3E,OAAO,EAKV,OAAO;AAiDR,SAASwR,EAAal5B,EAAWm5B,EAAgBC,EAAcn5B,EAAWo5B,EAAgBC,GACzF,KAAOH,EAASC,GAAQC,EAASC,GAAM,CACtC,GAAIt5B,EAAEm5B,KAAYl5B,EAAEo5B,GACnB,OAAO,EAERF,GAAU,EACVE,GAAU,EAEX,OAAO,EA4CR,SAAgBE,EAAgBC,GAC/B,OAAQ,OAAUA,GAAYA,GAAY,MAG3C,SAAgBC,EAAeD,GAC9B,OAAQ,OAAUA,GAAYA,GAAY,MAM3C,SAAgBE,EAAiB9rB,EAAavW,EAAaghC,GAC1D,IAAMmB,EAAW5rB,EAAIjH,WAAW0xB,GAChC,GAAIkB,EAAgBC,IAAanB,EAAS,EAAIhhC,EAAK,CAClD,IAAMsiC,EAAe/rB,EAAIjH,WAAW0xB,EAAS,GAC7C,GAAIoB,EAAeE,GAClB,OAAsCA,EAAe,OAA5CH,EAAW,OAAW,IAAgC,MAGjE,OAAOA,EAMR,SAASI,EAAiBhsB,EAAayqB,GACtC,IAAMmB,EAAW5rB,EAAIjH,WAAW0xB,EAAS,GACzC,GAAIoB,EAAeD,IAAanB,EAAS,EAAG,CAC3C,IAAMwB,EAAejsB,EAAIjH,WAAW0xB,EAAS,GAC7C,GAAIkB,EAAgBM,GACnB,OAA0CL,EAAW,OAA5CK,EAAe,OAAW,IAA4B,MAGjE,OAAOL,EA8CR,SAASM,EAAyBlsB,EAAayqB,GAC9C,IAAM0B,EAAoBC,EAAkBC,cACtC5iC,EAAMuW,EAAItW,OACV4iC,EAAgB7B,EAChB8B,EAAmBT,EAAiB9rB,EAAKvW,EAAKghC,GAC9C+B,EAA2BL,EAAkBM,qBAAqBF,GACxE9B,GAAW8B,GAAgB,MAAkD,EAAI,EAIjF,IADA,IAAIG,EAAoBF,EACjB/B,EAAShhC,GAAK,CACpB,IAAMkjC,EAAgBb,EAAiB9rB,EAAKvW,EAAKghC,GAC3CmC,EAAwBT,EAAkBM,qBAAqBE,GACrE,GAAIE,EAA8BH,EAAmBE,GACpD,MAEDnC,GAAWkC,GAAa,MAAkD,EAAI,EAC9ED,EAAoBE,EAErB,IAAME,EAAYrC,EAKlB,IAFAA,EAAS6B,EACTI,EAAoBF,EACb/B,EAAS,GAAG,CAClB,IAAMsC,EAAgBf,EAAiBhsB,EAAKyqB,GACtCuC,EAAwBb,EAAkBM,qBAAqBM,GACrE,GAAIF,EAA8BG,EAAuBN,GACxD,MAEDjC,GAAWsC,GAAa,MAAkD,EAAI,EAC9EL,EAAoBM,EAGrB,MAAO,CAACvC,EAAQqC,GA9iBjBjiC,EAAAoiC,OAAA,SAAuBt/B,OAAe,IAAAgK,EAAA,GAAA/F,EAAA,EAAAA,EAAA+H,UAAAjQ,OAAAkI,IAAA+F,EAAA/F,EAAA,GAAA+H,UAAA/H,GACrC,OAAoB,IAAhB+F,EAAKjO,OACDiE,EAEDA,EAAMnB,QAAQ69B,GAAe,SAAUpwB,EAAOizB,GACpD,IAAMlH,EAAMvlB,SAASysB,EAAO,IAC5B,OAAOC,MAAMnH,IAAQA,EAAM,GAAKA,GAAOruB,EAAKjO,OAC3CuQ,EACAtC,EAAKquB,OAQRn7B,EAAAuiC,OAAA,SAAuBC,GACtB,OAAOA,EAAK7gC,QAAQ,UAAU,SAAUyN,GACvC,OAAQA,GACP,IAAK;AAAK,MAAO,OACjB,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,QACjB,QAAS,OAAOA,OAQnBpP,EAAAy/B,uBAAAA,EASAz/B,EAAAo/B,KAAA,SAAqBr9B,EAAkBC,GAEtC,YAFsC,IAAAA,IAAAA,EAAA,KAE/B69B,EADSH,EAAM39B,EAAUC,GACVA,IAQvBhC,EAAA0/B,MAAAA,EAuBA1/B,EAAA6/B,MAAAA,EA6BA7/B,EAAAyiC,4BAAA,SAA4C/wB,GAC3C,OAAOA,EAAQ/P,QAAQ,wCAAyC,QAAQA,QAAQ,QAAS,OAG1F3B,EAAA0iC,eAAA,SAA+BhxB,GAC9B,OAAOA,EAAQ/P,QAAQ,MAAO,KAM/B3B,EAAA8B,WAAA,SAA2BC,EAAkBC,GAC5C,GAAID,EAASlD,OAASmD,EAAOnD,OAC5B,OAAO,EAGR,GAAIkD,IAAaC,EAChB,OAAO,EAGR,IAAK,IAAIrD,EAAI,EAAGA,EAAIqD,EAAOnD,OAAQF,IAClC,GAAIoD,EAASpD,KAAOqD,EAAOrD,GAC1B,OAAO,EAIT,OAAO,GAMRqB,EAAAiC,SAAA,SAAyBF,EAAkBC,GAC1C,IAAMu+B,EAAOx+B,EAASlD,OAASmD,EAAOnD,OACtC,OAAI0hC,EAAO,EACHx+B,EAASvB,QAAQwB,EAAQu+B,KAAUA,EACvB,IAATA,GACHx+B,IAAaC,GActBhC,EAAA2iC,aAAA,SAA6BC,EAAsBC,EAAkB7+B,GACpE,QADoE,IAAAA,IAAAA,EAAA,KAC/D4+B,EACJ,MAAM,IAAIl/B,MAAM,yCAEZm/B,IACJD,EAAenD,EAAuBmD,IAEnC5+B,EAAQ8+B,YACN,KAAKlhC,KAAKghC,EAAaG,OAAO,MAClCH,EAAe,MAAQA,GAEnB,KAAKhhC,KAAKghC,EAAaG,OAAOH,EAAa/jC,OAAS,MACxD+jC,GAA8B,QAGhC,IAAII,EAAY,GAchB,OAbIh/B,EAAQ/E,SACX+jC,GAAa,KAETh/B,EAAQi/B,YACZD,GAAa,KAEVh/B,EAAQk/B,YACXF,GAAa,KAEVh/B,EAAQm/B,UACXH,GAAa,KAGP,IAAII,OAAOR,EAAcI,IAGjChjC,EAAAqjC,yBAAA,SAAyCC;AAGxC,MAAsB,MAAlBA,EAAO1e,QAAoC,OAAlB0e,EAAO1e,QAAqC,MAAlB0e,EAAO1e,QAAoC,WAAlB0e,EAAO1e,WAMzE0e,EAAOC,KAAK,KACc,IAArBD,EAAO7hB,YAG3BzhB,EAAAwjC,4BAAA,SAA4CC,GAC3C,QAASA,EAAYr0B,MAAM,0BAG5BpP,EAAA0jC,YAAA,SAA4BJ,GAC3B,OAAQA,EAAOrkC,OAAS,IAAM,KAC1BqkC,EAAOK,WAAa,IAAM,KAC1BL,EAAOJ,UAAY,IAAM,KACxBI,EAAeH,QAAU,IAAM,KAOrCnjC,EAAA4jC,wBAAA,SAAwCzuB,GACvC,IAAK,IAAIxW,EAAI,EAAGC,EAAMuW,EAAItW,OAAQF,EAAIC,EAAKD,IAAK,CAC/C,IAAMklC,EAAS1uB,EAAIjH,WAAWvP,GAC9B,GAAU,KAANklC,GAAmC,IAANA,EAChC,OAAOllC,EAGT,OAAQ,GAOTqB,EAAA8jC,qBAAA,SAAqC3uB,EAAa2I,EAAmBuQ,QAAnB,IAAAvQ,IAAAA,EAAA,QAAmB,IAAAuQ,IAAAA,EAAclZ,EAAItW,QACtF,IAAK,IAAIF,EAAImf,EAAOnf,EAAI0vB,EAAK1vB,IAAK,CACjC,IAAMklC,EAAS1uB,EAAIjH,WAAWvP,GAC9B,GAAU,KAANklC,GAAmC,IAANA,EAChC,OAAO1uB,EAAIxO,UAAUmX,EAAOnf,GAG9B,OAAOwW,EAAIxO,UAAUmX,EAAOuQ,IAO7BruB,EAAA+jC,uBAAA,SAAuC5uB,EAAa6uB,QAAA,IAAAA,IAAAA,EAAqB7uB,EAAItW,OAAS,GACrF,IAAK,IAAIF,EAAIqlC,EAAYrlC,GAAK,EAAGA,IAAK,CACrC,IAAMklC,EAAS1uB,EAAIjH,WAAWvP,GAC9B,GAAU,KAANklC,GAAmC,IAANA,EAChC,OAAOllC,EAGT,OAAQ,GAGTqB,EAAAkd,QAAAA,EAUAld,EAAAikC,kBAAA,SAAkC18B,EAAWC,GAE5C,IADA,IAAM5I,EAAM4H,KAAK2Z,IAAI5Y,EAAE1I,OAAQ2I,EAAE3I,QACxBF,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAC7B,IAAI0hC,EAAQ94B,EAAE2G,WAAWvP,GACrB2hC,EAAQ94B,EAAE0G,WAAWvP,GAEzB,GAAI0hC,IAAUC,EAAd,CAKIL,EAAmBI,KACtBA,GAAS,IAGNJ,EAAmBK,KACtBA,GAAS,IAGV,IAAMC,EAAOF,EAAQC,EAErB,GAAa,IAATC,EAIG,OAAIR,EAAmBM,IAAUN,EAAmBO,GAEnDC,EAGArjB,EAAQ3V,EAAE0nB,cAAeznB,EAAEynB;AAIpC,OAAI1nB,EAAE1I,OAAS2I,EAAE3I,QACR,EACE0I,EAAE1I,OAAS2I,EAAE3I,OAChB,EAEA,GAITmB,EAAA+/B,mBAAAA,EAIA//B,EAAAigC,mBAAAA,EAQAjgC,EAAAkkC,iBAAA,SAAiC38B,EAAWC,GAC3C,OAAOD,EAAE1I,SAAW2I,EAAE3I,QAAUshC,EAAmB54B,EAAGC,IA+BvDxH,EAAAmkC,qBAAA,SAAqChvB,EAAa4pB,GACjD,IAAMqF,EAAkBrF,EAAUlgC,OAClC,QAAIkgC,EAAUlgC,OAASsW,EAAItW,SAIpBshC,EAAmBhrB,EAAK4pB,EAAWqF,IAM3CpkC,EAAA8hB,mBAAA,SAAmCva,EAAWC,GAE7C,IAAI7I,EACHC,EAAM4H,KAAK2Z,IAAI5Y,EAAE1I,OAAQ2I,EAAE3I,QAE5B,IAAKF,EAAI,EAAGA,EAAIC,EAAKD,IACpB,GAAI4I,EAAE2G,WAAWvP,KAAO6I,EAAE0G,WAAWvP,GACpC,OAAOA,EAIT,OAAOC,GAMRoB,EAAAqkC,mBAAA,SAAmC98B,EAAWC,GAE7C,IAAI7I,EACHC,EAAM4H,KAAK2Z,IAAI5Y,EAAE1I,OAAQ2I,EAAE3I,QAEtBylC,EAAa/8B,EAAE1I,OAAS,EACxB0lC,EAAa/8B,EAAE3I,OAAS,EAE9B,IAAKF,EAAI,EAAGA,EAAIC,EAAKD,IACpB,GAAI4I,EAAE2G,WAAWo2B,EAAa3lC,KAAO6I,EAAE0G,WAAWq2B,EAAa5lC,GAC9D,OAAOA,EAIT,OAAOC,GAkBRoB,EAAAwkC,QAAA,SAAwBj9B,EAAWC,GAClC,IAAMm5B,EAAOp5B,EAAE1I,OACXgiC,EAAOr5B,EAAE3I,OACT6hC,EAASC,EAAOE,EAEpB,GAAe,IAAXH,EACH,OAAOn5B,IAAMC,EAAIm5B,EAAO,EAMzB,IALWD,EAAS,IACnBG,GAAQH,EACRA,EAAS,GAGHA,EAASC,GAAQE,EAAO,GAAG,CACjC,GAAIJ,EAAal5B,EAAGm5B,EAAQC,EAAMn5B,EAAG,EAAGq5B,GACvC,OAAOA,EAERA,GAAQ,EACRH,GAAU,EAEX,OAAO,GAkBR1gC,EAAA8gC,gBAAAA,EAIA9gC,EAAAghC,eAAAA,EAOAhhC,EAAAihC,iBAAAA,EAyBAjhC,EAAAykC,eAAA,SAA+BtvB,EAAayqB,GAC3C,IAAM0B,EAAoBC,EAAkBC,cACtCC,EAAgB7B,EAChBhhC,EAAMuW,EAAItW,OAEV6iC,EAAmBT,EAAiB9rB,EAAKvW,EAAKghC,GACpDA,GAAW8B,GAAgB,MAAkD,EAAI,EAGjF,IADA,IAAIG,EAAoBP,EAAkBM,qBAAqBF,GACxD9B,EAAShhC,GAAK,CACpB,IAAMkjC,EAAgBb,EAAiB9rB,EAAKvW,EAAKghC,GAC3CmC,EAAwBT,EAAkBM,qBAAqBE,GACrE,GAAIE,EAA8BH,EAAmBE,GACpD,MAEDnC,GAAWkC,GAAa,MAAkD,EAAI,EAC9ED,EAAoBE,EAGrB,OAAQnC,EAAS6B;AAGlBzhC,EAAA0kC,eAAA,SAA+BvvB,EAAayqB,GAC3C,IAAM0B,EAAoBC,EAAkBC,cACtCC,EAAgB7B,EAEhB8B,EAAmBP,EAAiBhsB,EAAKyqB,GAC/CA,GAAW8B,GAAgB,MAAkD,EAAI,EAGjF,IADA,IAAIG,EAAoBP,EAAkBM,qBAAqBF,GACxD9B,EAAS,GAAG,CAClB,IAAMsC,EAAgBf,EAAiBhsB,EAAKyqB,GACtCuC,EAAwBb,EAAkBM,qBAAqBM,GACrE,GAAIF,EAA8BG,EAAuBN,GACxD,MAEDjC,GAAWsC,GAAa,MAAkD,EAAI,EAC9EL,EAAoBM,EAGrB,OAAQV,EAAgB7B,GAwCzB5/B,EAAA2kC,wBAAA,SAAwCxvB,EAAayqB,GACpD,OAAIA,EAAS,GAAKoB,EAAe7rB,EAAIjH,WAAW0xB,IACxCyB,EAAyBlsB,EAAKyqB,EAAS,GAExCyB,EAAyBlsB,EAAKyqB,IAOtC5/B,EAAA4kC,WAAA,SAA2BzvB,GAQ1B,IAPA,IAAM0vB,EAAS1vB,EAAItW,OAKfimC,EAAa,EACbC,EAAY,EACTA,EAAYF,GAAQ,CAE1BE,IADMC,EAAY/D,EAAiB9rB,EAAK0vB,EAAQE,KACzB,MAAkD,EAAI,EAG5ED,GADGE,EAAY,IACD,EACJA,EAAY,KACR,EACJA,EAAY,MACR,EAEA,EAKhB,IAAMlmB,EAAM,IAAImmB,WAAWH,GAC3BC,EAAY,EAEZ,IADA,IAAIG,EAAY,EACTH,EAAYF,GAAQ,CAC1B,IAAMG,EACND,IADMC,EAAY/D,EAAiB9rB,EAAK0vB,EAAQE,KACzB,MAAkD,EAAI,EAEzEC,EAAY,IACflmB,EAAIomB,KAAeF,EACTA,EAAY,MACtBlmB,EAAIomB,KAAe,KAA2B,KAAZF,KAAoD,EACtFlmB,EAAIomB,KAAe,KAA2B,GAAZF,KAAoD,GAC5EA,EAAY,OACtBlmB,EAAIomB,KAAe,KAA2B,MAAZF,KAAoD,GACtFlmB,EAAIomB,KAAe,KAA2B,KAAZF,KAAoD,EACtFlmB,EAAIomB,KAAe,KAA2B,GAAZF,KAAoD,IAEtFlmB,EAAIomB,KAAe,KAA2B,QAAZF,KAAoD,GACtFlmB,EAAIomB,KAAe,KAA2B,OAAZF,KAAoD,GACtFlmB,EAAIomB,KAAe,KAA2B,KAAZF,KAAoD,EACtFlmB,EAAIomB,KAAe,KAA2B,GAAZF,KAAoD,GAIxF,OAAOlmB,GAOR9e,EAAAmlC,WAAA,SAA2BjO,GAM1B,IAHA,IAAMt4B,EAAMs4B,EAAOkO,WACb1mC,EAAmB,GACrBkhC,EAAS,EACNA,EAAShhC,GAAK,CACpB,IAAMymC,EAAKnO,EAAO0I,GACdoF,OAAS;CA2Bb,IAxBCA,EAFGK,GAAM,KAAczF,EAAS,EAAIhhC,GAGb,EAAnBs4B,EAAO0I,OAA2B,KAAQ,GACrB,GAAnB1I,EAAO0I,OAA2B,KAAQ,GACvB,GAAnB1I,EAAO0I,OAA2B,IAAO,GACtB,GAAnB1I,EAAO0I,OAA2B,IAAO,EAErCyF,GAAM,KAAczF,EAAS,EAAIhhC,GAGpB,GAAnBs4B,EAAO0I,OAA2B,KAAQ,GACrB,GAAnB1I,EAAO0I,OAA2B,IAAO,GACtB,GAAnB1I,EAAO0I,OAA2B,IAAO,EAErCyF,GAAM,KAAczF,EAAS,EAAIhhC,GAGpB,GAAnBs4B,EAAO0I,OAA2B,IAAO,GACpB,GAAnB1I,EAAO0I,OAA2B,IAAO,EAInC1I,EAAO0I,OAGF,GAAKoF,GAAa,OAAYA,GAAa,OAAUA,GAAa,MAEnFtmC,EAAOuC,KAAK2C,OAAO48B,aAAawE,SAC1B,GAAIA,GAAa,OAAYA,GAAa,QAAU,CAE1D,IAAMM,EAASN,EAAY,MACrBO,EAAK,QAAoB,QAATD,KAAqC,IACrDE,EAAK,QAAoB,KAATF,KAAqC,GAC3D5mC,EAAOuC,KAAK2C,OAAO48B,aAAa+E,IAChC7mC,EAAOuC,KAAK2C,OAAO48B,aAAagF,SAGhC9mC,EAAOuC,KAAK2C,OAAO48B,aAAa,QAIlC,OAAO9hC,EAAOiR,KAAK,KAMpB,IAAM81B,EAAe;CAKrBzlC,EAAA0lC,YAAA,SAA4BvwB,GAC3B,OAAOswB,EAAa7jC,KAAKuT,IAM1B,IAAMwwB,EAAiB,0MAEvB3lC,EAAA4lC,cAAA,SAA8BzwB,GAC7B,OAAOwwB,EAAe/jC,KAAKuT,IAG5B,IAAM0wB,EAAiB,uBAiBvB,SAAgBC,EAAqB/E,GAwCpC,OADAA,GAAYA,IAEE,OAAUA,GAAY,OAC/BA,GAAY,OAAUA,GAAY,OAClCA,GAAY,OAAUA,GAAY,MAxDxC/gC,EAAA+lC,aAAA,SAA6B5wB,GAC5B,OAAO0wB,EAAejkC,KAAKuT,IAG5BnV,EAAAgmC,2BAAA,SAA2C7wB,GAC1C,IAAK,IAAIxW,EAAI,EAAGC,EAAMuW,EAAItW,OAAQF,EAAIC,EAAKD,IAC1C,GAAImnC,EAAqB3wB,EAAIjH,WAAWvP,IACvC,OAAO,EAGT,OAAO,GAGRqB,EAAA8lC,qBAAAA,EAmDA9lC,EAAAimC,iBAAA,SAAiChjB,GAChC,OACEA,GAAK,QAAWA,GAAK,QAAaA,GAAK,MAAQA,GAAK,OAAWA,GAAK,QAAUA,GAAK,QAChFA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QACpFA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QAQ1FjjB,EAAAkmC,KAAA,SAAqBC,EAAc7nB,GAClC,GAAI6nB,EAAKtnC,OAASyf,EACjB,OAAO6nB,EAKR,IAFA,IAAMC,EAAK,MACPznC,EAAI,EACDynC,EAAGxkC,KAAKukC,MACVA,EAAKtnC,OAASunC,EAAG3kB,UAAYnD,IAIjC3f,EAAIynC,EAAG3kB,UACP2kB,EAAG3kB,WAAa,EAGjB,OAAO0kB,EAAKx/B,UAAUhI,GAAGgD,QAAQ,MAAO;CAKzC,IAAM0kC,EAAK,kBACLC,EAAc,cACdC,EAAY,aA+BlB,SAAgBC,EAAkBrxB,GACjC,SAAUA,GAAOA,EAAItW,OAAS,GAAsB,QAAjBsW,EAAIjH,WAAW,IAyGnD,SAAgB8zB,EAA8ByE,EAA+BC,GAI5E,OAAc,IAAVD,EAEe,IAAVC,GAAqD,IAAVA,GAOtC,IAAVD,GACW,IAAVC,KAIS,IAAVD,GAAsD,IAAVA,GAAiD,IAAVA,IAGzE,IAAVC,GAAsD,IAAVA,GAAiD,IAAVA,IAQzE,IAAVD,GACW,IAAVC,GAAgD,IAAVA,GAAgD,KAAVA,GAAiD,KAAVA,MAI1G,KAAVD,GAAiD,IAAVA,GAC5B,IAAVC,GAAgD,KAAVA,MAI7B,KAAVD,GAAkD,KAAVA,GAC7B,KAAVC,KAOS,IAAVA,GAAqD,KAAVA,IAQjC,IAAVA,IAGU,IAAVD,KAMU,KAAVA,GAAkD,KAAVC,KAO9B,IAAVD,GAAiE,IAAVC,WA9M5D1mC,EAAA2mC,sBAAA,SAAsCxxB,GAOrC,OANIA,IAGHA,GADAA,GADAA,EAAMA,EAAIxT,QAAQ0kC,EAAI,KACZ1kC,QAAQ2kC,EAAa,KACrB3kC,QAAQ4kC,EAAW,KAGvBpxB,GAGKnV,EAAA4mC,cAAyC,WACrD,GAAmD,mBAAvChjC,OAAOlE,UAAkBiO,UAEpC,OAAO,SAAUwH,GAAe,OAAOA,GAIvC,IAAM0xB,EAAQ,mBACd,OAAO,SAAU1xB,GAChB,OAAQA,EAAYxH,UAAU,OAAOhM,QAAQklC,EAAO,KATD,GAiBzC7mC,EAAA8mC,mBAAqBljC,OAAO48B,aAAY,OAErDxgC,EAAAwmC,kBAAAA,EAIAxmC,EAAA+mC,aAAA,SAA6B5xB,GAC5B,OAAOqxB,EAAkBrxB,GAAOA,EAAItT,OAAO,GAAKsT,GAGjDnV,EAAAgnC,SAAA,SAAyB7xB,GACxB,OAAO8xB,KAAKC,mBAAmB/xB,KAGhCnV,EAAAmnC,OAAA,SAAuB5iB,EAAWmU,GAEjC,IADA,IAAIh6B,EAAS,GACJC,EAAI,EAAGA,EAAI+5B,EAAO/5B,IAC1BD,GAAU6lB,EAEX,OAAO7lB,GAORsB,EAAAonC,cAAA,SAA8B1kB,EAAgB2kB,GAC7C,IAAK3kB,IAAW2kB,EACf,OAAO,EAGR,GAAI3kB,EAAO7jB,OAASwoC,EAAMxoC,OACzB,OAAO;CAQR,IALA,IAAMyoC,EAAWD,EAAMxoC,OACjB0oC,EAAc7kB,EAAOuM,cAEvBrN,EAAQ,EACRlb,GAAe,EACZkb,EAAQ0lB,GAAU,CACxB,IAAM9mC,EAAU+mC,EAAY/mC,QAAQ6mC,EAAMzlB,GAAQlb,EAAc,GAChE,GAAIlG,EAAU,EACb,OAAO,EAGRkG,EAAclG,EAEdohB,IAGD,OAAO,GAGR5hB,EAAAwnC,2BAAA,SAA2C9kB,EAAgB+kB,GAC1D,YAD0D,IAAAA,IAAAA,GAAA,KACrD/kB,IAID+kB,IACH/kB,EAASA,EAAO/gB,QAAQ,OAAQ,KAG1B+gB,EAAOuM,gBAAkBvM,IAGjC1iB,EAAA0nC,qBAAA,SAAqCvyB,GACpC,OAAOA,EAAI4tB,OAAO,GAAG1zB,cAAgB8F,EAAIxJ,MAAM,IAGhD3L,EAAA2nC,UAAA,SAA0BxyB,EAAamJ,GACtC,QADsC,IAAAA,IAAAA,EAAA,GAC5B,IAANA,EACH,MAAO,GAGR,IAAI6c,GAAO,EACX,GACCA,EAAMhmB,EAAI3U,QAAQ,KAAM26B,EAAM,GAC9B7c,UACQA,EAAI,GAAK6c,GAAO,GAEzB,OAAOA,GAAO,EACbhmB,EAAItT,OAAO,EAAGs5B,GACdhmB,GAMFnV,EAAA4nC,iBAAA,SAAiCtpB,GAKhC,OAFAA,GAAQ,IAFY,GAKZ1a,OAAO48B,aAAa,GAAaliB,GAGlC1a,OAAO48B,aAAa,GAAaliB,EARpB,KAarBte,EAAA4hC,qBAAA,SAAqCoD,GAEpC,OAD0BzD,EAAkBC,cACnBI,qBAAqBoD,IAG/ChlC,EAAAgiC,8BAAAA,EAkGA,IAAAT,EAAA,WAYC,SAAAA;AACCxiC,KAAK8oC,MAyCCxK,KAAKC,MAAM;CAJnB,OA/CeiE,EAAAC,YAAd,WAIC,OAHKD,EAAkBuG,YACtBvG,EAAkBuG,UAAY,IAAIvG,GAE5BA,EAAkBuG,WASnBvG,EAAA7hC,UAAAkiC,qBAAP,SAA4BoD,GAE3B,GAAIA,EAAY,GACf,OAAa,KAATA,EACH,EAEY,KAATA,EACH,EAED,EAGD,GAAIA,EAAY,IACf,OAAA,EAMD,IAHA,IAAMv5B,EAAO1M,KAAK8oC,MACZE,EAAYt8B,EAAK5M,OAAS,EAC5BmpC,EAAY,EACTA,GAAaD,GACnB,GAAI/C,EAAYv5B,EAAK,EAAIu8B,GAExBA,GAAY,MACN,CAAA,KAAIhD,EAAYv5B,EAAK,EAAIu8B,EAAY,IAK3C,OAAOv8B,EAAK,EAAIu8B,EAAY,GAH5BA,EAAY,EAAIA,EAAY,EAO9B,OAAA,GA9CczG,EAAAuG,UAAsC,KAgDtDvG,EAlDA,mGChjCA,IAAM0G,EAAU,CACfC,OAAQ,SACRC,OAAQ,SACR9iC,UAAW,YACXkuB,OAAQ,SACR6U,SAAU,YAMX,SAAgBvlC,EAAQ8Z,GACvB,OAAI/Z,MAAMC,QACFD,MAAMC,QAAQ8Z,MAGlBA,UAAiBA,EAAY,SAAMsrB,EAAQC,QAAUvrB,EAAMvQ,cAAgBxJ,OAUhF,SAAgBylC,EAASlzB,GACxB,cAAW,IAAU8yB,EAAQE,QAAUhzB,aAAevR,OAmBvD,SAAgB0kC,EAAShmC,GAIxB,eAAcA,IAAQ2lC,EAAQ1U,QAClB,OAARjxB,GACCM,MAAMC,QAAQP,IACbA,aAAe8gC,QACf9gC,aAAeiB,MAyBtB,SAAgBglC,EAAYjmC,GAC3B,cAAc,IAAU2lC,EAAQ5iC,UAMjC,SAAgBmjC,EAAkBlmC,GACjC,OAAOimC,EAAYjmC,IAAgB,OAARA,EA5E5BtC,EAAA6C,QAAAA,EAeA7C,EAAAqoC,SAAAA,EAWAroC,EAAAyoC,cAAA,SAA8B3lC,GAC7B,OAAOD,EAAQC,IAAkBA,EAAO4lC,OAAM,SAAAxnB,GAAQ,OAAAmnB,EAASnnB,OAQhElhB,EAAAsoC,SAAAA,EAeAtoC,EAAA2oC,SAAA,SAAyBrmC;AACxB,cAAY,IAAU2lC,EAAQC,QAAU5lC,aAAewrB,UAAYwU,MAAMhgC,IAU1EtC,EAAA4oC,UAAA,SAA0BtmC,GACzB,OAAe,IAARA,IAAwB,IAARA,GAMxBtC,EAAAuoC,YAAAA,EAOAvoC,EAAAwoC,kBAAAA,EAKAxoC,EAAA6oC,WAAA,SAA2BpjB,EAAgBrlB,GAC1C,IAAKqlB,EACJ,MAAM,IAAI/hB,MAAMtD,EAAO,8BAA8BA,EAAI,IAAM,oBAOjEJ,EAAA8oC,gBAAA,SAAmC7mB,GAClC,GAAIumB,EAAkBvmB,GACrB,MAAM,IAAIve,MAAM,mDAGjB,OAAOue,GASRjiB,EAAA+oC,iBAAA,eAAiC,IAAAj8B,EAAA,GAAA/F,EAAA,EAAAA,EAAA+H,UAAAjQ,OAAAkI,IAAA+F,EAAA/F,GAAA+H,UAAA/H,GAGhC,IAFA,IAAMrI,EAAS,GAENC,EAAI,EAAGA,EAAImO,EAAKjO,OAAQF,IAAK,CACrC,IAAMsjB,EAAMnV,EAAKnO,GAEjB,GAAI6pC,EAAkBvmB,GACrB,MAAM,IAAIve,MAAM,uCAAuC/E,EAAC,yBAGzDD,EAAOuC,KAAKghB,GAGb,OAAOvjB,GAGR,IAAM+D,EAAiBjD,OAAOE,UAAU+C,eAsBxC,SAAgBumC,EAAW1mC,GAC1B,cAAcA,IAAQ2lC,EAAQG,SAmB/B,SAAgBa,EAAmBhnB,EAAUinB,GAE5C,GAAIb,EAASa,IACZ,UAAWjnB,IAAQinB,EAClB,MAAM,IAAIxlC,MAAM,8CAA8CwlC,QAEzD,GAAIF,EAAWE,GAAa,CAClC,IACC,GAAIjnB,aAAeinB,EAClB,OAEA,MAAAliC,IAGF,IAAKwhC,EAAkBvmB,IAAQA,EAAI7V,cAAgB88B,EAClD,OAED,GAA0B,IAAtBA,EAAWrqC,SAAoD,IAApCqqC,EAAWl6B,UAAK3J,EAAW4c,GACzD;CAED,MAAM,IAAIve,MAAM,8IAIlB,SAAgBylC,EAAoB7mC,GAGnC,IAFA,IAAIoyB,EAAgB,GAChB0U,EAAQ5pC,OAAO6pC,eAAe/mC,GAC3B9C,OAAOE,YAAc0pC,GAC3B1U,EAAMA,EAAIjvB,OAAOjG,OAAO8pC,oBAAoBF,IAC5CA,EAAQ5pC,OAAO6pC,eAAeD,GAE/B,OAAO1U,EApER10B,EAAAupC,cAAA,SAA8BjnC,GAC7B,IAAKgmC,EAAShmC,GACb,OAAO,EAGR,IAAK,IAAIE,KAAOF,EACf,GAAIG,EAAeuM,KAAK1M,EAAKE,GAC5B,OAAO,EAIT,OAAO,GAMRxC,EAAAgpC,WAAAA,EAOAhpC,EAAAwpC,aAAA,eAA6B,IAAAC,EAAA,GAAA1iC,EAAA,EAAAA,EAAA+H,UAAAjQ,OAAAkI,IAAA0iC,EAAA1iC,GAAA+H,UAAA/H,GAC5B,OAAO0iC,EAAQ5qC,OAAS,GAAK4qC,EAAQf,MAAMM,IAK5ChpC,EAAA0pC,oBAAA,SAAoC58B,EAAa68B,GAEhD,IADA,IAAM/qC,EAAM4H,KAAK2Z,IAAIrT,EAAKjO,OAAQ8qC,EAAY9qC,QACrCF,EAAI,EAAGA,EAAIC,EAAKD,IACxBsqC,EAAmBn8B,EAAKnO,GAAIgrC,EAAYhrC,KAI1CqB,EAAAipC,mBAAAA,EAwBAjpC,EAAAmpC,oBAAAA,EAUAnpC,EAAA4pC,kBAAA,SAAkCtnC,GAEjC,IADA,IAAMunC,EAAoB,GACP9iC,EAAA,EAAAC,EAAAmiC,EAAoB7mC,GAApByE,EAAAC,EAAAnI,OAAAkI,IAA0B,CAAxC,IAAM+iC,EAAI9iC,EAAAD,GACoB,mBAAtBzE,EAAYwnC,IACvBD,EAAQ5oC,KAAK6oC,GAGf,OAAOD,GAGR7pC,EAAA+pC,kBAAA,SAAoDC,EAAuBC,GAS1E,IARA,IAAMC,EAAoB,SAACC,GAC1B,OAAO,WACN,IAAMr9B,EAAOlK,MAAMlD,UAAUiM,MAAMqD,KAAKF,UAAW,GACnD,OAAOm7B,EAAOE,EAAQr9B,KAIpBpO,EAAS,GACYqI,EAAA,EAAAqjC,EAAAJ,EAAAjjC,EAAAqjC,EAAAvrC,OAAAkI,IAAa,CAAjC,IAAMsjC,EAAUD,EAAArjC,GACdrI,EAAQ2rC,GAAcH,EAAkBG,GAE/C,OAAO3rC;AAMRsB,EAAAsqC,oBAAA,SAAuCrnB,GACtC,OAAa,OAANA,OAAa5d,EAAY4d,GAMjCjjB,EAAAuqC,oBAAA,SAAuCtnB,GACtC,YAAoB,IAANA,EAAoB,KAAOA,kDCrM1C,SAAgBunB,EAASC,GACxB,OAAIA,EAAI,EACA,EAEJA,EAAC,WACJ,WAEU,EAAJA,mDAjBRzqC,EAAA0qC,QAAA,SAAwBD,GACvB,OAAIA,EAAI,EACA,EAEJA,EAAC,IACJ,IAEU,EAAJA,GAGRzqC,EAAAwqC,SAAAA,EAUAxqC,EAAA2qC,cAAA,SAA8B7rB,GAG7B,IAFA,IAAMlgB,EAAMkgB,EAAIjgB,OACV8S,EAAI,IAAIi5B,YAAYhsC,GACjBD,EAAI,EAAGA,EAAIC,EAAKD,IACxBgT,EAAEhT,GAAK6rC,EAAS1rB,EAAIngB,IAErB,OAAOgT,8GC1DR,IAAMk5B,EAAiB,iBACjBC,EAAoB,MACpBC,EAAoB,QAiE1B,IAAM3d,EAAS,GACT4d,EAAS,IACTC,EAAU,+DAgBhBC,EAAA,WA2DC,SAAAA,EAAsBC,EAAsCC,EAAoBhmC,EAAeiiC,EAAgBgE,EAAmBC,QAAA,IAAAA,IAAAA,GAAA,GAErG,iBAAjBH,GACVpsC,KAAKwsC,OAASJ,EAAaI,QAAUne,EACrCruB,KAAKqsC,UAAYD,EAAaC,WAAahe,EAC3CruB,KAAKqG,KAAO+lC,EAAa/lC,MAAQgoB,EACjCruB,KAAKsoC,MAAQ8D,EAAa9D,OAASja,EACnCruB,KAAKssC,SAAWF,EAAaE,UAAYje,IAKzCruB,KAAKwsC,OArHR,SAAoBA,EAAgBD,GACnC,OAAKC,GAAWD,EAGTC,EAFC,OAmHQC,CAAWL,EAAcG,GACvCvsC,KAAKqsC,UAAYA,GAAahe,EAC9BruB,KAAKqG,KA/GR,SAA8BmmC,EAAgBnmC,GAM7C,OAAQmmC,GACP,IAAK,QACL,IAAK,OACL,IAAK;AACCnmC,EAEMA,EAAK,KAAO4lC,IACtB5lC,EAAO4lC,EAAS5lC,GAFhBA,EAAO4lC,EAMV,OAAO5lC,EA8FOqmC,CAAqB1sC,KAAKwsC,OAAQnmC,GAAQgoB,GACtDruB,KAAKsoC,MAAQA,GAASja,EACtBruB,KAAKssC,SAAWA,GAAYje,EA5J/B,SAAsB3e,EAAU68B,GAG/B,IAAK78B,EAAI88B,QAAUD,EAClB,MAAM,IAAI5nC,MAAM,2DAA2D+K,EAAI28B,UAAS,aAAa38B,EAAIrJ,KAAI,cAAcqJ,EAAI44B,MAAK,iBAAiB54B,EAAI48B,SAAQ,MAKlK,GAAI58B,EAAI88B,SAAWV,EAAejpC,KAAK6M,EAAI88B,QAC1C,MAAM,IAAI7nC,MAAM,mDAQjB,GAAI+K,EAAIrJ,KACP,GAAIqJ,EAAI28B,WACP,IAAKN,EAAkBlpC,KAAK6M,EAAIrJ,MAC/B,MAAM,IAAI1B,MAAM,iJAGjB,GAAIqnC,EAAkBnpC,KAAK6M,EAAIrJ,MAC9B,MAAM,IAAI1B,MAAM,6HAqIjBgoC,CAAa3sC,KAAMusC,IA0MtB,OArRQJ,EAAAS,MAAP,SAAarZ;AACZ,OAAIA,aAAiB4Y,KAGhB5Y,IAGoC,iBAArBA,EAAO8Y,WACU,iBAApB9Y,EAAO+Y,UACS,iBAAhB/Y,EAAOltB,MACU,iBAAjBktB,EAAO+U,OACW,iBAAlB/U,EAAOiZ,QACW,mBAAlBjZ,EAAOsZ,QACS,mBAAhBtZ,EAAOuZ,MACa,mBAApBvZ,EAAOrC,WA2FzBzwB,OAAAC,eAAIyrC,EAAAxrC,UAAA,SAAM,KAAV,WAIC,OAAOosC,EAAY/sC,uCAKpBmsC,EAAAxrC,UAAAmsC,KAAA,SAAKhgB,GAEJ,IAAKA,EACJ,OAAO9sB,KAGF,IAAAwsC,EAAA1f,EAAA0f,OAAQH,EAAAvf,EAAAuf,UAAWhmC,EAAAymB,EAAAzmB,KAAMiiC,EAAAxb,EAAAwb,MAAOgE,EAAAxf,EAAAwf,SA2BtC,YA1BehmC,IAAXkmC,EACHA,EAASxsC,KAAKwsC,OACO,OAAXA,IACVA,EAASne,QAEQ/nB,IAAd+lC,EACHA,EAAYrsC,KAAKqsC,UACO,OAAdA,IACVA,EAAYhe,QAEA/nB,IAATD,EACHA,EAAOrG,KAAKqG,KACO,OAATA,IACVA,EAAOgoB,QAEM/nB,IAAVgiC,EACHA,EAAQtoC,KAAKsoC,MACO,OAAVA,IACVA,EAAQja,QAEQ/nB,IAAbgmC,EACHA,EAAWtsC,KAAKssC,SACO,OAAbA,IACVA,EAAWje,GAGRme,IAAWxsC,KAAKwsC,QAChBH,IAAcrsC,KAAKqsC,WACnBhmC,IAASrG,KAAKqG,MACdiiC,IAAUtoC,KAAKsoC,OACfgE,IAAatsC,KAAKssC,SAEdtsC,KAGD,IAAIgtC,EAAKR,EAAQH,EAAWhmC,EAAMiiC,EAAOgE,IAW1CH,EAAA5N,MAAP,SAAax6B,EAAewoC,QAAA,IAAAA,IAAAA,GAAA,GAC3B,IAAMl8B,EAAQ67B,EAAQ1H,KAAKzgC,GAC3B,OAAKsM,EAGE,IAAI28B,EACV38B,EAAM,IAAMge,EACZ4e,EAAc58B,EAAM,IAAMge,GAC1B4e,EAAc58B,EAAM,IAAMge,GAC1B4e,EAAc58B,EAAM,IAAMge,GAC1B4e,EAAc58B,EAAM,IAAMge,GAC1Bke,GARO,IAAIS,EAAK3e,EAAQA,EAAQA,EAAQA,EAAQA,IAiC3C8d,EAAAe,KAAP,SAAY7mC,GAEX,IAAIgmC,EAAYhe,EAWhB,GANI8e,EAAA1qC,YACH4D,EAAOA,EAAKzD,QAAQ,MAAOqpC,IAKxB5lC,EAAK,KAAO4lC,GAAU5lC,EAAK,KAAO4lC,EAAQ;AAC7C,IAAM7P,EAAM/1B,EAAK5E,QAAQwqC,EAAQ,IACpB,IAAT7P,GACHiQ,EAAYhmC,EAAKuB,UAAU,GAC3BvB,EAAO4lC,IAEPI,EAAYhmC,EAAKuB,UAAU,EAAGw0B,GAC9B/1B,EAAOA,EAAKuB,UAAUw0B,IAAQ6P,GAIhC,OAAO,IAAIe,EAAK,OAAQX,EAAWhmC,EAAMgoB,EAAQA,IAG3C8d,EAAA9jC,KAAP,SAAY+kC,GACX,OAAO,IAAIJ,EACVI,EAAWZ,OACXY,EAAWf,UACXe,EAAW/mC,KACX+mC,EAAW9E,MACX8E,EAAWd,WAiBbH,EAAAxrC,UAAAuwB,SAAA,SAASmc,GACR,YADQ,IAAAA,IAAAA,GAAA,GACDC,EAAattC,KAAMqtC,IAG3BlB,EAAAxrC,UAAA4sC,OAAA,WACC,OAAOvtC,MAODmsC,EAAAqB,OAAP,SAAc9gC,GACb,GAAKA,EAEE,CAAA,GAAIA,aAAgBy/B,EAC1B,OAAOz/B,EAEP,IAAM/M,EAAS,IAAIqtC,EAAKtgC,GAGxB,OAFA/M,EAAO8tC,WAAwB/gC,EAAMghC,SACrC/tC,EAAOguC,QAAqBjhC,EAAMkhC,OAASC,EAA4BnhC,EAAMmgC,OAAS,KAC/EltC,EAPP,OAAO+M,GAUVy/B,EAvRA,GAAalrC,EAAAkrC,IAAAA,EAwSb,IAAM0B,EAAiBV,EAAA1qC,UAAY,OAAI6D,EAGvC0mC,EAAA,SAAAvvB,GAAA,SAAAuvB,IAAA,IAAA7kC,EAAA,OAAAsV,GAAAA,EAAAxP,MAAAjO,KAAA+P,YAAA/P,YAECmI,EAAAslC,WAA4B,KAC5BtlC,EAAAwlC,QAAyB,OAmD1B,OAtDmBjwB,EAAAsvB,EAAAvvB,GAKlBhd,OAAAC,eAAIssC,EAAArsC,UAAA,SAAM,KAAV,WAIC,OAHKX,KAAK2tC,UACT3tC,KAAK2tC,QAAUZ,EAAY/sC,OAErBA,KAAK2tC,yCAGbX,EAAArsC,UAAAuwB,SAAA,SAASmc,GACR,YADQ,IAAAA,IAAAA,GAAA,GACHA,EAOGC,EAAattC,MAAM,IANrBA,KAAKytC,aACTztC,KAAKytC,WAAaH,EAAattC,MAAM,IAE/BA,KAAKytC,aAOdT,EAAArsC,UAAA4sC,OAAA,WACC,IAAM5X,EAAgB,CACrBmY,KAAM,GA0BP,OAvBI9tC,KAAK2tC,UACRhY,EAAIkX,OAAS7sC,KAAK2tC,QAClBhY,EAAIiY,KAAOC;AAER7tC,KAAKytC,aACR9X,EAAI+X,SAAW1tC,KAAKytC,YAGjBztC,KAAKqG,OACRsvB,EAAItvB,KAAOrG,KAAKqG,MAEbrG,KAAKwsC,SACR7W,EAAI6W,OAASxsC,KAAKwsC,QAEfxsC,KAAKqsC,YACR1W,EAAI0W,UAAYrsC,KAAKqsC,WAElBrsC,KAAKsoC,QACR3S,EAAI2S,MAAQtoC,KAAKsoC,OAEdtoC,KAAKssC,WACR3W,EAAI2W,SAAWtsC,KAAKssC,UAEd3W,GAETqX,EAtDA,CAAmBb,GAyDb4B,IAAW9lC,EAAA,IAChB,IAAkB,MAClBA,EAAA,IAAkB,MAClBA,EAAA,IAAyB,MACzBA,EAAA,IAAiB,MACjBA,EAAA,IAA8B,MAC9BA,EAAA,IAA+B,MAC/BA,EAAA,IAAmB,MAEnBA,EAAA,IAA4B,MAC5BA,EAAA,IAAuB,MACvBA,EAAA,IAAsB,MACtBA,EAAA,IAAwB,MACxBA,EAAA,IAAsB,MACtBA,EAAA,IAAuB,MACvBA,EAAA,IAAqB,MACrBA,EAAA,IAAiB,MACjBA,EAAA,IAAkB,MAClBA,EAAA,IAAsB,MACtBA,EAAA,IAAmB,MAEnBA,EAAA,IAAkB,SAGnB,SAAS+lC,EAAuBC,EAAsBC,GAIrD,IAHA,IAAIvY,OAA0BrvB,EAC1B6nC,GAAmB,EAEdC,EAAM,EAAGA,EAAMH,EAAanuC,OAAQsuC,IAAO,CACnD,IAAMnN,EAAOgN,EAAa9+B,WAAWi/B,GAGrC,GACEnN,GAAI,IAAkBA,GAAI,KACvBA,GAAI,IAAkBA,GAAI,IAC1BA,GAAI,IAAuBA,GAAI,IAC5B,KAAJA,GACI,KAAJA,GACI,KAAJA,GACI,MAAJA,GACCiN,GAAkB,KAAJjN,GAGO,IAArBkN,IACHxY,GAAOwS,mBAAmB8F,EAAarmC,UAAUumC,EAAiBC,IAClED,GAAmB,QAGR7nC,IAARqvB,IACHA,GAAOsY,EAAajK,OAAOoK,QAGtB,MAEM9nC,IAARqvB,IACHA,EAAMsY,EAAanrC,OAAO,EAAGsrC,IAI9B,IAAMC,EAAUN,EAAY9M,QACZ36B,IAAZ+nC,IAGsB,IAArBF,IACHxY,GAAOwS,mBAAmB8F,EAAarmC,UAAUumC,EAAiBC,IAClED,GAAmB,GAIpBxY,GAAO0Y,IAEwB,IAArBF,IAEVA,EAAkBC,IASrB,OAJyB,IAArBD,IACHxY,GAAOwS,mBAAmB8F,EAAarmC,UAAUumC,UAGnC7nC,IAARqvB,EAAoBA,EAAMsY,EAGlC,SAASK,EAA0BjoC,GAElC,IADA,IAAIsvB,OAA0BrvB,EACrB8nC,EAAM,EAAGA,EAAM/nC,EAAKvG,OAAQsuC,IAAO,CAC3C,IAAMnN,EAAO56B,EAAK8I,WAAWi/B;CACrB,KAAJnN,GAA8B,KAAJA,QACjB36B,IAARqvB,IACHA,EAAMtvB,EAAKvD,OAAO,EAAGsrC,IAEtBzY,GAAOoY,EAAY9M,SAEP36B,IAARqvB,IACHA,GAAOtvB,EAAK+nC,IAIf,YAAe9nC,IAARqvB,EAAoBA,EAAMtvB,EAMlC,SAAS0mC,EAAYrqC,GAEpB,IAAIqB,EAkBJ,OAfCA,EAFGrB,EAAI2pC,WAAa3pC,EAAI2D,KAAKvG,OAAS,GAAoB,SAAf4C,EAAI8pC,OAEvC,KAAK9pC,EAAI2pC,UAAY3pC,EAAI2D,KAEX,KAAtB3D,EAAI2D,KAAK8I,WAAW,KAChBzM,EAAI2D,KAAK8I,WAAW,IAAE,IAAkBzM,EAAI2D,KAAK8I,WAAW,IAAE,IAAkBzM,EAAI2D,KAAK8I,WAAW,IAAE,IAAkBzM,EAAI2D,KAAK8I,WAAW,IAAE,MACzH,KAAtBzM,EAAI2D,KAAK8I,WAAW,GAGfzM,EAAI2D,KAAK,GAAG6pB,cAAgBxtB,EAAI2D,KAAKvD,OAAO,GAG5CJ,EAAI2D,KAET8mC,EAAA1qC,YACHsB,EAAQA,EAAMnB,QAAQ,MAAO,OAEvBmB,EAMR,SAASupC,EAAa5qC,EAAU2qC,GAE/B,IAAMkB,EAAWlB,EAEdiB,EADAN,EAGCrY,EAAM,GACJ6W,EAAA9pC,EAAA8pC,OAAQH,EAAA3pC,EAAA2pC,UAAWhmC,EAAA3D,EAAA2D,KAAMiiC,EAAA5lC,EAAA4lC,MAAOgE,EAAA5pC,EAAA4pC,SAStC,GARIE,IACH7W,GAAO6W,EACP7W,GAAO,MAEJ0W,GAAwB,SAAXG,KAChB7W,GAAOsW,EACPtW,GAAOsW,GAEJI,EAAW,CACd,IAAIjQ,EAAMiQ,EAAU5qC,QAAQ,KAC5B,IAAa,IAAT26B,EAAY,CAEf,IAAMoS,EAAWnC,EAAUvpC,OAAO,EAAGs5B,GACrCiQ,EAAYA,EAAUvpC,OAAOs5B,EAAM,IAEtB,KADbA,EAAMoS,EAAS/sC,QAAQ,MAEtBk0B,GAAO4Y,EAAQC,GAAU,IAGzB7Y,GAAO4Y,EAAQC,EAAS1rC,OAAO,EAAGs5B,IAAM,GACxCzG,GAAO,IACPA,GAAO4Y,EAAQC,EAAS1rC,OAAOs5B,EAAM,IAAI,IAE1CzG,GAAO,KAIK,KADbyG,GADAiQ,EAAYA,EAAUnc,eACNzuB,QAAQ,MAEvBk0B,GAAO4Y,EAAQlC,GAAW,IAG1B1W,GAAO4Y,EAAQlC,EAAUvpC,OAAO,EAAGs5B,IAAM,GACzCzG,GAAO0W,EAAUvpC,OAAOs5B,IAG1B,GAAI/1B,EAAM;AAET,GAAIA,EAAKvG,QAAU,GAAuB,KAAlBuG,EAAK8I,WAAW,IAA2C,KAAlB9I,EAAK8I,WAAW,IAC1E8xB,EAAO56B,EAAK8I,WAAW,KACrB,IAAkB8xB,GAAI,KAC7B56B,EAAO,IAAIxB,OAAO48B,aAAaR,EAAO,IAAG,IAAI56B,EAAKvD,OAAO,SAEpD,GAAIuD,EAAKvG,QAAU,GAAuB,KAAlBuG,EAAK8I,WAAW,GAAuB,CACrE,IAAM8xB,GAAAA,EAAO56B,EAAK8I,WAAW,KACrB,IAAkB8xB,GAAI,KAC7B56B,EAAUxB,OAAO48B,aAAaR,EAAO,IAAG,IAAI56B,EAAKvD,OAAO,IAI1D6yB,GAAO4Y,EAAQloC,GAAM,GAUtB,OARIiiC,IACH3S,GAAO,IACPA,GAAO4Y,EAAQjG,GAAO,IAEnBgE,IACH3W,GAAO,IACPA,GAAQ0X,EAAyDf,EAA1C0B,EAAuB1B,GAAU,IAElD3W,EAiBR,IAAM8Y,EAAiB,8BAEvB,SAASxB,EAAc72B,GACtB,OAAKA,EAAI/F,MAAMo+B,GAGRr4B,EAAIxT,QAAQ6rC,GAAgB,SAACp+B,GAAU,OAlB/C,SAASq+B,EAA2Bt4B,GACnC,IACC,OAAOu4B,mBAAmBv4B,GACzB,MAAAnO,GACD,OAAImO,EAAItW,OAAS,EACTsW,EAAItT,OAAO,EAAG,GAAK4rC,EAA2Bt4B,EAAItT,OAAO,IAEzDsT,GAWqCs4B,CAA2Br+B,MAFjE+F,oHCnpBT,IAAMw4B,EAAa,cAefC,GAAyB,EAC7B5tC,EAAA6tC,wBAAA,SAAwCpqC,GAClCyoC,EAAAjO,QAIA2P,IACJA,GAAyB,EACzBlpC,QAAQyM,KAAK,oLAEdzM,QAAQyM,KAAK1N,EAAIE,WA+BlB,IAAAmqC,EAAA,WAOC,SAAAA,EAAYC,GACXhvC,KAAKivC,WAAa;AAClBjvC,KAAKkvC,SAAWF,EAChBhvC,KAAKmvC,aAAe,EACpBnvC,KAAKovC,gBAAkB3uC,OAAOsH,OAAO,MAqGvC,OAlGQgnC,EAAApuC,UAAA0uC,YAAP,SAAmBC,GAClBtvC,KAAKivC,UAAYK,GAGXP,EAAApuC,UAAA4uC,YAAP,SAAmBnE,EAAgBr9B,GAAnC,IAAA5F,EAAAnI,KACKwvC,EAAM3qC,SAAS7E,KAAKmvC,cACxB,OAAO,IAAInuB,SAAa,SAAC1T,EAAS2T,GACjC9Y,EAAKinC,gBAAgBI,GAAO,CAC3BliC,QAASA,EACT2T,OAAQA,GAET9Y,EAAKsnC,MAAM,CACVC,SAAUvnC,EAAK8mC,UACfO,IAAKA,EACLpE,OAAQA,EACRr9B,KAAMA,QAKFghC,EAAApuC,UAAAgvC,cAAP,SAAqB/qC,GACfA,GAAYA,EAAQ8qC,YAGD,IAApB1vC,KAAKivC,WAAoBrqC,EAAQ8qC,WAAa1vC,KAAKivC,WAGvDjvC,KAAK4vC,eAAehrC,KAGbmqC,EAAApuC,UAAAivC,eAAR,SAAuBC,GAAvB,IAAA1nC,EAAAnI,KACC,GAAI6vC,EAAIC,IAAR,CACC,IAAIC,EAA8BF,EAClC,IAAK7vC,KAAKovC,gBAAgBW,EAAaD,KAEtC,YADAnqC,QAAQyM,KAAK,4BAId,IAAI49B,EAAQhwC,KAAKovC,gBAAgBW,EAAaD,KAG9C,UAFO9vC,KAAKovC,gBAAgBW,EAAaD,KAErCC,EAAarrC,IAAK,CACrB,IAAIA,EAAMqrC,EAAarrC,IAQvB,OAPIqrC,EAAarrC,IAAIoY,YACpBpY,EAAM,IAAIC,OACNoY,KAAOgzB,EAAarrC,IAAIqY,KAC5BrY,EAAIE,QAAUmrC,EAAarrC,IAAIE,QAC/BF,EAAII,MAAQirC,EAAarrC,IAAII,YAE9BkrC,EAAM/uB,OAAOvc,GAIdsrC,EAAM1iC,QAAQyiC,EAAapa,SAtB5B,CA0BA,IAAIsa,EAAkCJ,EAClCL,EAAMS,EAAeT,IACZxvC,KAAKkvC,SAASS,cAAcM,EAAe7E,OAAQ6E,EAAeliC,MACxEyT,MAAK,SAAC5O,GACZzK,EAAKsnC,MAAM,CACVC,SAAUvnC,EAAK8mC,UACfa,IAAKN,EACL7Z,IAAK/iB,EACLlO,SAAK4B,OAEJ,SAACyE;AACCA,EAAEnJ,kBAAkB+C,QAEvBoG,EAAEnJ,OAAS2f,EAAA1E,+BAA+B9R,EAAEnJ,SAE7CuG,EAAKsnC,MAAM,CACVC,SAAUvnC,EAAK8mC,UACfa,IAAKN,EACL7Z,SAAKrvB,EACL5B,IAAK6c,EAAA1E,+BAA+B9R,UAK/BgkC,EAAApuC,UAAA8uC,MAAR,SAAcI,GACb,IAAIK,EAA0B,GAC9B,GAAIL,EAAIL,IAEP,IADA,IAAMj5B,EAAqBs5B,EAClBjwC,EAAI,EAAGA,EAAI2W,EAAExI,KAAKjO,OAAQF,IAC9B2W,EAAExI,KAAKnO,aAAcuwC,aACxBD,EAAShuC,KAAKqU,EAAExI,KAAKnO,SAIjB2W,EAAmBs5B,GACnBla,eAAewa,aACpBD,EAAShuC,KAAKqU,EAAEof,KAGlB31B,KAAKkvC,SAASK,YAAYM,EAAKK,IAEjCnB,EAhHA,GA0HAqB,EAAA,SAAA3yB,GAOC,SAAA2yB,EAAYC,EAA+BxqC,EAAkByqC,GAA7D,IAAAnoC,EACCsV,EAAAxN,KAAAjQ,OAAOA,KAEHuwC,EAA+C,KAEnDpoC,EAAKqoC,QAAUroC,EAAK6rB,UAAUqc,EAActoC,OAC3C,sCACA,SAAC8nC,GACA1nC,EAAKsoC,UAAUd,cAAcE,MAE9B,SAACnrC,GAGI6rC,GACHA,EAAgB7rC,OAKnByD,EAAKsoC,UAAY,IAAI1B,EAAqB,CACzCQ,YAAa,SAACM,EAAUK,GACvB/nC,EAAKqoC,QAAQ3Q,YAAYgQ,EAAKK,IAE/BP,cAAe,SAACvE,EAAgBr9B,GAC/B,GAAqC,mBAAzBuiC,EAAalF,GACxB,OAAOpqB,QAAQC,OAAO,IAAItc,MAAM,kBAAoBymC,EAAS,0BAG9D,IACC,OAAOpqB,QAAQ1T,QAASgjC,EAAalF,GAAQn9B,MAAMqiC,EAAMviC,IACxD,MAAOhD,GACR,OAAOiW,QAAQC,OAAOlW,OAIzB5C,EAAKsoC,UAAUpB,YAAYlnC,EAAKqoC,QAAQE,SAGxC,IAAIC,EAA2B;MACI,IAAlBjd,KAAMvmB,SAAoE,mBAA5BumB,KAAMvmB,QAAQ/B,UAE5EulC,EAA4Bjd,KAAMvmB,QAAQ/B,iBACC,IAApBsoB,KAAMkd,YAE7BD,EAA4Bjd,KAAMkd,UAAUprB,EAAEqrB,SAAS3Y,EAAE7yB,QAG1D,IAAMyrC,EAAcC,EAAMlG,kBAAkByF,GAG5CnoC,EAAK6oC,gBAAkB7oC,EAAKsoC,UAAUlB,YAAYX,EAAY,CAC7DzmC,EAAKqoC,QAAQE,QACbpS,KAAKC,MAAMD,KAAK2S,UAAUN,IAC1B9qC,EACAirC,IAID,IAAMI,EAAqB,SAAC9F,EAAgBr9B,GAC3C,OAAO5F,EAAKgpC,SAAS/F,EAAQr9B,WAG9B5F,EAAKipC,WAAa,IAAIpwB,SAAW,SAAC1T,EAAS2T,GAC1CsvB,EAAkBtvB,EAClB9Y,EAAK6oC,gBAAgBxvB,MAAK,SAAC6vB,GAC1B/jC,EAAQyjC,EAAM/F,kBAAqBqG,EAAkBH,OACnD,SAACnmC,GACHkW,EAAOlW,GACP5C,EAAKmpC,SAAS,yBAA2BzrC,EAAUkF,WAqBvD,OAhG4E2S,EAAA0yB,EAAA3yB,GAgFpE2yB,EAAAzvC,UAAA4wC,eAAP,WACC,OAAOvxC,KAAKoxC,YAGLhB,EAAAzvC,UAAAwwC,SAAR,SAAiB/F,EAAgBr9B,GAAjC,IAAA5F,EAAAnI,KACC,OAAO,IAAIghB,SAAa,SAAC1T,EAAS2T,GACjC9Y,EAAK6oC,gBAAgBxvB,MAAK,WACzBrZ,EAAKsoC,UAAUlB,YAAYnE,EAAQr9B,GAAMyT,KAAKlU,EAAS2T,KACrDA,OAIGmvB,EAAAzvC,UAAA2wC,SAAR,SAAiB1sC,EAAiBgB,GACjCD,QAAQC,MAAMhB,GACde,QAAQ6rC,KAAK5rC,IAEfwqC,EAhGA,CAA4ExY,EAAA7E,YAA/D9xB,EAAAmvC,mBAAAA,EA8Gb,IAAAqB,EAAA,WAMC,SAAAA,EAAY5R,EAA4D6R,GAAxE,IAAAvpC,EAAAnI,KACCA,KAAK2xC,uBAAyBD,EAC9B1xC,KAAK4xC,gBAAkB,KACvB5xC,KAAKywC,UAAY,IAAI1B,EAAqB,CACzCQ,YAAa,SAACM,EAAUK,GACvBrQ,EAAYgQ,EAAKK;AAElBP,cAAe,SAACvE,EAAgBr9B,GAA8B,OAAA5F,EAAKynC,eAAexE,EAAQr9B,MAqE7F,OAjEQ0jC,EAAA9wC,UAAAkxC,UAAP,SAAiBhC,GAChB7vC,KAAKywC,UAAUd,cAAcE,IAGtB4B,EAAA9wC,UAAAivC,eAAR,SAAuBxE,EAAgBr9B,GACtC,GAAIq9B,IAAWwD,EACd,OAAO5uC,KAAK8xC,WAAmB/jC,EAAK,GAASA,EAAK,GAAYA,EAAK,GAAcA,EAAK,IAGvF,IAAK/N,KAAK4xC,iBAA2D,mBAAjC5xC,KAAK4xC,gBAAgBxG,GACxD,OAAOpqB,QAAQC,OAAO,IAAItc,MAAM,qCAAuCymC,IAGxE,IACC,OAAOpqB,QAAQ1T,QAAQtN,KAAK4xC,gBAAgBxG,GAAQn9B,MAAMjO,KAAK4xC,gBAAiB7jC,IAC/E,MAAOhD,GACR,OAAOiW,QAAQC,OAAOlW,KAIhB0mC,EAAA9wC,UAAAmxC,WAAR,SAAmBxC,EAAkByC,EAAmBlsC,EAAkBirC,GAA1E,IAAA3oC,EAAAnI,KACCA,KAAKywC,UAAUpB,YAAYC,GAE3B,IAIM0C,EAAYjB,EAAM/F,kBAAqB8F,GAJlB,SAAC1F,EAAgBr9B,GAC3C,OAAO5F,EAAKsoC,UAAUlB,YAAYnE,EAAQr9B,MAK3C,OAAI/N,KAAK2xC,wBAER3xC,KAAK4xC,gBAAkB5xC,KAAK2xC,uBAAuBK,GAC5ChxB,QAAQ1T,QAAQyjC,EAAMlG,kBAAkB7qC,KAAK4xC,oBAGjDG,SAEiC,IAAzBA,EAAa7sC,gBAChB6sC,EAAsB,aAEI,IAAvBA,EAAa3sC,YACc,IAA1B2sC,EAAa3sC,MAAM6sC,WACtBF,EAAa3sC,MAAU,GAKhC2sC,EAAazsC,YAAa,EACpBouB,KAAMvmB,QAAQ9H,OAAO0sC,IAGrB,IAAI/wB,SAAkB,SAAC1T,EAAS2T,GAEhCyS,KAAMvmB,QAAQ,CAACtH,IAAW,SAAC7E;AAChCmH,EAAKypC,gBAAkB5wC,EAAO+G,OAAOiqC,GAEhC7pC,EAAKypC,gBAKVtkC,EAAQyjC,EAAMlG,kBAAkB1iC,EAAKypC,kBAJpC3wB,EAAO,IAAItc,MAAM,yBAKhBsc,QAGNwwB,EAlFA,GAAaxwC,EAAAwwC,mBAAAA,EAuFbxwC,EAAA8G,OAAA,SAAuB83B,GACtB,OAAO,IAAI4R,EAAmB5R,EAAa,4GCxX5C,IAAAqS,EAAA,WAaC,SAAAA,EAAYC,GACX,IAAIC,EAAeC,EAAA1G,QAAQwG,GAE3BnyC,KAAKmyC,cAAgBC,EACrBpyC,KAAKsyC,UAAYJ,EAAoBK,gBAAgBH,GACrDpyC,KAAKwyC,KAAO,IAAIr+B,IA4BlB,OAzBgB+9B,EAAAK,gBAAf,SAA+BH,GAE9B,IADA,IAAIK,EAAuB,IAAIvM,WAAW,KACjCtmC,EAAI,EAAGA,EAAI,IAAKA,IACxB6yC,EAAS7yC,GAAKwyC,EAEf,OAAOK,GAGDP,EAAAvxC,UAAA4T,IAAP,SAAWytB,EAAkBrc,GAC5B,IAAI5hB,EAAQsuC,EAAA1G,QAAQhmB,GAEhBqc,GAAY,GAAKA,EAAW,IAC/BhiC,KAAKsyC,UAAUtQ,GAAYj+B,EAE3B/D,KAAKwyC,KAAKj+B,IAAIytB,EAAUj+B,IAInBmuC,EAAAvxC,UAAAC,IAAP,SAAWohC,GACV,OAAIA,GAAY,GAAKA,EAAW,IACrBhiC,KAAKsyC,UAAUtQ,GAEdhiC,KAAKwyC,KAAK5xC,IAAIohC,IAAahiC,KAAKmyC,eAG9CD,EA9CA,GAAajxC,EAAAixC,oBAAAA,EAqDb,IAAAQ,EAAA,WAIC,SAAAA,IACC1yC,KAAK2yC,QAAU,IAAIT,EAAmB,GAUxC,OAPQQ,EAAA/xC,UAAA4hB,IAAP,SAAWyf,GACVhiC,KAAK2yC,QAAQp+B,IAAIytB,EAAQ,IAGnB0Q,EAAA/xC,UAAA2hB,IAAP,SAAW0f,GACV,OAAkC,IAA1BhiC,KAAK2yC,QAAQ/xC,IAAIohC,IAE3B0Q,EAfA,GAAazxC,EAAAyxC,aAAAA;kDCzCb,IAAAE,EAAA,WAUC,SAAAA,EAAYC,EAAoBC,GAC/B9yC,KAAK6yC,WAAaA,EAClB7yC,KAAK8yC,OAASA,EA8IhB,OArICF,EAAAjyC,UAAAmsC,KAAA,SAAKiG,EAAyCC,GAC7C,YADI,IAAAD,IAAAA,EAAwB/yC,KAAK6yC,iBAAY,IAAAG,IAAAA,EAAoBhzC,KAAK8yC,QAClEC,IAAkB/yC,KAAK6yC,YAAcG,IAAchzC,KAAK8yC,OACpD9yC,KAEA,IAAI4yC,EAASG,EAAeC,IAUrCJ,EAAAjyC,UAAA6f,MAAA,SAAMyyB,EAA6BC,GAClC,YADK,IAAAD,IAAAA,EAAA,QAA6B,IAAAC,IAAAA,EAAA,GAC3BlzC,KAAK8sC,KAAK9sC,KAAK6yC,WAAaI,EAAiBjzC,KAAK8yC,OAASI,IAM5DN,EAAAjyC,UAAAwR,OAAP,SAAc8N,GACb,OAAO2yB,EAASzgC,OAAOnS,KAAMigB,IAMhB2yB,EAAAzgC,OAAd,SAAqB3J,EAAqBC,GACzC,OAAKD,IAAMC,KAIRD,KACAC,GACFD,EAAEqqC,aAAepqC,EAAEoqC,YACnBrqC,EAAEsqC,SAAWrqC,EAAEqqC,QAQVF,EAAAjyC,UAAAwyC,SAAP,SAAgBlzB,GACf,OAAO2yB,EAASO,SAASnzC,KAAMigB,IAOlB2yB,EAAAO,SAAd,SAAuB3qC,EAAcC,GACpC,OAAID,EAAEqqC,WAAapqC,EAAEoqC,cAGjBpqC,EAAEoqC,WAAarqC,EAAEqqC,aAGdrqC,EAAEsqC,OAASrqC,EAAEqqC,QAOdF,EAAAjyC,UAAAyyC,gBAAP,SAAuBnzB,GACtB,OAAO2yB,EAASQ,gBAAgBpzC,KAAMigB,IAOzB2yB,EAAAQ,gBAAd,SAA8B5qC,EAAcC,GAC3C,OAAID,EAAEqqC,WAAapqC,EAAEoqC,cAGjBpqC,EAAEoqC,WAAarqC,EAAEqqC,aAGdrqC,EAAEsqC,QAAUrqC,EAAEqqC,QAMRF,EAAAz0B,QAAd,SAAsB3V,EAAcC,GACnC,IAAI4qC,EAA6B,EAAf7qC,EAAEqqC,WAChBS,EAA6B,EAAf7qC,EAAEoqC,WAEpB,OAAIQ,IAAgBC,GACM,EAAX9qC,EAAEsqC,SACS,EAAXrqC,EAAEqqC,QAIVO,EAAcC;AAMfV,EAAAjyC,UAAA4yC,MAAP,WACC,OAAO,IAAIX,EAAS5yC,KAAK6yC,WAAY7yC,KAAK8yC,SAMpCF,EAAAjyC,UAAAuwB,SAAP,WACC,MAAO,IAAMlxB,KAAK6yC,WAAa,IAAM7yC,KAAK8yC,OAAS,KAQtCF,EAAAY,KAAd,SAAmBpF,GAClB,OAAO,IAAIwE,EAASxE,EAAIyE,WAAYzE,EAAI0E,SAM3BF,EAAAa,YAAd,SAA0BlwC,GACzB,OACCA,GAC8B,iBAAnBA,EAAIsvC,YACW,iBAAftvC,EAAIuvC,QAGlBF,EA1JA,GAAa3xC,EAAA2xC,SAAAA,sGCUb,IAAAc,EAAA,WAmBC,SAAAA,EAAYC,EAAyBC,EAAqBC,EAAuBC,GAC3EH,EAAkBE,GAAmBF,IAAoBE,GAAiBD,EAAcE,GAC5F9zC,KAAK2zC,gBAAkBE,EACvB7zC,KAAK4zC,YAAcE,EACnB9zC,KAAK6zC,cAAgBF,EACrB3zC,KAAK8zC,UAAYF,IAEjB5zC,KAAK2zC,gBAAkBA,EACvB3zC,KAAK4zC,YAAcA,EACnB5zC,KAAK6zC,cAAgBA,EACrB7zC,KAAK8zC,UAAYA,GAqXpB,OA9WQJ,EAAA/yC,UAAAgD,QAAP,WACC,OAAO+vC,EAAM/vC,QAAQ3D,OAMR0zC,EAAA/vC,QAAd,SAAsBsf,GACrB,OAAQA,EAAM0wB,kBAAoB1wB,EAAM4wB,eAAiB5wB,EAAM2wB,cAAgB3wB,EAAM6wB,WAM/EJ,EAAA/yC,UAAAozC,iBAAP,SAAwB9xB,GACvB,OAAOyxB,EAAMK,iBAAiB/zC,KAAMiiB,IAMvByxB,EAAAK,iBAAd,SAA+B9wB,EAAehB;AAC7C,QAAIA,EAAS4wB,WAAa5vB,EAAM0wB,iBAAmB1xB,EAAS4wB,WAAa5vB,EAAM4wB,mBAG3E5xB,EAAS4wB,aAAe5vB,EAAM0wB,iBAAmB1xB,EAAS6wB,OAAS7vB,EAAM2wB,gBAGzE3xB,EAAS4wB,aAAe5vB,EAAM4wB,eAAiB5xB,EAAS6wB,OAAS7vB,EAAM6wB,aASrEJ,EAAA/yC,UAAAqzC,cAAP,SAAqB/wB,GACpB,OAAOywB,EAAMM,cAAch0C,KAAMijB,IAMpBywB,EAAAM,cAAd,SAA4B/wB,EAAegxB,GAC1C,QAAIA,EAAWN,gBAAkB1wB,EAAM0wB,iBAAmBM,EAAWJ,cAAgB5wB,EAAM0wB,qBAGvFM,EAAWN,gBAAkB1wB,EAAM4wB,eAAiBI,EAAWJ,cAAgB5wB,EAAM4wB,mBAGrFI,EAAWN,kBAAoB1wB,EAAM0wB,iBAAmBM,EAAWL,YAAc3wB,EAAM2wB,gBAGvFK,EAAWJ,gBAAkB5wB,EAAM4wB,eAAiBI,EAAWH,UAAY7wB,EAAM6wB,cAS/EJ,EAAA/yC,UAAAuzC,oBAAP,SAA2BjxB,GAC1B,OAAOywB,EAAMQ,oBAAoBl0C,KAAMijB,IAM1BywB,EAAAQ,oBAAd,SAAkCjxB,EAAegxB,GAChD,QAAIA,EAAWN,gBAAkB1wB,EAAM0wB,iBAAmBM,EAAWJ,cAAgB5wB,EAAM0wB,qBAGvFM,EAAWN,gBAAkB1wB,EAAM4wB,eAAiBI,EAAWJ,cAAgB5wB,EAAM4wB,mBAGrFI,EAAWN,kBAAoB1wB,EAAM0wB,iBAAmBM,EAAWL,aAAe3wB,EAAM2wB,gBAGxFK,EAAWJ,gBAAkB5wB,EAAM4wB,eAAiBI,EAAWH,WAAa7wB,EAAM6wB;AAUhFJ,EAAA/yC,UAAAwzC,UAAP,SAAiBlxB,GAChB,OAAOywB,EAAMS,UAAUn0C,KAAMijB,IAOhBywB,EAAAS,UAAd,SAAwB3rC,EAAWC,GAClC,IAAIkrC,EACAC,EACAC,EACAC,EAwBJ,OAtBIrrC,EAAEkrC,gBAAkBnrC,EAAEmrC,iBACzBA,EAAkBlrC,EAAEkrC,gBACpBC,EAAcnrC,EAAEmrC,aACNnrC,EAAEkrC,kBAAoBnrC,EAAEmrC,iBAClCA,EAAkBlrC,EAAEkrC,gBACpBC,EAAcnsC,KAAK2Z,IAAI3Y,EAAEmrC,YAAaprC,EAAEorC,eAExCD,EAAkBnrC,EAAEmrC,gBACpBC,EAAcprC,EAAEorC,aAGbnrC,EAAEorC,cAAgBrrC,EAAEqrC,eACvBA,EAAgBprC,EAAEorC,cAClBC,EAAYrrC,EAAEqrC,WACJrrC,EAAEorC,gBAAkBrrC,EAAEqrC,eAChCA,EAAgBprC,EAAEorC,cAClBC,EAAYrsC,KAAKC,IAAIe,EAAEqrC,UAAWtrC,EAAEsrC,aAEpCD,EAAgBrrC,EAAEqrC,cAClBC,EAAYtrC,EAAEsrC,WAGR,IAAIJ,EAAMC,EAAiBC,EAAaC,EAAeC,IAMxDJ,EAAA/yC,UAAAyzC,gBAAP,SAAuBnxB,GACtB,OAAOywB,EAAMU,gBAAgBp0C,KAAMijB,IAMtBywB,EAAAU,gBAAd,SAA8B5rC,EAAWC,GACxC,IAAI4rC,EAAwB7rC,EAAEmrC,gBAC1BW,EAAoB9rC,EAAEorC,YACtBW,EAAsB/rC,EAAEqrC,cACxBW,EAAkBhsC,EAAEsrC,UACpBW,EAAuBhsC,EAAEkrC,gBACzBe,EAAmBjsC,EAAEmrC,YACrBe,EAAqBlsC,EAAEorC,cACvBe,EAAiBnsC,EAAEqrC,UAiBvB,OAfIO,EAAwBI,GAC3BJ,EAAwBI,EACxBH,EAAoBI,GACVL,IAA0BI,IACpCH,EAAoB7sC,KAAKC,IAAI4sC,EAAmBI,IAG7CH,EAAsBI,GACzBJ,EAAsBI,EACtBH,EAAkBI,GACRL,IAAwBI,IAClCH,EAAkB/sC,KAAK2Z,IAAIozB,EAAiBI,IAIzCP,EAAwBE,EACpB,KAEJF,IAA0BE,GAAuBD,EAAoBE,EACjE,KAED,IAAId,EAAMW,EAAuBC,EAAmBC,EAAqBC,IAM1Ed,EAAA/yC,UAAAk0C,YAAP,SAAmB50B,GAClB,OAAOyzB,EAAMmB,YAAY70C,KAAMigB,IAMlByzB,EAAAmB,YAAd,SAA0BrsC,EAAkBC;AAC3C,QACGD,KACAC,GACFD,EAAEmrC,kBAAoBlrC,EAAEkrC,iBACxBnrC,EAAEorC,cAAgBnrC,EAAEmrC,aACpBprC,EAAEqrC,gBAAkBprC,EAAEorC,eACtBrrC,EAAEsrC,YAAcrrC,EAAEqrC,WAObJ,EAAA/yC,UAAAm0C,eAAP,WACC,OAAO,IAAIC,EAAAnC,SAAS5yC,KAAK6zC,cAAe7zC,KAAK8zC,YAMvCJ,EAAA/yC,UAAAq0C,iBAAP,WACC,OAAO,IAAID,EAAAnC,SAAS5yC,KAAK2zC,gBAAiB3zC,KAAK4zC,cAMzCF,EAAA/yC,UAAAuwB,SAAP,WACC,MAAO,IAAMlxB,KAAK2zC,gBAAkB,IAAM3zC,KAAK4zC,YAAc,OAAS5zC,KAAK6zC,cAAgB,IAAM7zC,KAAK8zC,UAAY,KAM5GJ,EAAA/yC,UAAAs0C,eAAP,SAAsBpB,EAAuBC,GAC5C,OAAO,IAAIJ,EAAM1zC,KAAK2zC,gBAAiB3zC,KAAK4zC,YAAaC,EAAeC,IAMlEJ,EAAA/yC,UAAAu0C,iBAAP,SAAwBvB,EAAyBC,GAChD,OAAO,IAAIF,EAAMC,EAAiBC,EAAa5zC,KAAK6zC,cAAe7zC,KAAK8zC,YAMlEJ,EAAA/yC,UAAAw0C,gBAAP,WACC,OAAOzB,EAAMyB,gBAAgBn1C,OAMhB0zC,EAAAyB,gBAAd,SAA8BlyB,GAC7B,OAAO,IAAIywB,EAAMzwB,EAAM0wB,gBAAiB1wB,EAAM2wB,YAAa3wB,EAAM0wB,gBAAiB1wB,EAAM2wB,cAK3EF,EAAA0B,cAAd,SAA4Br2B,EAAkBuQ,GAC7C,YAD6C,IAAAA,IAAAA,EAAAvQ,GACtC,IAAI20B,EAAM30B,EAAM8zB,WAAY9zB,EAAM+zB,OAAQxjB,EAAIujB,WAAYvjB,EAAIwjB,SAQxDY,EAAAF,KAAd,SAAmBvwB;AAClB,OAAKA,EAGE,IAAIywB,EAAMzwB,EAAM0wB,gBAAiB1wB,EAAM2wB,YAAa3wB,EAAM4wB,cAAe5wB,EAAM6wB,WAF9E,MAQKJ,EAAA2B,SAAd,SAAuB9xC,GACtB,OACCA,GACmC,iBAAxBA,EAAIowC,iBACgB,iBAApBpwC,EAAIqwC,aACkB,iBAAtBrwC,EAAIswC,eACc,iBAAlBtwC,EAAIuwC,WAOHJ,EAAA4B,0BAAd,SAAwC9sC,EAAWC,GAElD,QAAID,EAAEqrC,cAAgBprC,EAAEkrC,iBAAoBnrC,EAAEqrC,gBAAkBprC,EAAEkrC,iBAAmBnrC,EAAEsrC,UAAYrrC,EAAEmrC,gBAKjGnrC,EAAEorC,cAAgBrrC,EAAEmrC,iBAAoBlrC,EAAEorC,gBAAkBrrC,EAAEmrC,iBAAmBlrC,EAAEqrC,UAAYtrC,EAAEorC,cAWxFF,EAAA6B,gBAAd,SAA8B/sC,EAAWC,GAExC,QAAID,EAAEqrC,cAAgBprC,EAAEkrC,iBAAoBnrC,EAAEqrC,gBAAkBprC,EAAEkrC,iBAAmBnrC,EAAEsrC,WAAarrC,EAAEmrC,gBAKlGnrC,EAAEorC,cAAgBrrC,EAAEmrC,iBAAoBlrC,EAAEorC,gBAAkBrrC,EAAEmrC,iBAAmBlrC,EAAEqrC,WAAatrC,EAAEorC,cAYzFF,EAAA8B,yBAAd,SAAuChtC,EAA8BC,GACpE,GAAID,GAAKC,EAAG,CACX,IAAMgtC,EAAuC,EAApBjtC,EAAEmrC,gBACrB+B,EAAuC,EAApBjtC,EAAEkrC,gBAE3B,GAAI8B,IAAqBC,EAAkB,CAC1C,IAAMC,EAA+B,EAAhBntC,EAAEorC,YACjBgC,EAA+B,EAAhBntC,EAAEmrC,YAEvB,GAAI+B,IAAiBC,EAAc,CAClC,IAAMC,EAAmC,EAAlBrtC,EAAEqrC,cACnBiC,EAAmC,EAAlBrtC,EAAEorC,cAEzB,OAAIgC,IAAmBC,GACW,EAAdttC,EAAEsrC,YACY,EAAdrrC,EAAEqrC,WAGf+B,EAAiBC,EAEzB,OAAOH,EAAeC,EAEvB,OAAOH,EAAmBC;AAI3B,OAFiBltC,EAAI,EAAI,IACRC,EAAI,EAAI,IAQZirC,EAAAqC,uBAAd,SAAqCvtC,EAAWC,GAC/C,OAAID,EAAEqrC,gBAAkBprC,EAAEorC,cACrBrrC,EAAEsrC,YAAcrrC,EAAEqrC,UACjBtrC,EAAEmrC,kBAAoBlrC,EAAEkrC,gBACpBnrC,EAAEorC,YAAcnrC,EAAEmrC,YAEnBprC,EAAEmrC,gBAAkBlrC,EAAEkrC,gBAEvBnrC,EAAEsrC,UAAYrrC,EAAEqrC,UAEjBtrC,EAAEqrC,cAAgBprC,EAAEorC,eAMdH,EAAAsC,mBAAd,SAAiC/yB,GAChC,OAAOA,EAAM4wB,cAAgB5wB,EAAM0wB,iBAErCD,EAlZA,GAAazyC,EAAAyyC,MAAAA,2GCiBb,IAAAuC,EAAA,SAAAx4B,GAkBC,SAAAw4B,EAAYC,EAAkCC,EAA8BC,EAA4BC,GAAxG,IAAAluC,EACCsV,EAAAxN,KAAAjQ,KAAMk2C,EAA0BC,EAAsBC,EAAoBC,IAAer2C,YACzFmI,EAAK+tC,yBAA2BA,EAChC/tC,EAAKguC,qBAAuBA,EAC5BhuC,EAAKiuC,mBAAqBA,EAC1BjuC,EAAKkuC,eAAiBA,IAiIxB,OAxJ+B34B,EAAAu4B,EAAAx4B,GA6BvBw4B,EAAAt1C,UAAAuwB,SAAP,WACC,MAAO,IAAMlxB,KAAKk2C,yBAA2B,IAAMl2C,KAAKm2C,qBAAuB,OAASn2C,KAAKo2C,mBAAqB,IAAMp2C,KAAKq2C,eAAiB,KAMxIJ,EAAAt1C,UAAA21C,gBAAP,SAAuBr2B,GACtB,OACCg2B,EAAUM,gBAAgBv2C,KAAMigB,IAOpBg2B,EAAAM,gBAAd,SAA8B/tC,EAAeC;AAC5C,OACCD,EAAE0tC,2BAA6BztC,EAAEytC,0BACjC1tC,EAAE2tC,uBAAyB1tC,EAAE0tC,sBAC7B3tC,EAAE4tC,qBAAuB3tC,EAAE2tC,oBAC3B5tC,EAAE6tC,iBAAmB5tC,EAAE4tC,gBAOlBJ,EAAAt1C,UAAA61C,aAAP,WACC,OAAIx2C,KAAKk2C,2BAA6Bl2C,KAAK2zC,iBAAmB3zC,KAAKm2C,uBAAyBn2C,KAAK4zC,YAChG,EAED,GAMMqC,EAAAt1C,UAAAs0C,eAAP,SAAsBpB,EAAuBC,GAC5C,OAAuB,IAAnB9zC,KAAKw2C,eACD,IAAIP,EAAUj2C,KAAK2zC,gBAAiB3zC,KAAK4zC,YAAaC,EAAeC,GAEtE,IAAImC,EAAUpC,EAAeC,EAAW9zC,KAAK2zC,gBAAiB3zC,KAAK4zC,cAMpEqC,EAAAt1C,UAAA81C,YAAP,WACC,OAAO,IAAI1B,EAAAnC,SAAS5yC,KAAKo2C,mBAAoBp2C,KAAKq2C,iBAM5CJ,EAAAt1C,UAAAu0C,iBAAP,SAAwBvB,EAAyBC,GAChD,OAAuB,IAAnB5zC,KAAKw2C,eACD,IAAIP,EAAUtC,EAAiBC,EAAa5zC,KAAK6zC,cAAe7zC,KAAK8zC,WAEtE,IAAImC,EAAUj2C,KAAK6zC,cAAe7zC,KAAK8zC,UAAWH,EAAiBC,IAQ7DqC,EAAAb,cAAd,SAA4Br2B,EAAkBuQ,GAC7C,YAD6C,IAAAA,IAAAA,EAAAvQ,GACtC,IAAIk3B,EAAUl3B,EAAM8zB,WAAY9zB,EAAM+zB,OAAQxjB,EAAIujB,WAAYvjB,EAAIwjB,SAM5DmD,EAAAS,cAAd,SAA4BC,GAC3B,OAAO,IAAIV,EAAUU,EAAIT,yBAA0BS,EAAIR,qBAAsBQ,EAAIP,mBAAoBO,EAAIN;AAM5FJ,EAAAW,mBAAd,SAAiCpuC,EAAiBC,GACjD,GAAID,IAAMC,IAAMD,GAAKC,EACpB,OAAO,EAER,IAAKD,IAAMC,EACV,OAAO,EAER,GAAID,EAAE1I,SAAW2I,EAAE3I,OAClB,OAAO,EAER,IAAK,IAAIF,EAAI,EAAGC,EAAM2I,EAAE1I,OAAQF,EAAIC,EAAKD,IACxC,IAAKI,KAAKu2C,gBAAgB/tC,EAAE5I,GAAI6I,EAAE7I,IACjC,OAAO,EAGT,OAAO,GAMMq2C,EAAAY,aAAd,SAA2BtzC,GAC1B,OACCA,GAC4C,iBAAjCA,EAAI2yC,0BACyB,iBAA7B3yC,EAAI4yC,sBACuB,iBAA3B5yC,EAAI6yC,oBACmB,iBAAvB7yC,EAAI8yC,gBAOHJ,EAAAa,oBAAd,SAAkCnD,EAAyBC,EAAqBC,EAAuBC,EAAmBiD,GAEzH,OAAa,IAATA,EACI,IAAId,EAAUtC,EAAiBC,EAAaC,EAAeC,GAG5D,IAAImC,EAAUpC,EAAeC,EAAWH,EAAiBC,IAElEqC,EAxJA,CAA+Be,EAAAtD,OAAlBzyC,EAAAg1C,UAAAA,mGC1Cb,IAAAgB,EAAA,WAOC,SAAAA,EAAYpW,EAAgBx/B,EAAcu9B,GACzC5+B,KAAK6gC,OAAkB,EAATA,EACd7gC,KAAKqB,KAAOA,EACZrB,KAAK4+B,SAAWA,EAMlB,OAHQqY,EAAAt2C,UAAAuwB,SAAP,WACC,MAAO,IAAMlxB,KAAK6gC,OAAS,KAAO7gC,KAAKqB,KAAO,KAEhD41C,EAhBA,GAAah2C,EAAAg2C,MAAAA,EAkBb,IAAAC,EAMC,SAAYC,EAAiBC,GAC5Bp3C,KAAKm3C,OAASA,EACdn3C,KAAKo3C,SAAWA,GARLn2C,EAAAi2C,mBAAAA,EAYb,IAAAG,EAYC,SAAYF,EAAqBC,GAChCp3C,KAAKm3C,OAASA,EACdn3C,KAAKo3C,SAAWA,GAdLn2C,EAAAo2C,oBAAAA;WC5Bb,IAAMC,EAAoC,EAO1C,SAASC,EAAYvvB,EAA6BC,EAA6BC,EAA4C9B,GAE1H,OADiB,IAAIoxB,EAAAnxB,QAAQ2B,EAAkBC,EAAkBC,GACjD5B,YAAYF,GAG7B,IAAAqxB,EAAA,WAMC,SAAAA,EAAYC,GAGX,IAFA,IAAMC,EAAyB,GACzBC,EAAuB,GACpBh4C,EAAI,EAAG6lB,EAASiyB,EAAM53C,OAAQF,EAAI6lB,EAAQ7lB,IAClD+3C,EAAa/3C,GAAKi4C,EAAuBH,EAAM93C,GAAI,GACnDg4C,EAAWh4C,GAAKk4C,EAAsBJ,EAAM93C,GAAI,GAEjDI,KAAK03C,MAAQA,EACb13C,KAAK+3C,cAAgBJ,EACrB33C,KAAKg4C,YAAcJ,EAqCrB,OAlCQH,EAAA92C,UAAAmlB,YAAP,WAEC,IADA,IAAMuD,EAAqB,GAClBzpB,EAAI,EAAGC,EAAMG,KAAK03C,MAAM53C,OAAQF,EAAIC,EAAKD,IACjDypB,EAASzpB,GAAKI,KAAK03C,MAAM93C,GAAGgI,UAAU5H,KAAK+3C,cAAcn4C,GAAK,EAAGI,KAAKg4C,YAAYp4C,GAAK,GAExF,OAAOypB,GAGDouB,EAAA92C,UAAAs3C,mBAAP,SAA0Br4C,GACzB,OAAOA,EAAI,GAGL63C,EAAA92C,UAAAu3C,iBAAP,SAAwBt4C,GACvB,OAAOA,EAAI,GAGL63C,EAAA92C,UAAAw3C,mBAAP,SAA0BC,EAAqCnT,EAAoBoT,GAKlF,IAJA,IAAMC,EAAsB,GACtBC,EAAwB,GACxBC,EAAoB,GACtB34C,EAAM,EACDgjB,EAAQoiB,EAAYpiB,GAASw1B,EAAUx1B,IAI/C,IAHA,IAAM41B,EAAcz4C,KAAK03C,MAAM70B,GACzB+wB,EAAewE,EAA6Bp4C,KAAK+3C,cAAcl1B,GAAS,EACxEixB,EAAasE,EAA6Bp4C,KAAKg4C,YAAYn1B,GAAS41B,EAAY34C,OAAS,EACtFgX,EAAM88B,EAAa98B,EAAMg9B,EAAWh9B,IAC5CwhC,EAAUz4C,GAAO44C,EAAYtpC,WAAW2H,EAAM,GAC9CyhC,EAAY14C,GAAOgjB,EAAQ,EAC3B21B,EAAQ34C,GAAOiX,EACfjX,IAGF,OAAO,IAAI64C,EAAaJ,EAAWC,EAAaC,IAElDf,EApDA,GAsDAiB,EAAA,WAMC,SAAAA,EAAYJ,EAAqBC,EAAuBC,GACvDx4C,KAAK24C,WAAaL,EAClBt4C,KAAK44C,aAAeL,EACpBv4C,KAAK64C,SAAWL,EAsBlB,OAnBQE,EAAA/3C,UAAAmlB,YAAP,WACC,OAAO9lB,KAAK24C,YAGND,EAAA/3C,UAAAs3C,mBAAP,SAA0Br4C,GACzB,OAAOI,KAAK44C,aAAah5C;AAGnB84C,EAAA/3C,UAAAm4C,eAAP,SAAsBl5C,GACrB,OAAOI,KAAK64C,SAASj5C,IAGf84C,EAAA/3C,UAAAu3C,iBAAP,SAAwBt4C,GACvB,OAAOI,KAAK44C,aAAah5C,IAGnB84C,EAAA/3C,UAAAo4C,aAAP,SAAoBn5C,GACnB,OAAOI,KAAK64C,SAASj5C,GAAK,GAE5B84C,EA/BA,GAiCAM,EAAA,WAYC,SAAAA,EACCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAx5C,KAAKi5C,wBAA0BA,EAC/Bj5C,KAAKk5C,oBAAsBA,EAC3Bl5C,KAAKm5C,sBAAwBA,EAC7Bn5C,KAAKo5C,kBAAoBA,EACzBp5C,KAAKq5C,wBAA0BA,EAC/Br5C,KAAKs5C,oBAAsBA,EAC3Bt5C,KAAKu5C,sBAAwBA,EAC7Bv5C,KAAKw5C,kBAAoBA,EA0C3B,OAvCeR,EAAAS,qBAAd,SAAmCC,EAAyBC,EAAoCC,GAC/F,IAAIX,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EA0BJ,OAxBkC,IAA9BE,EAAWl+B,gBACdy9B,EAA0B,EAC1BC,EAAsB,EACtBC,EAAwB,EACxBC,EAAoB,IAEpBH,EAA0BU,EAAqB1B,mBAAmByB,EAAWn+B,eAC7E29B,EAAsBS,EAAqBb,eAAeY,EAAWn+B,eACrE49B,EAAwBQ,EAAqBzB,iBAAiBwB,EAAWn+B,cAAgBm+B,EAAWl+B,eAAiB,GACrH49B,EAAoBO,EAAqBZ,aAAaW,EAAWn+B,cAAgBm+B,EAAWl+B,eAAiB,IAG5E,IAA9Bk+B,EAAWh+B,gBACd29B,EAA0B,EAC1BC,EAAsB,EACtBC,EAAwB,EACxBC,EAAoB,IAEpBH,EAA0BO,EAAqB3B,mBAAmByB,EAAWj+B,eAC7E69B,EAAsBM,EAAqBd,eAAeY,EAAWj+B,eACrE89B,EAAwBK,EAAqB1B,iBAAiBwB,EAAWj+B,cAAgBi+B,EAAWh+B,eAAiB,GACrH89B,EAAoBI,EAAqBb,aAAaW,EAAWj+B,cAAgBi+B,EAAWh+B,eAAiB,IAGvG,IAAIs9B,EACVC,EAAyBC,EAAqBC,EAAuBC,EACrEC,EAAyBC,EAAqBC,EAAuBC,IAGxER,EAvEA;CAuGA,IAAAa,EAAA,WAOC,SAAAA,EACCZ,EACAE,EACAE,EACAE,EACAO,GAEA95C,KAAKi5C,wBAA0BA,EAC/Bj5C,KAAKm5C,sBAAwBA,EAC7Bn5C,KAAKq5C,wBAA0BA,EAC/Br5C,KAAKu5C,sBAAwBA,EAC7Bv5C,KAAK85C,YAAcA,EA6CrB,OA1CeD,EAAAE,qBAAd,SAAmC3B,EAAqCsB,EAAyBM,EAAoCC,EAAoCC,EAAiCC,EAAmCC,GAC5O,IAAInB,EACAE,EACAE,EACAE,EACAO,OAAwCxzC,EAkB5C,GAhBkC,IAA9BozC,EAAWl+B,gBACdy9B,EAA0Be,EAAqB/B,mBAAmByB,EAAWn+B,eAAiB,EAC9F49B,EAAwB,IAExBF,EAA0Be,EAAqB/B,mBAAmByB,EAAWn+B,eAC7E49B,EAAwBa,EAAqB9B,iBAAiBwB,EAAWn+B,cAAgBm+B,EAAWl+B,eAAiB,IAGpF,IAA9Bk+B,EAAWh+B,gBACd29B,EAA0BY,EAAqBhC,mBAAmByB,EAAWj+B,eAAiB,EAC9F89B,EAAwB,IAExBF,EAA0BY,EAAqBhC,mBAAmByB,EAAWj+B,eAC7E89B,EAAwBU,EAAqB/B,iBAAiBwB,EAAWj+B,cAAgBi+B,EAAWh+B,eAAiB,IAGlHy+B,GAA4BT,EAAWl+B,eAAiB,GAAKk+B,EAAWl+B,eAAiB,IAAMk+B,EAAWh+B,eAAiB,GAAKg+B,EAAWh+B,eAAiB,IAAMw+B,IAAoB,CAEzL,IAAMP,EAAuBK,EAAqB7B,mBAAmBC,EAA4BsB,EAAWn+B,cAAem+B,EAAWn+B,cAAgBm+B,EAAWl+B,eAAiB,GAC5Ko+B,EAAuBK,EAAqB9B,mBAAmBC,EAA4BsB,EAAWj+B,cAAei+B,EAAWj+B,cAAgBi+B,EAAWh+B,eAAiB,GAE9K2+B,EAAa9C,EAAYoC,EAAsBC,EAAsBM,GAAkB,GAAM3zB,QAE7F6zB,IACHC,EAlFJ,SAAgCA,GAC/B,GAAIA,EAAWv6C,QAAU,EACxB,OAAOu6C,EAMR,IAHA,IAAM16C,EAAS,CAAC06C,EAAW,IACvBhtB,EAAa1tB,EAAO,GAEfC,EAAI,EAAGC,EAAMw6C,EAAWv6C,OAAQF,EAAIC,EAAKD,IAAK;AACtD,IAAM06C,EAAaD,EAAWz6C,GAExB26C,EAAyBD,EAAW/+B,eAAiB8R,EAAW9R,cAAgB8R,EAAW7R,gBAC3Fg/B,EAAyBF,EAAW7+B,eAAiB4R,EAAW5R,cAAgB4R,EAAW3R,gBAE1EjU,KAAK2Z,IAAIm5B,EAAwBC,GAEnClD,GAEpBjqB,EAAW7R,eAAkB8+B,EAAW/+B,cAAgB++B,EAAW9+B,eAAkB6R,EAAW9R,cAChG8R,EAAW3R,eAAkB4+B,EAAW7+B,cAAgB6+B,EAAW5+B,eAAkB2R,EAAW5R,gBAGhG9b,EAAOuC,KAAKo4C,GACZjtB,EAAaitB,GAIf,OAAO36C,EAuDS86C,CAAuBJ,IAGrCP,EAAc,GACd,IAAK,IAAIl6C,EAAI,EAAG86C,EAASL,EAAWv6C,OAAQF,EAAI86C,EAAQ96C,IACvDk6C,EAAY53C,KAAK82C,EAAWS,qBAAqBY,EAAWz6C,GAAI+5C,EAAsBC,IAIxF,OAAO,IAAIC,EAAWZ,EAAyBE,EAAuBE,EAAyBE,EAAuBO,IAExHD,EA/DA,GAyEAc,EAAA,WAaC,SAAAA,EAAYC,EAAyBC,EAAyBzsC,GAC7DpO,KAAKm6C,yBAA2B/rC,EAAK+rC,yBACrCn6C,KAAKo6C,6BAA+BhsC,EAAKgsC,6BACzCp6C,KAAKo4C,2BAA6BhqC,EAAKgqC,2BACvCp4C,KAAK86C,qBAAuB1sC,EAAK0sC,qBACjC96C,KAAK46C,cAAgBA,EACrB56C,KAAK66C,cAAgBA,EACrB76C,KAAKkmB,SAAW,IAAIuxB,EAAamD,GACjC56C,KAAKmmB,SAAW,IAAIsxB,EAAaoD,GAEjC76C,KAAK+6C,iBAAmBC,EAAkC5sC,EAAK6sC,oBAC/Dj7C,KAAKk6C,iBAAmBc,EAA8D,IAA5B5sC,EAAK6sC,mBAA2B,EAAIxzC,KAAK2Z,IAAIhT,EAAK6sC,mBAAoB,MA+MlI,OA5MQN,EAAAh6C,UAAA42C,YAAP,WAEC,GAAmC,IAA/Bv3C,KAAKkmB,SAASwxB,MAAM53C,QAAkD,IAAlCE,KAAKkmB,SAASwxB,MAAM,GAAG53C,OAE9D,MAAO,CACNsqB,WAAW;AACX7D,QAAS,CAAC,CACT0yB,wBAAyB,EACzBE,sBAAuB,EACvBE,wBAAyB,EACzBE,sBAAuBv5C,KAAKmmB,SAASuxB,MAAM53C,OAC3Cg6C,YAAa,CAAC,CACbN,kBAAmB,EACnBD,sBAAuB,EACvBD,oBAAqB,EACrBD,wBAAyB,EACzBD,kBAAmB,EACnBD,sBAAuB,EACvBD,oBAAqB,EACrBD,wBAAyB,OAM7B,GAAmC,IAA/Bj5C,KAAKmmB,SAASuxB,MAAM53C,QAAkD,IAAlCE,KAAKmmB,SAASuxB,MAAM,GAAG53C,OAE9D,MAAO,CACNsqB,WAAW,EACX7D,QAAS,CAAC,CACT0yB,wBAAyB,EACzBE,sBAAuBn5C,KAAKkmB,SAASwxB,MAAM53C,OAC3Cu5C,wBAAyB,EACzBE,sBAAuB,EACvBO,YAAa,CAAC,CACbN,kBAAmB,EACnBD,sBAAuB,EACvBD,oBAAqB,EACrBD,wBAAyB,EACzBD,kBAAmB,EACnBD,sBAAuB,EACvBD,oBAAqB,EACrBD,wBAAyB,OAM7B,IAAMiC,EAAa3D,EAAYv3C,KAAKkmB,SAAUlmB,KAAKmmB,SAAUnmB,KAAK+6C,iBAAkB/6C,KAAK86C,sBACnFT,EAAaa,EAAW30B,QACxB6D,EAAY8wB,EAAW9wB,UAK7B,GAAIpqB,KAAKo4C,2BAA4B;AAEpC,IADA,IAAM+C,EAA4B,GACzBv7C,EAAI,EAAGw7C,EAASf,EAAWv6C,OAAQF,EAAIw7C,EAAQx7C,IACvDu7C,EAAYj5C,KAAK23C,EAAWE,qBAAqB/5C,KAAKo4C,2BAA4BiC,EAAWz6C,GAAII,KAAKkmB,SAAUlmB,KAAKmmB,SAAUnmB,KAAKk6C,iBAAkBl6C,KAAKm6C,yBAA0Bn6C,KAAKo6C,+BAE3L,MAAO,CACNhwB,UAAWA,EACX7D,QAAS40B,GAUX,IAJA,IAAMx7C,EAAuB,GAEzB07C,EAAoB,EACpBC,EAAoB,EACIz7C,GAAnBD,GAAK,EAAoBy6C,EAAWv6C,QAAQF,EAAIC,EAAKD,IAAK,CAKlE,IAJA,IAAM27C,EAAc37C,EAAI,EAAIC,EAAMw6C,EAAWz6C,EAAI,GAAK,KAChDmtB,EAAgBwuB,EAAaA,EAAWhgC,cAAgBvb,KAAK46C,cAAc96C,OAC3EktB,EAAgBuuB,EAAaA,EAAW9/B,cAAgBzb,KAAK66C,cAAc/6C,OAE1Eu7C,EAAoBtuB,GAAgBuuB,EAAoBtuB,GAAc,CAC5E,IAAMwuB,EAAex7C,KAAK46C,cAAcS,GAClCI,EAAez7C,KAAK66C,cAAcS,GAExC,GAAIE,IAAiBC,EAAc,CAOjC,IAFA,IAAIvC,EAAsBrB,EAAuB2D,EAAc,GAC3DlC,EAAsBzB,EAAuB4D,EAAc,GACxDvC,EAAsB,GAAKI,EAAsB,GAAG,CAG1D,GAFqBkC,EAAarsC,WAAW+pC,EAAsB,KAC9CuC,EAAatsC,WAAWmqC,EAAsB,GAElE,MAEDJ,IACAI,KAGGJ,EAAsB,GAAKI,EAAsB,IACpDt5C,KAAK07C,8BAA8B/7C,EAClC07C,EAAoB,EAAG,EAAGnC,EAC1BoC,EAAoB,EAAG,EAAGhC,GAW5B,IAJA,IAAIF,EAAoBtB,EAAsB0D,EAAc,GACxDhC,EAAoB1B,EAAsB2D,EAAc,GACtDE,EAAoBH,EAAa17C,OAAS,EAC1C87C,EAAoBH,EAAa37C,OAAS,EACzCs5C,EAAoBuC,GAAqBnC,EAAoBoC,GAAmB,CAGtF,GAFqBJ,EAAarsC,WAAWiqC,EAAoB,KAC5CoC,EAAarsC,WAAWqqC,EAAoB,GAEhE,MAEDJ,IACAI,KAGGJ,EAAoBuC,GAAqBnC,EAAoBoC,IAChE57C,KAAK07C,8BAA8B/7C,EAClC07C,EAAoB,EAAGjC,EAAmBuC,EAC1CL,EAAoB,EAAG9B,EAAmBoC,GAK9CP,IACAC,IAGGC,IAEH57C,EAAOuC,KAAK23C,EAAWE,qBAAqB/5C,KAAKo4C,2BAA4BmD,EAAYv7C,KAAKkmB,SAAUlmB,KAAKmmB,SAAUnmB,KAAKk6C,iBAAkBl6C,KAAKm6C,yBAA0Bn6C,KAAKo6C;AAElLiB,GAAqBE,EAAW//B,eAChC8/B,GAAqBC,EAAW7/B,gBAIlC,MAAO,CACN0O,UAAWA,EACX7D,QAAS5mB,IAIHg7C,EAAAh6C,UAAA+6C,8BAAR,SACC/7C,EACAk8C,EAA4B3C,EAA6BE,EACzD0C,EAA4BxC,EAA6BE,GAEzD,IAAIx5C,KAAK+7C,+BAA+Bp8C,EAAQk8C,EAAoB3C,EAAqBE,EAAmB0C,EAAoBxC,EAAqBE,GAArJ,CAKA,IAAIM,OAAwCxzC,EACxCtG,KAAKm6C,2BACRL,EAAc,CAAC,IAAId,EAClB6C,EAAoB3C,EAAqB2C,EAAoBzC,EAC7D0C,EAAoBxC,EAAqBwC,EAAoBtC,KAG/D75C,EAAOuC,KAAK,IAAI23C,EACfgC,EAAoBA,EACpBC,EAAoBA,EACpBhC,MAIMa,EAAAh6C,UAAAo7C,+BAAR,SACCp8C,EACAk8C,EAA4B3C,EAA6BE,EACzD0C,EAA4BxC,EAA6BE,GAEzD,IAAM35C,EAAMF,EAAOG,OACnB,GAAY,IAARD,EACH,OAAO,EAGR,IAAMwtB,EAAa1tB,EAAOE,EAAM,GAEhC,OAAyC,IAArCwtB,EAAW8rB,uBAAoE,IAArC9rB,EAAWksB,wBAKrDlsB,EAAW8rB,sBAAwB,IAAM0C,GAAsBxuB,EAAWksB,sBAAwB,IAAMuC,IAC3GzuB,EAAW8rB,sBAAwB0C,EACnCxuB,EAAWksB,sBAAwBuC,EAC/B97C,KAAKm6C,0BAA4B9sB,EAAWysB,aAC/CzsB,EAAWysB,YAAY53C,KAAK,IAAI82C,EAC/B6C,EAAoB3C,EAAqB2C,EAAoBzC,EAC7D0C,EAAoBxC,EAAqBwC,EAAoBtC,KAGxD,KAKVmB,EAvOA,GAyOA,SAAS9C,EAAuBmE,EAAa5J,GAC5C,IAAMx/B,EAAIqpC,EAAQpX,wBAAwBmX,GAC1C,OAAW,IAAPppC,EACIw/B,EAEDx/B,EAAI,EAGZ,SAASklC,EAAsBkE,EAAa5J,GAC3C,IAAMx/B,EAAIqpC,EAAQjX,uBAAuBgX,GACzC,OAAW,IAAPppC,EACIw/B,EAEDx/B,EAAI,EAGZ,SAASooC,EAAkCkB,GAC1C,GAAuB,IAAnBA,EACH,OAAO,WAAM,OAAA,GAGd,IAAMC,EAAY33C,KAAKD,MACvB,OAAO,WACN,OAAOC,KAAKD,MAAQ43C,EAAYD,GAhQrBj7C,EAAA05C,aAAAA;kDCrRA15C,EAAAm7C,sBAAwB,oCAsBxBn7C,EAAAo7C,oBAbb,SAA0BC,QAAA,IAAAA,IAAAA,EAAA,IAEzB,IADA,IAAIz2B,EAAS,yBACK7d,EAAA,EAAAu0C,EAAAt7C,EAAAm7C,sBAAAp0C,EAAAu0C,EAAAz8C,OAAAkI,IAAuB,CAApC,IAAMw0C,EAAGD,EAAAv0C,GACTs0C,EAAa76C,QAAQ+6C,IAAQ,IAGjC32B,GAAU,KAAO22B,GAGlB,OADA32B,GAAU,SACH,IAAIwe,OAAOxe,EAAQ,KAIQ42B,GAEnCx7C,EAAAy7C,0BAAA,SAA0CC,GACzC,IAAIh9C,EAAiBsB,EAAAo7C,oBAErB,GAAIM,GAAmBA,aAA0BtY,OAChD,GAAKsY,EAAez8C,OAanBP,EAASg9C,MAbkB,CAC3B,IAAIC,EAAQ,IACRD,EAAe/X,aAClBgY,GAAS,KAEND,EAAexY,YAClByY,GAAS,KAELD,EAAuBvY,UAC3BwY,GAAS,KAEVj9C,EAAS,IAAI0kC,OAAOsY,EAAe92B,OAAQ+2B,GAQ7C,OAFAj9C,EAAO+iB,UAAY,EAEZ/iB,GAsDRsB,EAAA47C,cAAA,SAA8B/J,EAAgB6J,EAAwBvV,EAAc0V,GAInFH,EAAej6B,UAAY,EAC3B,IAAIrS,EAAQssC,EAAenY,KAAK4C,GAChC,IAAK/2B,EACJ,OAAO,KAGR,IAAMX,EAAMW,EAAM,GAAG5O,QAAQ,MAAQ,EAtCtC,SAA0BqxC,EAAgB6J,EAAwBvV,EAAc0V,GAK/E,IAGIzsC,EAHA+9B,EAAM0E,EAAS,EAAIgK,EAIvB,IAHAH,EAAej6B,UAAY,EAGpBrS,EAAQssC,EAAenY,KAAK4C,IAAO,CACzC,IAAM2V,EAAa1sC,EAAMwS,OAAS,EAClC,GAAIk6B,EAAa3O,EAEhB,OAAO,KAED,GAAIuO,EAAej6B,WAAa0rB,EAEtC,MAAO,CACN4O,KAAM3sC,EAAM,GACZujC,YAAakJ,EAAa,EAAIC,EAC9BjJ,UAAWgJ,EAAa,EAAIH,EAAej6B,WAK9C,OAAO,KAeJu6B,CAAiBnK,EAAQ6J,EAAgBvV,EAAM0V,GA/DnD,SAA0BhK,EAAgB6J,EAAwBvV,EAAc0V,GAG/E,IAIIzsC,EAJA+9B,EAAM0E,EAAS,EAAIgK,EACnB/9B,EAAQqoB,EAAKz/B,YAAY,IAAKymC,EAAM,GAAK,EAI7C,IAFAuO,EAAej6B,UAAY3D,EAEpB1O,EAAQssC,EAAenY,KAAK4C,IAAO,CACzC,IAAM2V,EAAa1sC,EAAMwS,OAAS,EAClC,GAAIk6B,GAAc3O,GAAOuO,EAAej6B,WAAa0rB,EACpD,MAAO,CACN4O,KAAM3sC,EAAM;AACZujC,YAAakJ,EAAa,EAAIC,EAC9BjJ,UAAWgJ,EAAa,EAAIH,EAAej6B,WAK9C,OAAO,KA8CJw6B,CAAiBpK,EAAQ6J,EAAgBvV,EAAM0V,GAOlD,OAFAH,EAAej6B,UAAY,EAEpBhT,yGC/FR,IAAAytC,EAAA,WAMC,SAAAA,EAAYC,EAAcC,EAAcjL,GAEvC,IADA,IAAM1lC,EAAO,IAAIw5B,WAAWkX,EAAOC,GAC1Bz9C,EAAI,EAAGC,EAAMu9C,EAAOC,EAAMz9C,EAAIC,EAAKD,IAC3C8M,EAAK9M,GAAKwyC,EAGXpyC,KAAK8oC,MAAQp8B,EACb1M,KAAKo9C,KAAOA,EACZp9C,KAAKq9C,KAAOA,EAUd,OAPQF,EAAAx8C,UAAAC,IAAP,SAAW08C,EAAaxmC,GACvB,OAAO9W,KAAK8oC,MAAMwU,EAAMt9C,KAAKq9C,KAAOvmC,IAG9BqmC,EAAAx8C,UAAA4T,IAAP,SAAW+oC,EAAaxmC,EAAa/S,GACpC/D,KAAK8oC,MAAMwU,EAAMt9C,KAAKq9C,KAAOvmC,GAAO/S,GAEtCo5C,EAxBA,GAAal8C,EAAAk8C,YAAAA,EA0Bb,IAAAI,EAAA,WAKC,SAAAA,EAAYC,GAGX,IAFA,IAAIC,EAAc,EACdC,EAAQ,EACH99C,EAAI,EAAGC,EAAM29C,EAAM19C,OAAQF,EAAIC,EAAKD,IAAK,CAC7C,IAAAqI,EAAAu1C,EAAA59C,GAACyI,EAAAJ,EAAA,IAAM68B,EAAA78B,EAAA,IACEw1C,IACZA,EAAc3Y,GAEXz8B,EAAOq1C,IACVA,EAAWr1C,IALOC,EAAAL,EAAA,IAOVy1C,IACRA,EAAWp1C,GAOb,IAAIq1C,EAAS,IAAIR,IAFjBO,IADAD,EAGkD,GAClD,IAAS79C,EAAI,EAAGC,EAAM29C,EAAM19C,OAAQF,EAAIC,EAAKD,IAAK,CAC7C,IAAA4oB,EAAAg1B,EAAA59C,GAAOklC,GAANz8B,EAAAmgB,EAAA,GAAMA,EAAA,IAAQlgB,EAAAkgB,EAAA,GACnBm1B,EAAOppC,IAAIlM,EAAMy8B,EAAQx8B,GAG1BtI,KAAK49C,QAAUD,EACf39C,KAAK69C,aAAeJ,EAStB,OANQF,EAAA58C,UAAAm9C,UAAP,SAAiBC,EAAqBjZ,GACrC,OAAIA,EAAS,GAAKA,GAAU9kC,KAAK69C,aAChC,EAEM79C,KAAK49C,QAAQh9C,IAAIm9C,EAAcjZ,IAExCyY,EAxCA,GAAat8C,EAAAs8C,aAAAA,EA2Cb,IAAIS,EAAqC,KAgDzC,IAAIC,EAA0D,KAkB9D,IAAAC,EAAA,WAAA,SAAAA,KA4JA,OA1JgBA,EAAAC,YAAf,SAA2BC,EAAiDxnC,EAAci8B,EAAoBwL,EAAwBC,GAErI,IAAIC,EAAwBD,EAAe,EAC3C,EAAG,CACF,IAAMxZ,EAASluB,EAAKzH,WAAWovC,GAE/B,GAAW,IADKH,EAAWx9C,IAAIkkC,GAE9B,MAEDyZ;OACQA,EAAwBF,GAGjC,GAAIA,EAAiB,EAAG,CACvB,IAAMG,EAAqB5nC,EAAKzH,WAAWkvC,EAAiB,GACtDI,EAAqB7nC,EAAKzH,WAAWovC,IAGvB,KAAlBC,GAA+D,KAAlBC,GACxB,KAAlBD,GAAuE,KAAlBC,GACnC,MAAlBD,GAAoE,MAAlBC,IAKtDF,IAIF,MAAO,CACNt7B,MAAO,CACN0wB,gBAAiBd,EACjBe,YAAayK,EAAiB,EAC9BxK,cAAehB,EACfiB,UAAWyK,EAAwB,GAEpCn7C,IAAKwT,EAAKhP,UAAUy2C,EAAgBE,EAAwB,KAIhDL,EAAAQ,aAAd,SAA2BC,EAA4BC,QAAA,IAAAA,IA1GjC,OAAlBZ,IACHA,EAAgB,IAAIT,EAAa,CAChC,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GACA,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GAEA,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GAEA,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GAEA,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GAEA,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GACA,CAAA,EAAA,GAAA,IAEA,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GAEA,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GAEA,CAAA,EAAA,IAAA,GACA,CAAA,EAAA,GAAA,GAEA,CAAA,EAAA,GAAA,IAEA,CAAA,GAAA,GAAA,IAEA,CAAA,GAAA,GAAA,OAyEqDqB,EAtEhDZ,GA0EN,IAHA,IAAMI,EA5DR,WACC,GAAoB,OAAhBH,EAAsB,CACzBA,EAAc,IAAIY,EAAA3M,oBAAmB,GAGrC,IADA,IACStyC,EAAI,EAAGA,EADqB,sDACYE,OAAQF,IACxDq+C,EAAY1pC,IAFwB,sDAESpF,WAAWvP,GAAE,GAI3D,IAASA,EAAI,EAAGA,EADmB,MACYE,OAAQF,IACtDq+C,EAAY1pC,IAFsB,MAESpF,WAAWvP,GAAE,GAG1D,OAAOq+C,EA8Caa,GAEfn/C,EAAkB,GACbC,EAAI,EAAGm/C,EAAYJ,EAAMK,eAAgBp/C,GAAKm/C,EAAWn/C,IAAK,CAYtE,IAXA,IAAMgX,EAAO+nC,EAAMM,eAAer/C,GAC5BC,EAAM+W,EAAK9W,OAEbgJ,EAAI,EACJu1C,EAAiB,EACjBa,EAAkB,EAClBC,EAAK,EACLC,GAAgB,EAChBC,GAAuB,EACvBC,GAAsB,EAEnBx2C,EAAIjJ,GAAK,CAEf,IAAI0/C,GAAoB,EAClBza,EAASluB,EAAKzH,WAAWrG,GAE/B,GAAS,KAALq2C,EAAwB,CAC3B,IAAIK,OAAO,EACX,OAAQ1a,GACP,KAAA,GACCsa,GAAgB,EAChBI,EAAO,EACP,MACD,KAAA,GACCA,EAAWJ,EAAe,EAAsB,EAChD,MACD,KAAA;AACCC,GAAuB,EACvBG,EAAO,EACP,MACD,KAAA,GACCA,EAAWH,EAAsB,EAAsB,EACvD,MACD,KAAA,IACCC,GAAsB,EACtBE,EAAO,EACP,MACD,KAAA,IACCA,EAAWF,EAAqB,EAAsB,EACtD,MAED,KAAA,GACCE,EAA0B,KAAfN,GAA2D,KAAfA,EAAwC,EAAsB,EACrH,MACD,KAAA,GACCM,EAA0B,KAAfN,GAA2D,KAAfA,EAAwC,EAAsB,EACrH,MACD,KAAA,GACCM,EAA0B,KAAfN,GAA2D,KAAfA,EAA2C,EAAsB,EACxH,MACD,KAAA,GAECM,EAA0B,KAAfN,EAAwC,EAAkC,EACrF,MACD,QACCM,EAAUpB,EAAWx9C,IAAIkkC,GAIhB,IAAP0a,IACH7/C,EAAOuC,KAAKg8C,EAAaC,YAAYC,EAAYxnC,EAAMhX,EAAGy+C,EAAgBv1C,IAC1Ey2C,GAAoB,QAEf,GAAS,KAALJ,EAAqB,CAE3BK,OAAO,EACD,KAAN1a,GAEHua,GAAuB,EACvBG,EAAO,GAEPA,EAAUpB,EAAWx9C,IAAIkkC,GAIf,IAAP0a,EACHD,GAAoB,EAEpBJ,EAAK,QAIG,KADTA,EAAQP,EAAad,UAAUqB,EAAOra,MAErCya,GAAoB,GAIlBA,IACHJ,EAAK,EACLC,GAAgB,EAChBC,GAAuB,EACvBC,GAAsB,EAGtBjB,EAAiBv1C,EAAI,EACrBo2C,EAAkBpa,GAGnBh8B,IAGQ,KAALq2C,GACHx/C,EAAOuC,KAAKg8C,EAAaC,YAAYC,EAAYxnC,EAAMhX,EAAGy+C,EAAgBx+C,IAK5E,OAAOF,GAETu+C,EA5JA,GAAaj9C,EAAAi9C,aAAAA,EAmKbj9C,EAAAy9C,aAAA,SAA6BC,GAC5B,OAAKA,GAAuC,mBAAvBA,EAAMK,cAA+D,mBAAzBL,EAAMM,eAIhEf,EAAaQ,aAAaC,GAFzB,qGCvUT,IAAAc,EAAA,WAAA,SAAAA,IA0DkBz/C,KAAA0/C,iBAA+B,CAC/C,CAAC,OAAQ,SACT,CAAC,OAAQ,SACT,CAAC,UAAW,SAAU,SAAU,WAAY,UAAW,YAAa,aACpE,CAAC,SAAU,YAAa,YA4B1B,OAtFQD,EAAA9+C,UAAAg/C,iBAAP,SAAwBC,EAAgBC,EAAeC,EAAgBC,EAAsBC,GAG3F,IAUIrgD;CAXL,GAAIigD,GAAUC,IACTlgD,EAASK,KAAKigD,mBAAmBJ,EAAOG,IAE3C,MAAO,CACN/8B,MAAO28B,EACP77C,MAAOpE,GAKV,GAAImgD,GAAUC,IACTpgD,EAASK,KAAKigD,mBAAmBF,EAAOC,IAE3C,MAAO,CACN/8B,MAAO68B,EACP/7C,MAAOpE,GAKV,OAAO,MAGA8/C,EAAA9+C,UAAAs/C,mBAAR,SAA2B7Y,EAAc4Y,GACxC,IAAIE,EAAelgD,KAAKmgD,cAAc/Y,EAAM4Y,GAC5C,OAAqB,OAAjBE,EACIA,EAEDlgD,KAAKogD,YAAYhZ,EAAM4Y,IAGvBP,EAAA9+C,UAAAw/C,cAAR,SAAsBp8C,EAAei8C,GACpC,IAAIK,EAAY54C,KAAKgK,IAAI,GAAI1N,EAAMjE,QAAUiE,EAAM4D,YAAY,KAAO,IAClE24C,EAAKvxB,OAAOhrB,GACZw8C,EAAKC,WAAWz8C,GAEpB,OAAKw/B,MAAM+c,IAAQ/c,MAAMgd,IAAOD,IAAOC,EAahC,KAXK,IAAPD,GAAaN,GAKhBM,EAAK74C,KAAKwW,MAAMqiC,EAAKD,GACrBC,GAAMN,EAAKK,GAAaA,EACjBx7C,OAAOy7C,EAAKD,IANZ,MAoBFZ,EAAA9+C,UAAAy/C,YAAR,SAAoBr8C,EAAei8C,GAClC,OAAOhgD,KAAKygD,iBAAiBzgD,KAAK0/C,iBAAkB37C,EAAOi8C,IAGpDP,EAAA9+C,UAAA8/C,iBAAR,SAAyBC,EAAuB38C,EAAei8C,GAE9D,IADA,IAAIrgD,EAAwB,KACnBC,EAAI,EAAGC,EAAM6gD,EAAU5gD,OAAmB,OAAXH,GAAmBC,EAAIC,EAAKD,IACnED,EAASK,KAAK2gD,gBAAgBD,EAAU9gD,GAAImE,EAAOi8C,GAEpD,OAAOrgD,GAGA8/C,EAAA9+C,UAAAggD,gBAAR,SAAwBC,EAAoB78C,EAAei8C,GAC1D,IAAI5jB,EAAMwkB,EAASn/C,QAAQsC,GAC3B,OAAIq4B,GAAO,IACVA,GAAO4jB,EAAK,GAAM,GACR,EACT5jB,EAAMwkB,EAAS9gD,OAAS,EAExBs8B,GAAOwkB,EAAS9gD,OAEV8gD,EAASxkB,IAEV,MAtFeqjB,EAAAl9C,SAAW,IAAIk9C,EAwFvCA,EA1FA,GAAax+C,EAAAw+C,oBAAAA;;;;;AjBJbzpB,EAIA,WACA,aAKA,SAAA6qB,EAAAr9C,GACA,IAAA6J,EAAArN,KAAAqN,YACA,OAAArN,KAAAwhB,MACA,SAAAzd,GACA,OAAAsJ,EAAAC,QAAA9J,KAAAge,MAAA,WACA,OAAAzd,QAGA,SAAA+8C,GACA,OAAAzzC,EAAAC,QAAA9J,KAAAge,MAAA,WACA,OAAAnU,EAAA4T,OAAA6/B,SAQA,IAAAC,EAAAxvC,WAEA,SAAAyvC,KAaA,SAAAhgC,EAAApB,GACA,KAAA5f,gBAAAghB,GACA,MAAA,IAAAigC,UAAA,wCACA,GAAA,mBAAArhC,EAAA,MAAA,IAAAqhC,UAAA,kBAEAjhD,KAAAkhD,OAAA,EAEAlhD,KAAAmhD,UAAA,EAEAnhD,KAAA2lB,YAAArf,EAEAtG,KAAAohD,WAAA,GAEAC,EAAAzhC,EAAA5f,MAGA,SAAAo3B,EAAA1D,EAAA4tB,GACA,KAAA,IAAA5tB,EAAAwtB,QACAxtB,EAAAA,EAAA/N,OAEA,IAAA+N,EAAAwtB,QAIAxtB,EAAAytB,UAAA,EACAngC,EAAAugC,cAAA,WACA,IAAAC,EAAA,IAAA9tB,EAAAwtB,OAAAI,EAAAG,YAAAH,EAAAI,WACA,GAAA,OAAAF,EAAA,CAIA,IAAA9xC,EACA,IACAA,EAAA8xC,EAAA9tB,EAAA/N,QACA,MAAA5a,GAEA,YADAkW,EAAAqgC,EAAAvoB,QAAAhuB,GAGAuC,EAAAg0C,EAAAvoB,QAAArpB,QAVA,IAAAgkB,EAAAwtB,OAAA5zC,EAAA2T,GAAAqgC,EAAAvoB,QAAArF,EAAA/N,YAPA+N,EAAA0tB,WAAAl/C,KAAAo/C,GAqBA,SAAAh0C,EAAAomB,EAAAiuB,GACA,IAEA,GAAAA,IAAAjuB,EACA,MAAA,IAAAutB,UAAA,6CACA,GACAU,IACA,iBAAAA,GAAA,mBAAAA,GACA,CACA,IAAAngC,EAAAmgC,EAAAngC,KACA,GAAAmgC,aAAA3gC,EAIA,OAHA0S,EAAAwtB,OAAA,EACAxtB,EAAA/N,OAAAg8B,OACAC,EAAAluB;CAEA,GAAA,mBAAAlS,EAEA,YADA6/B,GApEAzhC,EAoEA4B,EApEAqgC,EAoEAF,EAnEA,WACA/hC,EAAA3R,MAAA4zC,EAAA9xC,aAkEA2jB,GAIAA,EAAAwtB,OAAA,EACAxtB,EAAA/N,OAAAg8B,EACAC,EAAAluB,GACA,MAAA3oB,GACAkW,EAAAyS,EAAA3oB,GA5EA,IAAA6U,EAAAiiC,EAgFA,SAAA5gC,EAAAyS,EAAAiuB,GACAjuB,EAAAwtB,OAAA,EACAxtB,EAAA/N,OAAAg8B,EACAC,EAAAluB,GAGA,SAAAkuB,EAAAluB,GACA,IAAAA,EAAAwtB,QAAA,IAAAxtB,EAAA0tB,WAAAthD,QACAkhB,EAAAugC,cAAA,WACA7tB,EAAAytB,UACAngC,EAAA8gC,sBAAApuB,EAAA/N,WAKA,IAAA,IAAA/lB,EAAA,EAAAC,EAAA6zB,EAAA0tB,WAAAthD,OAAAF,EAAAC,EAAAD,IACAw3B,EAAA1D,EAAAA,EAAA0tB,WAAAxhD,IAEA8zB,EAAA0tB,WAAA,KAMA,SAAAW,EAAAN,EAAAC,EAAA3oB,GACA/4B,KAAAyhD,YAAA,mBAAAA,EAAAA,EAAA,KACAzhD,KAAA0hD,WAAA,mBAAAA,EAAAA,EAAA,KACA1hD,KAAA+4B,QAAAA,EASA,SAAAsoB,EAAAzhC,EAAA8T,GACA,IAAAtF,GAAA,EACA,IACAxO,GACA,SAAA7b,GACAqqB,IACAA,GAAA,EACA9gB,EAAAomB,EAAA3vB,OAEA,SAAA+8C,GACA1yB,IACAA,GAAA,EACAnN,EAAAyS,EAAAotB,OAGA,MAAAkB,GACA,GAAA5zB,EAAA,OACAA,GAAA,EACAnN,EAAAyS,EAAAsuB,IAIAhhC,EAAArgB,UAAA,MAAA,SAAA+gD,GACA,OAAA1hD,KAAAwhB,KAAA,KAAAkgC,IAGA1gC,EAAArgB,UAAA6gB,KAAA,SAAAigC,EAAAC,GAEA,IAAAO,EAAA,IAAAjiD,KAAAqN,YAAA2zC,GAGA,OADA5pB,EAAAp3B,KAAA,IAAA+hD,EAAAN,EAAAC,EAAAO,IACAA,GAGAjhC,EAAArgB,UAAA,QAAAkgD,EAEA7/B,EAAA8a,IAAA,SAAA/b,GACA,OAAA,IAAAiB,GAAA,SAAA1T,EAAA2T,GACA,IAAAlB,QAAA,IAAAA,EAAAjgB,OACA,MAAA,IAAAmhD,UAAA,gCACA,IAAAlzC,EAAAlK,MAAAlD,UAAAiM,MAAAqD,KAAA8P,GACA,GAAA,IAAAhS,EAAAjO,OAAA,OAAAwN,EAAA,IACA,IAAA40C,EAAAn0C,EAAAjO;CAEA,SAAA61B,EAAA/1B,EAAA2lB,GACA,IACA,GAAAA,IAAA,iBAAAA,GAAA,mBAAAA,GAAA,CACA,IAAA/D,EAAA+D,EAAA/D,KACA,GAAA,mBAAAA,EAQA,YAPAA,EAAAvR,KACAsV,GACA,SAAAA,GACAoQ,EAAA/1B,EAAA2lB,KAEAtE,GAKAlT,EAAAnO,GAAA2lB,EACA,KAAA28B,GACA50C,EAAAS,GAEA,MAAAi0C,GACA/gC,EAAA+gC,IAIA,IAAA,IAAApiD,EAAA,EAAAA,EAAAmO,EAAAjO,OAAAF,IACA+1B,EAAA/1B,EAAAmO,EAAAnO,QAKAohB,EAAA1T,QAAA,SAAAvJ,GACA,OAAAA,GAAA,iBAAAA,GAAAA,EAAAsJ,cAAA2T,EACAjd,EAGA,IAAAid,GAAA,SAAA1T,GACAA,EAAAvJ,OAIAid,EAAAC,OAAA,SAAAld,GACA,OAAA,IAAAid,GAAA,SAAA1T,EAAA2T,GACAA,EAAAld,OAIAid,EAAAmhC,KAAA,SAAAC,GACA,OAAA,IAAAphC,GAAA,SAAA1T,EAAA2T,GACA,IAAA,IAAArhB,EAAA,EAAAC,EAAAuiD,EAAAtiD,OAAAF,EAAAC,EAAAD,IACAwiD,EAAAxiD,GAAA4hB,KAAAlU,EAAA2T,OAMAD,EAAAugC,aACA,mBAAA3hB,cACA,SAAAhgB,GACAggB,aAAAhgB,KAEA,SAAAA,GACAmhC,EAAAnhC,EAAA,IAGAoB,EAAA8gC,sBAAA,SAAAp9C,GACA,oBAAAiB,SAAAA,SACAA,QAAAyM,KAAA,wCAAA1N,IAKA,IAAA29C,EAAA,WAIA,GAAA,oBAAA3uB,KACA,OAAAA,KAEA,GAAA,oBAAA4uB,OACA,OAAAA,OAEA,GAAA,oBAAApiD,OACA,OAAAA,OAEA,MAAA,IAAAyE,MAAA,kCAbA,GAgBA,YAAA09C,EAEAA,EAAArhC,QAAArgB,UAAA,UACA0hD,EAAArhC,QAAArgB,UAAA,QAAAkgD,GAFAwB,EAAA,QAAArhC;AAxRA,iBAAA/f,SAAA,oBAAAD,OAAAg1B,IACA,mBAAA12B,GAAAA,EAAA0Q,IAAA1Q,EAAA,wDAAA02B,GACAA,kGkBCA,SAAYusB,GAIXA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,QAAA,GAAA,UAND,CAAYthD,EAAAshD,uBAAAthD,EAAAshD,qBAAoB,KAShC,SAAYC,GAKXA,EAAAA,EAAA,eAAA,GAAA,iBAIAA,EAAAA,EAAA,gBAAA,GAAA,kBATD,CAAYvhD,EAAAuhD,+BAAAvhD,EAAAuhD,6BAA4B,KAYxC,SAAYC,GACXA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,QAAA,IAAA;AACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,QAAA,IAAA,UA1BD,CAAYxhD,EAAAwhD,qBAAAxhD,EAAAwhD,mBAAkB,KA6B9B,SAAYC,GACXA,EAAAA,EAAA,WAAA,GAAA,aADD,CAAYzhD,EAAAyhD,oBAAAzhD,EAAAyhD,kBAAiB,KAO7B,SAAYC,GACXA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,gCAAA,GAAA,kCAHD,CAAY1hD,EAAA0hD,wBAAA1hD,EAAA0hD,sBAAqB,KASjC,SAAYC,GAIXA,EAAAA,EAAA,MAAA,GAAA,QAIAA,EAAAA,EAAA,MAAA,GAAA,QAIAA,EAAAA,EAAA,MAAA,GAAA,QAZD,CAAY3hD,EAAA2hD,kCAAA3hD,EAAA2hD,gCAA+B,KAkB3C,SAAYC,GAIXA,EAAAA,EAAA,OAAA,GAAA,SAIAA,EAAAA,EAAA,aAAA,GAAA,eAIAA,EAAAA,EAAA,mBAAA,GAAA,qBAIAA,EAAAA,EAAA,SAAA,GAAA,WAIAA,EAAAA,EAAA,MAAA,GAAA,QAIAA,EAAAA,EAAA,KAAA,GAAA,OAIAA,EAAAA,EAAA,KAAA,GAAA,OA5BD,CAAY5hD,EAAA4hD,qBAAA5hD,EAAA4hD,mBAAkB,KAkC9B,SAAYC,GAIXA,EAAAA,EAAA,GAAA,GAAA,KAIAA,EAAAA,EAAA,KAAA,GAAA;CARD,CAAY7hD,EAAA6hD,mBAAA7hD,EAAA6hD,iBAAgB,KAc5B,SAAYC,GAIXA,EAAAA,EAAA,KAAA,GAAA,OAIAA,EAAAA,EAAA,KAAA,GAAA,OAIAA,EAAAA,EAAA,MAAA,GAAA,QAZD,CAAY9hD,EAAA8hD,wBAAA9hD,EAAA8hD,sBAAqB,KAkBjC,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,KAAA,GAAA,OALD,CAAY/hD,EAAA+hD,2BAAA/hD,EAAA+hD,yBAAwB,KAQpC,SAAYC,GACXA,EAAAA,EAAA,kCAAA,GAAA,oCACAA,EAAAA,EAAA,wBAAA,GAAA,0BACAA,EAAAA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,oBAAA,GAAA,sBACAA,EAAAA,EAAA,oBAAA,GAAA,sBACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,YAAA,IAAA;AACAA,EAAAA,EAAA,2BAAA,IAAA,6BACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,2BAAA,IAAA,6BACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,uBAAA,IAAA,yBACAA,EAAAA,EAAA,4BAAA,IAAA,8BACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,8BAAA,IAAA,gCACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,wBAAA,IAAA,0BACAA,EAAAA,EAAA,qBAAA,IAAA,uBACAA,EAAAA,EAAA,sBAAA,IAAA,wBACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,qBAAA,IAAA,uBACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,cAAA,IAAA;AACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,0BAAA,IAAA,4BACAA,EAAAA,EAAA,2BAAA,IAAA,6BACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,qBAAA,IAAA,uBACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,4BAAA,IAAA,8BACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,4BAAA,IAAA,8BACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,qBAAA,IAAA,uBACAA,EAAAA,EAAA,oBAAA,IAAA;AACAA,EAAAA,EAAA,mBAAA,IAAA,qBACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,sBAAA,IAAA,wBACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,wBAAA,IAAA,0BACAA,EAAAA,EAAA,mBAAA,IAAA,qBACAA,EAAAA,EAAA,mBAAA,IAAA,qBACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,6BAAA,IAAA,+BACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,uBAAA,IAAA,yBACAA,EAAAA,EAAA,qBAAA,IAAA,uBACAA,EAAAA,EAAA,mBAAA,IAAA,qBACAA,EAAAA,EAAA,mBAAA,IAAA,qBACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,oBAAA,IAAA,sBACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,mBAAA,IAAA;AACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,uBAAA,IAAA,yBACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,kBAAA,IAAA,oBACAA,EAAAA,EAAA,2BAAA,IAAA,6BACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,6BAAA,IAAA,+BACAA,EAAAA,EAAA,8BAAA,IAAA,gCACAA,EAAAA,EAAA,iCAAA,IAAA,mCACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,aAAA,KAAA,eAzGD,CAAYhiD,EAAAgiD,eAAAhiD,EAAAgiD,aAAY;AA+GxB,SAAYC,GAIXA,EAAAA,EAAA,YAAA,GAAA,cAIAA,EAAAA,EAAA,GAAA,GAAA,KAIAA,EAAAA,EAAA,KAAA,GAAA,OAZD,CAAYjiD,EAAAiiD,sBAAAjiD,EAAAiiD,oBAAmB,KAkB/B,SAAYC,GAIXA,EAAAA,EAAA,GAAA,GAAA,KAIAA,EAAAA,EAAA,KAAA,GAAA,OARD,CAAYliD,EAAAkiD,oBAAAliD,EAAAkiD,kBAAiB,KAc7B,SAAYC,GAIXA,EAAAA,EAAA,KAAA,GAAA,OAIAA,EAAAA,EAAA,OAAA,GAAA,SAMAA,EAAAA,EAAA,cAAA,GAAA,gBAIAA,EAAAA,EAAA,QAAA,GAAA,UAlBD,CAAYniD,EAAAmiD,eAAAniD,EAAAmiD,aAAY,KA0BxB,SAAYC,GAIXA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA;AACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,GAAA,IAAA,KACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA;AACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,WAAA,IAAA,aAKAA,EAAAA,EAAA,aAAA,IAAA,eAKAA,EAAAA,EAAA,SAAA,IAAA,WAKAA,EAAAA,EAAA,SAAA,IAAA,WAKAA,EAAAA,EAAA,SAAA,IAAA,WAKAA,EAAAA,EAAA,OAAA,IAAA,SAKAA,EAAAA,EAAA,SAAA,IAAA,WAKAA,EAAAA,EAAA,YAAA,IAAA,cAKAA,EAAAA,EAAA,uBAAA,IAAA,yBAKAA,EAAAA,EAAA,aAAA,IAAA,eAKAA,EAAAA,EAAA,wBAAA,IAAA,0BAKAA,EAAAA,EAAA,SAAA,IAAA,WAIAA,EAAAA,EAAA,MAAA,IAAA,QAIAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,SAAA,KAAA,WACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,iBAAA,KAAA,mBACAA,EAAAA,EAAA,gBAAA,KAAA,kBACAA,EAAAA,EAAA,eAAA,KAAA;AACAA,EAAAA,EAAA,cAAA,KAAA,gBAIAA,EAAAA,EAAA,mBAAA,KAAA,qBACAA,EAAAA,EAAA,QAAA,KAAA,UACAA,EAAAA,EAAA,QAAA,KAAA,UAKAA,EAAAA,EAAA,UAAA,KAAA,YA7KD,CAAYpiD,EAAAoiD,UAAApiD,EAAAoiD,QAAO,KAgLnB,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QAJD,CAAYriD,EAAAqiD,iBAAAriD,EAAAqiD,eAAc,KAO1B,SAAYC,GACXA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,WAAA,GAAA,aAFD,CAAYtiD,EAAAsiD,YAAAtiD,EAAAsiD,UAAS,KAQrB,SAAYC,GACXA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,OAAA,GAAA,SAFD,CAAYviD,EAAAuiD,kBAAAviD,EAAAuiD,gBAAe,KAQ3B,SAAYC,GAIXA,EAAAA,EAAA,QAAA,GAAA,UAIAA,EAAAA,EAAA,SAAA,GAAA,WAIAA,EAAAA,EAAA,oBAAA,GAAA,sBAIAA,EAAAA,EAAA,oBAAA,GAAA,sBAIAA,EAAAA,EAAA,wBAAA,GAAA,0BAIAA,EAAAA,EAAA,iBAAA,GAAA,mBAIAA,EAAAA,EAAA,aAAA,GAAA,eAIAA,EAAAA,EAAA,cAAA,GAAA,gBAIAA,EAAAA,EAAA,kBAAA,GAAA,oBAIAA,EAAAA,EAAA,eAAA,GAAA,iBAIAA,EAAAA,EAAA,eAAA,IAAA;AAIAA,EAAAA,EAAA,UAAA,IAAA,YAIAA,EAAAA,EAAA,eAAA,IAAA,iBAIAA,EAAAA,EAAA,eAAA,IAAA,iBAxDD,CAAYxiD,EAAAwiD,kBAAAxiD,EAAAwiD,gBAAe,KA8D3B,SAAYC,GAIXA,EAAAA,EAAA,iBAAA,GAAA,mBAIAA,EAAAA,EAAA,oBAAA,GAAA,sBAIAA,EAAAA,EAAA,WAAA,GAAA,aAZD,CAAYziD,EAAAyiD,kCAAAziD,EAAAyiD,gCAA+B,KAkB3C,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,KAAA,GAAA,OAJD,CAAY1iD,EAAA0iD,oBAAA1iD,EAAA0iD,kBAAiB,KAO7B,SAAYC,GACXA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,GAAA,GAAA,KACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,OAAA,GAAA,SALD,CAAY3iD,EAAA2iD,wBAAA3iD,EAAA2iD,sBAAqB,KAQjC,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,SAHD,CAAY5iD,EAAA4iD,gBAAA5iD,EAAA4iD,cAAa,KAMzB,SAAYC,GACXA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,UAAA,GAAA,YAFD,CAAY7iD,EAAA6iD,aAAA7iD,EAAA6iD,WAAU,KAKtB,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA;CAHD,CAAY9iD,EAAA8iD,sBAAA9iD,EAAA8iD,oBAAmB,KAS/B,SAAYC,GAIXA,EAAAA,EAAA,IAAA,GAAA,MAIAA,EAAAA,EAAA,IAAA,GAAA,MARD,CAAY/iD,EAAA+iD,qBAAA/iD,EAAA+iD,mBAAkB,KAW9B,SAAYC,GACXA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,cAAA,GAAA,gBAHD,CAAYhjD,EAAAgjD,2BAAAhjD,EAAAgjD,yBAAwB,KASpC,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,QAAA,IAAA,UACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,IAAA,IAAA,MACAA,EAAAA,EAAA,KAAA,IAAA,OACAA,EAAAA,EAAA,WAAA,IAAA,aACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,SAAA,IAAA,WACAA,EAAAA,EAAA,cAAA,IAAA;CA1BD,CAAYjjD,EAAAijD,aAAAjjD,EAAAijD,WAAU,KA6BtB,SAAYC,GACXA,EAAAA,EAAA,WAAA,GAAA,aADD,CAAYljD,EAAAkjD,YAAAljD,EAAAkjD,UAAS,KAOrB,SAAYC,GAIXA,EAAAA,EAAA,OAAA,GAAA,SAIAA,EAAAA,EAAA,MAAA,GAAA,QAIAA,EAAAA,EAAA,OAAA,GAAA,SAIAA,EAAAA,EAAA,MAAA,GAAA,QAIAA,EAAAA,EAAA,OAAA,GAAA,SAIAA,EAAAA,EAAA,MAAA,GAAA,QAxBD,CAAYnjD,EAAAmjD,gCAAAnjD,EAAAmjD,8BAA6B,KA8BzC,SAAYC,GAIXA,EAAAA,EAAA,KAAA,GAAA,OAIAA,EAAAA,EAAA,MAAA,GAAA,QAIAA,EAAAA,EAAA,UAAA,GAAA,YAIAA,EAAAA,EAAA,SAAA,GAAA,WAIAA,EAAAA,EAAA,aAAA,GAAA,eAIAA,EAAAA,EAAA,cAAA,GAAA,gBAxBD,CAAYpjD,EAAAojD,wBAAApjD,EAAAojD,sBAAqB,KA+BjC,SAAYC,GACXA,EAAAA,EAAA,6BAAA,GAAA,+BACAA,EAAAA,EAAA,4BAAA,GAAA,8BACAA,EAAAA,EAAA,0BAAA,GAAA,4BACAA,EAAAA,EAAA,yBAAA,GAAA,2BAJD,CAAYrjD,EAAAqjD,yBAAArjD,EAAAqjD,uBAAsB,KAUlC,SAAYC,GAIXA,EAAAA,EAAA,KAAA,GAAA,OAIAA,EAAAA,EAAA,KAAA,GAAA,OAIAA,EAAAA,EAAA,OAAA,GAAA,SAIAA,EAAAA,EAAA,WAAA,GAAA;CAhBD,CAAYtjD,EAAAsjD,iBAAAtjD,EAAAsjD,eAAc,oJCxvB1B,IAAAC,EAAA,WAAA,SAAAA,KASA,OAHeA,EAAAC,MAAd,SAAoBjzB,EAAmBC,GACtC,OAAOizB,EAAAnzB,SAASC,EAAWC,IANL+yB,EAAAG,QAAO,KACPH,EAAAI,MAAK,KACLJ,EAAAK,IAAG,IACHL,EAAAM,QAAO,IAK/BN,EATA,GAAavjD,EAAAujD,OAAAA,EAWbvjD,EAAA8jD,oBAAA,WACC,MAAO,CACNC,YAAQ1+C,EACR2+C,eAAW3+C,EACXk3B,wBAAyB0nB,EAAA1nB,wBACzB7G,QAASiE,EAAAjE,QACT0sB,QAAS8B,EAAgB9B,QACzBmB,OAAQA,EACR5R,SAAUmC,EAAAnC,SACVc,MAAOsD,EAAAtD,MACPuC,UAAgBmP,EAAAnP,UAChB+N,mBAAoBmB,EAAgBnB,mBACpCV,eAAgB6B,EAAgB7B,eAChCC,UAAW4B,EAAgB5B,UAC3B8B,IAAUC,EAAAnZ,IACV8K,MAAOsO,EAAAtO,6GCnCT,IAAAuO,EAMC,SAAY3iC,EAAe4iC,GAC1BzlD,KAAK6iB,MAAQA,EACb7iB,KAAKylD,UAAYA,GARNxkD,EAAAukD,uBAAAA,EAYb,IAAAE,EAAA,WAiBC,SAAAA,EAAYtD,GACXpiD,KAAKoiD,OAASA,EACdpiD,KAAK2lD,UAAY,IAAI9Z,YAAYuW,EAAOtiD,QACxCE,KAAK4lD,oBAAsB,IAAI5/B,WAAW,GAC1ChmB,KAAK4lD,oBAAoB,IAAM;AAoJjC,OAjJQF,EAAA/kD,UAAAklD,SAAP,WACC,OAAO7lD,KAAKoiD,OAAOtiD,QAGb4lD,EAAA/kD,UAAAmlD,aAAP,SAAoBliC,EAAqBkiC,GACxCliC,EAAcyuB,EAAA5G,SAAS7nB,GACvB,IAAMmiC,EAAY/lD,KAAKoiD,OACjB4D,EAAehmD,KAAK2lD,UACpBM,EAAkBH,EAAahmD,OAErC,OAAwB,IAApBmmD,IAIJjmD,KAAKoiD,OAAS,IAAIvW,YAAYka,EAAUjmD,OAASmmD,GACjDjmD,KAAKoiD,OAAO7tC,IAAIwxC,EAAUG,SAAS,EAAGtiC,GAAc,GACpD5jB,KAAKoiD,OAAO7tC,IAAIwxC,EAAUG,SAAStiC,GAAcA,EAAcqiC,GAC/DjmD,KAAKoiD,OAAO7tC,IAAIuxC,EAAcliC,GAE1BA,EAAc,EAAI5jB,KAAK4lD,oBAAoB,KAC9C5lD,KAAK4lD,oBAAoB,GAAKhiC,EAAc,GAG7C5jB,KAAK2lD,UAAY,IAAI9Z,YAAY7rC,KAAKoiD,OAAOtiD,QACzCE,KAAK4lD,oBAAoB,IAAM,GAClC5lD,KAAK2lD,UAAUpxC,IAAIyxC,EAAaE,SAAS,EAAGlmD,KAAK4lD,oBAAoB,GAAK,KAEpE,IAGDF,EAAA/kD,UAAAwlD,YAAP,SAAmBtjC,EAAe9e,GAIjC,OAHA8e,EAAQwvB,EAAA5G,SAAS5oB,GACjB9e,EAAQsuC,EAAA5G,SAAS1nC,GAEb/D,KAAKoiD,OAAOv/B,KAAW9e,IAG3B/D,KAAKoiD,OAAOv/B,GAAS9e,EACjB8e,EAAQ,EAAI7iB,KAAK4lD,oBAAoB,KACxC5lD,KAAK4lD,oBAAoB,GAAK/iC,EAAQ,IAEhC,IAGD6iC,EAAA/kD,UAAAylD,aAAP,SAAoBnhB,EAAoBohB,GACvCphB,EAAaoN,EAAA5G,SAASxG,GACtBohB,EAAMhU,EAAA5G,SAAS4a,GAEf,IAAMN,EAAY/lD,KAAKoiD,OACjB4D,EAAehmD,KAAK2lD,UAE1B,GAAI1gB,GAAc8gB,EAAUjmD,OAC3B,OAAO,EAGR,IAAIwmD,EAASP,EAAUjmD,OAASmlC,EAKhC,OAJIohB,GAAOC,IACVD,EAAMC,GAGK,IAARD,IAIJrmD,KAAKoiD,OAAS,IAAIvW,YAAYka,EAAUjmD,OAASumD,GACjDrmD,KAAKoiD,OAAO7tC,IAAIwxC,EAAUG,SAAS,EAAGjhB,GAAa,GACnDjlC,KAAKoiD,OAAO7tC,IAAIwxC,EAAUG,SAASjhB,EAAaohB,GAAMphB;AAEtDjlC,KAAK2lD,UAAY,IAAI9Z,YAAY7rC,KAAKoiD,OAAOtiD,QACzCmlC,EAAa,EAAIjlC,KAAK4lD,oBAAoB,KAC7C5lD,KAAK4lD,oBAAoB,GAAK3gB,EAAa,GAExCjlC,KAAK4lD,oBAAoB,IAAM,GAClC5lD,KAAK2lD,UAAUpxC,IAAIyxC,EAAaE,SAAS,EAAGlmD,KAAK4lD,oBAAoB,GAAK,KAEpE,IAGDF,EAAA/kD,UAAA4lD,cAAP,WACC,OAA2B,IAAvBvmD,KAAKoiD,OAAOtiD,OACR,EAEDE,KAAKwmD,qBAAqBxmD,KAAKoiD,OAAOtiD,OAAS,IAGhD4lD,EAAA/kD,UAAA8lD,oBAAP,SAA2B5jC,GAC1B,OAAIA,EAAQ,EACJ,GAGRA,EAAQwvB,EAAA5G,SAAS5oB,GACV7iB,KAAKwmD,qBAAqB3jC,KAG1B6iC,EAAA/kD,UAAA6lD,qBAAR,SAA6B3jC,GAC5B,GAAIA,GAAS7iB,KAAK4lD,oBAAoB,GACrC,OAAO5lD,KAAK2lD,UAAU9iC,GAGvB,IAAIoiB,EAAajlC,KAAK4lD,oBAAoB,GAAK,EAC5B,IAAf3gB,IACHjlC,KAAK2lD,UAAU,GAAK3lD,KAAKoiD,OAAO,GAChCnd,KAGGpiB,GAAS7iB,KAAKoiD,OAAOtiD,SACxB+iB,EAAQ7iB,KAAKoiD,OAAOtiD,OAAS,GAG9B,IAAK,IAAIF,EAAIqlC,EAAYrlC,GAAKijB,EAAOjjB,IACpCI,KAAK2lD,UAAU/lD,GAAKI,KAAK2lD,UAAU/lD,EAAI,GAAKI,KAAKoiD,OAAOxiD,GAGzD,OADAI,KAAK4lD,oBAAoB,GAAKn+C,KAAKC,IAAI1H,KAAK4lD,oBAAoB,GAAI/iC,GAC7D7iB,KAAK2lD,UAAU9iC,IAGhB6iC,EAAA/kD,UAAA+lD,WAAP,SAAkBC,GACjBA,EAAmBl/C,KAAKwW,MAAM0oC,GAG9B3mD,KAAKumD,gBAQL,IANA,IAAIzoC,EAAM,EACNC,EAAO/d,KAAKoiD,OAAOtiD,OAAS,EAC5Bke,EAAM,EACN4oC,EAAU,EACVC,EAAW,EAER/oC,GAAOC,GAMb,GALAC,EAAMF,GAAQC,EAAOD,GAAO,EAAK;AAK7B6oC,GAFJE,GADAD,EAAU5mD,KAAK2lD,UAAU3nC,IACJhe,KAAKoiD,OAAOpkC,IAGhCD,EAAOC,EAAM,MACP,CAAA,KAAI2oC,GAAoBC,GAG9B,MAFA9oC,EAAME,EAAM,EAMd,OAAO,IAAIwnC,EAAuBxnC,EAAK2oC,EAAmBE,IAE5DnB,EAzKA,GAAazkD,EAAAykD,kBAAAA,EA2Kb,IAAAoB,EAAA,WAMC,SAAAA,EAAY1E,GAHJpiD,KAAA+mD,4BAAsC,EACtC/mD,KAAA6N,OAA0C,KAGjD7N,KAAK2yC,QAAU,IAAI+S,EAAkBtD,GACrCpiD,KAAKgnD,aA4DP,OAzDSF,EAAAnmD,UAAAqmD,WAAR,WACChnD,KAAK+mD,4BAA8B,EACnC/mD,KAAK6N,OAAS,MAGRi5C,EAAAnmD,UAAAmlD,aAAP,SAAoBliC,EAAqBkiC,GACpC9lD,KAAK2yC,QAAQmT,aAAaliC,EAAakiC,IAC1C9lD,KAAKgnD,cAIAF,EAAAnmD,UAAAwlD,YAAP,SAAmBtjC,EAAe9e,GAC7B/D,KAAK2yC,QAAQwT,YAAYtjC,EAAO9e,IACnC/D,KAAKgnD,cAIAF,EAAAnmD,UAAAylD,aAAP,SAAoBnhB,EAAoBohB,GACnCrmD,KAAK2yC,QAAQyT,aAAanhB,EAAYohB,IACzCrmD,KAAKgnD,cAIAF,EAAAnmD,UAAA4lD,cAAP,WACC,OAAOvmD,KAAK2yC,QAAQ4T,iBAGdO,EAAAnmD,UAAA8lD,oBAAP,SAA2B5jC,GAC1B,OAAO7iB,KAAK2yC,QAAQ8T,oBAAoB5jC,IAGlCikC,EAAAnmD,UAAA+lD,WAAP,SAAkBC,GAGjB,GAFAA,EAAmBl/C,KAAKwW,MAAM0oC,GAEV,OAAhB3mD,KAAK6N,OAAiB,CACzB,IAAIo5C,EAAaN,EAAmB3mD,KAAK+mD,4BACzC,GAAIE,GAAc,GAAKA,EAAajnD,KAAK6N,OAAO/N,OAE/C,OAAOE,KAAK6N,OAAOo5C,GAKrB,OAAOjnD,KAAK2yC,QAAQ+T,WAAWC,IAMzBG,EAAAnmD,UAAAumD,YAAP,SAAmBC,EAA+BC;AAEjD,IADA,IAAIC,EAAqC,GAChCV,EAAmBQ,EAAuBR,GAAoBS,EAAqBT,IAC3FU,EAASV,EAAmBQ,GAAyBnnD,KAAK0mD,WAAWC,GAEtE3mD,KAAK6N,OAASw5C,EACdrnD,KAAK+mD,4BAA8BI,GAErCL,EApEA,GAAa7lD,EAAA6lD,2BAAAA,4GCpKb,IAAAQ,EAAA,WAQC,SAAAA,EAAY5kD,EAAUg1C,EAAiB6P,EAAaC,GACnDxnD,KAAKynD,KAAO/kD,EACZ1C,KAAK0nD,OAAShQ,EACd13C,KAAK2nD,KAAOJ,EACZvnD,KAAK4nD,WAAaJ,EAClBxnD,KAAK6nD,YAAc,KAwHrB,OArHCP,EAAA3mD,UAAAwyB,QAAA,WACCnzB,KAAK0nD,OAAO5nD,OAAS,GAGtBW,OAAAC,eAAI4mD,EAAA3mD,UAAA,UAAO,KAAX,WACC,OAAOX,KAAK4nD,4CAGbN,EAAA3mD,UAAAmnD,QAAA,WACC,OAAO9nD,KAAK0nD,OAAO92C,KAAK5Q,KAAK2nD,OAG9BL,EAAA3mD,UAAAonD,SAAA,SAASh9C,GACJA,EAAEw8C,KAAOx8C,EAAEw8C,MAAQvnD,KAAK2nD,OAC3B3nD,KAAK2nD,KAAO58C,EAAEw8C,IACdvnD,KAAK6nD,YAAc,MAKpB,IADA,IACqB7/C,EAAA,EAAAggD,EADLj9C,EAAEwb,QACGve,EAAAggD,EAAAloD,OAAAkI,IAAS,CAAzB,IAAM8kB,EAAMk7B,EAAAhgD,GAChBhI,KAAKioD,mBAAmBn7B,EAAO7J,OAC/BjjB,KAAKkoD,kBAAkB,IAAInT,EAAAnC,SAAS9lB,EAAO7J,MAAM0wB,gBAAiB7mB,EAAO7J,MAAM2wB,aAAc9mB,EAAOsa,MAGrGpnC,KAAK4nD,WAAa78C,EAAEy8C,WAGXF,EAAA3mD,UAAAwnD,kBAAV,WACC,IAAKnoD,KAAK6nD,YAAa;AAItB,IAHA,IAAMO,EAAYpoD,KAAK2nD,KAAK7nD,OACtBuoD,EAAcroD,KAAK0nD,OAAO5nD,OAC1BwoD,EAAkB,IAAIzc,YAAYwc,GAC/BzoD,EAAI,EAAGA,EAAIyoD,EAAazoD,IAChC0oD,EAAgB1oD,GAAKI,KAAK0nD,OAAO9nD,GAAGE,OAASsoD,EAE9CpoD,KAAK6nD,YAAc,IAAIU,EAAA7C,kBAAkB4C,KAOnChB,EAAA3mD,UAAA6nD,aAAR,SAAqBC,EAAmB9G,GACvC3hD,KAAK0nD,OAAOe,GAAa9G,EACrB3hD,KAAK6nD,aAER7nD,KAAK6nD,YAAY1B,YAAYsC,EAAWzoD,KAAK0nD,OAAOe,GAAW3oD,OAASE,KAAK2nD,KAAK7nD,SAI5EwnD,EAAA3mD,UAAAsnD,mBAAR,SAA2BhlC,GAE1B,GAAIA,EAAM0wB,kBAAoB1wB,EAAM4wB,cAcpC7zC,KAAKwoD,aAAavlC,EAAM0wB,gBAAkB,EACzC3zC,KAAK0nD,OAAOzkC,EAAM0wB,gBAAkB,GAAG/rC,UAAU,EAAGqb,EAAM2wB,YAAc,GACtE5zC,KAAK0nD,OAAOzkC,EAAM4wB,cAAgB,GAAGjsC,UAAUqb,EAAM6wB,UAAY,IAIpE9zC,KAAK0nD,OAAOrrC,OAAO4G,EAAM0wB,gBAAiB1wB,EAAM4wB,cAAgB5wB,EAAM0wB,iBAClE3zC,KAAK6nD,aAER7nD,KAAK6nD,YAAYzB,aAAanjC,EAAM0wB,gBAAiB1wB,EAAM4wB,cAAgB5wB,EAAM0wB,qBAvBlF,CACC,GAAI1wB,EAAM2wB,cAAgB3wB,EAAM6wB,UAE/B,OAGD9zC,KAAKwoD,aAAavlC,EAAM0wB,gBAAkB,EACzC3zC,KAAK0nD,OAAOzkC,EAAM0wB,gBAAkB,GAAG/rC,UAAU,EAAGqb,EAAM2wB,YAAc,GACtE5zC,KAAK0nD,OAAOzkC,EAAM0wB,gBAAkB,GAAG/rC,UAAUqb,EAAM6wB,UAAY,MAmBhEwT,EAAA3mD,UAAAunD,kBAAR,SAA0BjmC,EAAoBymC,GAC7C,GAA0B,IAAtBA,EAAW5oD,OAAf,CAIA,IAAI6oD,EAAcD,EAAWl6C,MAAM,cACnC,GAA2B,IAAvBm6C,EAAY7oD,OAAhB;AAWA6oD,EAAYA,EAAY7oD,OAAS,IAAME,KAAK0nD,OAAOzlC,EAAS4wB,WAAa,GAAGjrC,UAAUqa,EAAS6wB,OAAS,GAGxG9yC,KAAKwoD,aAAavmC,EAAS4wB,WAAa,EACvC7yC,KAAK0nD,OAAOzlC,EAAS4wB,WAAa,GAAGjrC,UAAU,EAAGqa,EAAS6wB,OAAS,GAClE6V,EAAY,IAKf,IADA,IAAIC,EAAa,IAAI/c,YAAY8c,EAAY7oD,OAAS,GAC7CF,EAAI,EAAGA,EAAI+oD,EAAY7oD,OAAQF,IACvCI,KAAK0nD,OAAOrrC,OAAO4F,EAAS4wB,WAAajzC,EAAI,EAAG,EAAG+oD,EAAY/oD,IAC/DgpD,EAAWhpD,EAAI,GAAK+oD,EAAY/oD,GAAGE,OAASE,KAAK2nD,KAAK7nD,OAGnDE,KAAK6nD,aAER7nD,KAAK6nD,YAAY/B,aAAa7jC,EAAS4wB,WAAY+V,QA1BnD5oD,KAAKwoD,aAAavmC,EAAS4wB,WAAa,EACvC7yC,KAAK0nD,OAAOzlC,EAAS4wB,WAAa,GAAGjrC,UAAU,EAAGqa,EAAS6wB,OAAS,GAClE6V,EAAY,GACZ3oD,KAAK0nD,OAAOzlC,EAAS4wB,WAAa,GAAGjrC,UAAUqa,EAAS6wB,OAAS,MA0BvEwU,EArIA,GAAarmD,EAAAqmD,gBAAAA,qKCmEb,IAAAuB,EAAA,SAAAprC,GAAA,SAAAorC,mDA8NA,OA9N0BnrC,EAAAmrC,EAAAprC,GAEzBhd,OAAAC,eAAWmoD,EAAAloD,UAAA,MAAG,KAAd,WACC,OAAOX,KAAKynD,sCAGbhnD,OAAAC,eAAWmoD,EAAAloD,UAAA,UAAO,KAAlB,WACC,OAAOX,KAAK4nD;AAGbnnD,OAAAC,eAAWmoD,EAAAloD,UAAA,MAAG,KAAd,WACC,OAAOX,KAAK2nD,sCAGNkB,EAAAloD,UAAAmoD,SAAP,WACC,OAAO9oD,KAAK8nD,WAGNe,EAAAloD,UAAAooD,gBAAP,WACC,OAAO/oD,KAAK0nD,OAAO96C,MAAM,IAGnBi8C,EAAAloD,UAAAq+C,aAAP,WACC,OAAOh/C,KAAK0nD,OAAO5nD,QAGb+oD,EAAAloD,UAAAs+C,eAAP,SAAsBpM,GACrB,OAAO7yC,KAAK0nD,OAAO7U,EAAa,IAG1BgW,EAAAloD,UAAAqoD,kBAAP,SAAyB/mC,EAAqB06B,GAE7C,IAAIsM,EAAaC,EAAArM,cAChB56B,EAAS6wB,OACToW,EAAAxM,0BAA0BC,GAC1B38C,KAAK0nD,OAAOzlC,EAAS4wB,WAAa,GAClC,GAGD,OAAIoW,EACI,IAAIjS,EAAAtD,MAAMzxB,EAAS4wB,WAAYoW,EAAWrV,YAAa3xB,EAAS4wB,WAAYoW,EAAWnV,WAGxF,MAGD+U,EAAAloD,UAAAwoD,qBAAP,SAA4BlnC,EAAqB06B,GAChD,IAAMyM,EAAiBppD,KAAKgpD,kBAAkB/mC,EAAU06B,GACxD,OAAKyM,EAOE,CACNpM,KAAMh9C,KAAK0nD,OAAOzlC,EAAS4wB,WAAa,GAAGjrC,UAAUwhD,EAAexV,YAAc,EAAG3xB,EAAS6wB,OAAS,GACvGc,YAAawV,EAAexV,YAC5BE,UAAW7xB,EAAS6wB,QATb,CACNkK,KAAM,GACNpJ,YAAa3xB,EAAS6wB,OACtBgB,UAAW7xB,EAAS6wB,SAUhB+V,EAAAloD,UAAA0oD,mBAAP,SAA0B1M,GAA1B,IACKp5C,EAEA+lD,EAHLnhD,EAAAnI,KAEK6yC,EAAa,EAEb0W,EAAgB,EAChBC,EAA2B,GAC3Bl7B,EAAO,WAEV,GAAIi7B,EAAgBC,EAAW1pD,OAAQ,CACtC,IAAMiE,EAAQulD,EAAS1hD,UAAU4hD,EAAWD,GAAexqC,MAAOyqC,EAAWD,GAAej6B,KAO5F,OANAi6B,GAAiB,EACZhmD,EAGJA,EAAIQ,MAAQA,EAFZR,EAAM,CAAE6qB,MAAM,EAAOrqB,MAAOA,GAItBR;AAED,OAAIsvC,GAAc1qC,EAAKu/C,OAAO5nD,OAC7Bg2B,EAAA3H,KAGPm7B,EAAWnhD,EAAKu/C,OAAO7U,GACvB2W,EAAarhD,EAAKshD,WAAWH,EAAU3M,GACvC4M,EAAgB,EAChB1W,GAAc,EACPvkB,MAGT,MAAO,CAAEA,KAAIA,IAGPu6B,EAAAloD,UAAA+oD,aAAP,SAAoB7W,EAAoB8J,GAIvC,IAHA,IAAIzwC,EAAUlM,KAAK0nD,OAAO7U,EAAa,GAEnC8W,EAA2B,GACX3hD,EAAA,EAAA4hD,EAFP5pD,KAAKypD,WAAWv9C,EAASywC,GAElB30C,EAAA4hD,EAAA9pD,OAAAkI,IAAQ,CAAvB,IAAMib,EAAK2mC,EAAA5hD,GACf2hD,EAAMznD,KAAK,CACV86C,KAAM9wC,EAAQtE,UAAUqb,EAAMlE,MAAOkE,EAAMqM,KAC3CskB,YAAa3wB,EAAMlE,MAAQ,EAC3B+0B,UAAW7wB,EAAMqM,IAAM,IAGzB,OAAOq6B,GAGAd,EAAAloD,UAAA8oD,WAAR,SAAmBv9C,EAAiBywC,GACnC,IACItsC,EADE1Q,EAAuB,GAK7B,IAFAg9C,EAAej6B,UAAY,GAEpBrS,EAAQssC,EAAenY,KAAKt4B,KACV,IAApBmE,EAAM,GAAGvQ,QAIbH,EAAOuC,KAAK,CAAE6c,MAAO1O,EAAMwS,MAAOyM,IAAKjf,EAAMwS,MAAQxS,EAAM,GAAGvQ,SAE/D,OAAOH,GAGDkpD,EAAAloD,UAAAkpD,gBAAP,SAAuB5mC,GAGtB,IAFAA,EAAQjjB,KAAK8pD,eAAe7mC,IAElB0wB,kBAAoB1wB,EAAM4wB,cACnC,OAAO7zC,KAAK0nD,OAAOzkC,EAAM0wB,gBAAkB,GAAG/rC,UAAUqb,EAAM2wB,YAAc,EAAG3wB,EAAM6wB,UAAY,GAGlG,IAAIiW,EAAa/pD,KAAK2nD,KAClBqC,EAAiB/mC,EAAM0wB,gBAAkB,EACzCsW,EAAehnC,EAAM4wB,cAAgB,EACrCqW,EAAwB,GAE5BA,EAAYhoD,KAAKlC,KAAK0nD,OAAOsC,GAAgBpiD,UAAUqb,EAAM2wB,YAAc,IAC3E,IAAK,IAAIh0C,EAAIoqD,EAAiB,EAAGpqD,EAAIqqD,EAAcrqD,IAClDsqD,EAAYhoD,KAAKlC,KAAK0nD,OAAO9nD,IAI9B,OAFAsqD,EAAYhoD,KAAKlC,KAAK0nD,OAAOuC,GAAcriD,UAAU,EAAGqb,EAAM6wB,UAAY,IAEnEoW,EAAYt5C,KAAKm5C,IAGlBlB,EAAAloD,UAAAwpD,SAAP,SAAgBloC,GAGf,OAFAA,EAAWjiB,KAAKoqD,kBAAkBnoC,GAClCjiB,KAAKmoD;AACEnoD,KAAK6nD,YAAapB,oBAAoBxkC,EAAS4wB,WAAa,IAAM5wB,EAAS6wB,OAAS,IAGrF+V,EAAAloD,UAAA0pD,WAAP,SAAkBxpB,GACjBA,EAASp5B,KAAKwW,MAAM4iB,GACpBA,EAASp5B,KAAKC,IAAI,EAAGm5B,GAErB7gC,KAAKmoD,oBACL,IAAImC,EAAMtqD,KAAK6nD,YAAanB,WAAW7lB,GACnC0pB,EAAavqD,KAAK0nD,OAAO4C,EAAIznC,OAAO/iB,OAGxC,MAAO,CACN+yC,WAAY,EAAIyX,EAAIznC,MACpBiwB,OAAQ,EAAIrrC,KAAK2Z,IAAIkpC,EAAI7E,UAAW8E,KAI9B1B,EAAAloD,UAAAmpD,eAAR,SAAuB7mC,GAEtB,IAAMlE,EAAQ/e,KAAKoqD,kBAAkB,CAAEvX,WAAY5vB,EAAM0wB,gBAAiBb,OAAQ7vB,EAAM2wB,cAClFtkB,EAAMtvB,KAAKoqD,kBAAkB,CAAEvX,WAAY5vB,EAAM4wB,cAAef,OAAQ7vB,EAAM6wB,YAEpF,OAAI/0B,EAAM8zB,aAAe5vB,EAAM0wB,iBAC3B50B,EAAM+zB,SAAW7vB,EAAM2wB,aACvBtkB,EAAIujB,aAAe5vB,EAAM4wB,eACzBvkB,EAAIwjB,SAAW7vB,EAAM6wB,UAEjB,CACNH,gBAAiB50B,EAAM8zB,WACvBe,YAAa70B,EAAM+zB,OACnBe,cAAevkB,EAAIujB,WACnBiB,UAAWxkB,EAAIwjB,QAIV7vB,GAGA4lC,EAAAloD,UAAAypD,kBAAR,SAA0BnoC,GACzB,IAAK8yB,EAAAnC,SAASa,YAAYxxB,GACzB,MAAM,IAAItd,MAAM,gBAEX,IAAAkuC,EAAA5wB,EAAA4wB,WAAYC,EAAA7wB,EAAA6wB,OACd0X,GAAa,EAEjB,GAAI3X,EAAa,EAChBA,EAAa,EACbC,EAAS,EACT0X,GAAa,OAEP,GAAI3X,EAAa7yC,KAAK0nD,OAAO5nD,OACnC+yC,EAAa7yC,KAAK0nD,OAAO5nD,OACzBgzC,EAAS9yC,KAAK0nD,OAAO7U,EAAa,GAAG/yC,OAAS,EAC9C0qD,GAAa,MAEP,CACN,IAAIC,EAAezqD,KAAK0nD,OAAO7U,EAAa,GAAG/yC,OAAS,EACpDgzC,EAAS,GACZA,EAAS,EACT0X,GAAa,GAEL1X,EAAS2X,IACjB3X,EAAS2X,EACTD,GAAa;AAIf,OAAKA,EAGG,CAAE3X,WAAUA,EAAEC,OAAMA,GAFpB7wB,GAKV4mC,EA9NA,CAA0B6B,EAAApD,iBA4O1BqD,EAAA,WAQC,SAAAA,EAAYra,EAAwBsa,GACnC5qD,KAAK6qD,MAAQva,EACbtwC,KAAK8qD,QAAUrqD,OAAOsH,OAAO,MAC7B/H,KAAK+qD,sBAAwBH,EAC7B5qD,KAAKgrD,eAAiB,KAmVxB,OAhVQL,EAAAhqD,UAAAwyB,QAAP,WACCnzB,KAAK8qD,QAAUrqD,OAAOsH,OAAO,OAGpB4iD,EAAAhqD,UAAAsqD,UAAV,SAAoBvoD,GACnB,OAAO1C,KAAK8qD,QAAQpoD,IAGbioD,EAAAhqD,UAAAuqD,WAAR,WAAA,IAAA/iD,EAAAnI,KACK87B,EAAqB,GAEzB,OADAr7B,OAAO0kB,KAAKnlB,KAAK8qD,SAAS1uC,SAAQ,SAAC3Y,GAAQ,OAAAq4B,EAAI55B,KAAKiG,EAAK2iD,QAAQrnD,OAC1Dq4B,GAGD6uB,EAAAhqD,UAAAwqD,eAAP,SAAsBz+C,GACrB1M,KAAK8qD,QAAQp+C,EAAKtJ,KAAO,IAAIylD,EAAYvD,EAAAnZ,IAAI5N,MAAM7xB,EAAKtJ,KAAMsJ,EAAKgrC,MAAOhrC,EAAK0+C,IAAK1+C,EAAK86C,YAGnFmD,EAAAhqD,UAAA0qD,mBAAP,SAA0BC,EAAgBvgD,GACpC/K,KAAK8qD,QAAQQ,IAGNtrD,KAAK8qD,QAAQQ,GACnBvD,SAASh9C,IAGT4/C,EAAAhqD,UAAA4qD,mBAAP,SAA0BD,GACpBtrD,KAAK8qD,QAAQQ,WAGXtrD,KAAK8qD,QAAQQ,IAKRX,EAAAhqD,UAAA42C,YAAb,SAAyBiU,EAAqBC,EAAqBC,EAA+BzQ,wFAGjG,OAFM/0B,EAAWlmB,KAAKirD,UAAUO,GAC1BrlC,EAAWnmB,KAAKirD,UAAUQ,GAC3BvlC,GAAaC,GAIZy0B,EAAgB10B,EAAS6iC,kBACzBlO,EAAgB10B,EAAS4iC,kBACzB4C,EAAe,IAAIC,EAAAjR,aAAaC,EAAeC,EAAe,CACnEV,0BAA0B;AAC1BC,8BAA8B,EAC9BhC,2BAA4BsT,EAC5B5Q,sBAAsB,EACtBG,mBAAoBA,IAGfC,EAAayQ,EAAapU,cAC1BsU,IAAa3Q,EAAW30B,QAAQzmB,OAAS,IAAYE,KAAK8rD,oBAAoB5lC,EAAUC,GAC9F,CAAA,EAAO,CACNiE,UAAW8wB,EAAW9wB,UACtByhC,UAAWA,EACXtlC,QAAS20B,EAAW30B,WAlBpB,CAAA,EAAO,aAsBDokC,EAAAhqD,UAAAmrD,oBAAR,SAA4B5lC,EAAwBC,GACnD,IAAM4lC,EAAoB7lC,EAAS84B,eAEnC,GAAI+M,IADsB5lC,EAAS64B,eAElC,OAAO,EAER,IAAK,IAAIpoC,EAAO,EAAGA,GAAQm1C,EAAmBn1C,IAAQ,CAGrD,GAFqBsP,EAAS+4B,eAAeroC,KACxBuP,EAAS84B,eAAeroC,GAE5C,OAAO,EAGT,OAAO,GAGK+zC,EAAAhqD,UAAAqrD,iBAAb,SAA8BR,EAAqBC,EAAqBC,kFAGvE,OAFIxlC,EAAWlmB,KAAKirD,UAAUO,GAC1BrlC,EAAWnmB,KAAKirD,UAAUQ,GACzBvlC,GAAaC,GAIdy0B,EAAgB10B,EAAS6iC,kBACzBlO,EAAgB10B,EAAS4iC,kBAQ7B,CAAA,EAPmB,IAAI6C,EAAAjR,aAAaC,EAAeC,EAAe,CACjEV,0BAA0B,EAC1BC,8BAA8B,EAC9BhC,2BAA4BsT,EAC5B5Q,sBAAsB,EACtBG,mBAAoB,MAED1D,cAAchxB,UAZjC,CAAA,EAAO,aAsBIokC,EAAAhqD,UAAAsrD,wBAAb,SAAqCC,EAAkBC;4BAEtD,KADMxN,EAAQ3+C,KAAKirD,UAAUiB,IAE5B,MAAA,CAAA,EAAOC,GAgBR,IAbMxsD,EAAqB,GACvBysD,OAAyC9lD,EAE7C6lD,EAAQE,EAAAnuC,UAAUiuC,GAAO,SAAC3jD,EAAGC,GAC5B,OAAID,EAAEya,OAASxa,EAAEwa,MACT+zB,EAAAtD,MAAM8B,yBAAyBhtC,EAAEya,MAAOxa,EAAEwa,QAGvCza,EAAEya,MAAQ,EAAI,IACdxa,EAAEwa,MAAQ,EAAI,MAI1Bjb,EAAA,EAAiCskD,EAAAH,EAAAnkD,EAAAskD,EAAAxsD,OAAAkI,IAMhC,GANQC,EAAAqkD,EAAAtkD,GAAEib,EAAKhb,EAAAgb,MAAEmkB,EAAIn/B,EAAAm/B,KAEF,iBAFImgB,EAAGt/C,EAAAs/C,OAGzB6E,EAAU7E,KAGPvQ,EAAAtD,MAAM/vC,QAAQsf,IAAWmkB,KAKvBlhB,EAAWy4B,EAAMkL,gBAAgB5mC,GACvCmkB,EAAOA,EAAKxkC,QAAQ,cAAe+7C,EAAM4I,KAErCrhC,IAAakhB,GAMjB,GAAI3/B,KAAKC,IAAI0/B,EAAKtnC,OAAQomB,EAASpmB,QAAU6qD,EAAmB4B,WAC/D5sD,EAAOuC,KAAK,CAAE+gB,MAAKA,EAAEmkB,KAAIA,SAQ1B,IAHM7gB,EAAUixB,EAAAvxB,WAAWC,EAAUkhB,GAAM,GACrColB,EAAa7N,EAAMwL,SAASnT,EAAAtD,MAAMF,KAAKvwB,GAAO+xB,oBAEpDxsB,EAAA,EAAqBw/B,EAAAzhC,EAAAiC,EAAAw/B,EAAAloD,OAAA0oB,IAAVsE,EAAMk7B,EAAAx/B,GACVzJ,EAAQ4/B,EAAM0L,WAAWmC,EAAa1/B,EAAOvR,eAC7C+T,EAAMqvB,EAAM0L,WAAWmC,EAAa1/B,EAAOvR,cAAgBuR,EAAOtR,gBAClEixC,EAAoB,CACzBrlB,KAAMA,EAAKtkC,OAAOgqB,EAAOrR,cAAeqR,EAAOpR,gBAC/CuH,MAAO,CAAE0wB,gBAAiB50B,EAAM8zB,WAAYe,YAAa70B,EAAM+zB,OAAQe,cAAevkB,EAAIujB,WAAYiB,UAAWxkB,EAAIwjB,SAGlH6L,EAAMkL,gBAAgB4C,EAAQxpC,SAAWwpC,EAAQrlB,MACpDznC,EAAOuC,KAAKuqD,GASf,MAJuB,iBAAZL,GACVzsD,EAAOuC,KAAK,CAAEqlD,IAAK6E,EAAShlB,KAAM,GAAInkB,MAAO,CAAE0wB,gBAAiB,EAAGC,YAAa,EAAGC,cAAe,EAAGC,UAAW,KAGjH,CAAA,EAAOn0C;AAKKgrD,EAAAhqD,UAAA+9C,aAAb,SAA0BwN,4EAEzB,OADIvN,EAAQ3+C,KAAKirD,UAAUiB,IAK3B,CAAA,EAAOQ,EAAAhO,aAAaC,IAHnB,CAAA,EAAO,aAUIgM,EAAAhqD,UAAAgsD,eAAb,SAA4BT,EAAkBjqC,EAAqB2qC,EAAiBC,0FAEnF,KADMlO,EAAQ3+C,KAAKirD,UAAUiB,IAE5B,MAAA,CAAA,EAAO,MAaR,IATMvC,EAAkB,GAClBznC,EAAO,IAAIG,IACXyqC,EAAgB,IAAIzoB,OAAOuoB,EAASC,IAEpCE,EAASpO,EAAMqK,kBAAkB/mC,EAAU6qC,KAEhD5qC,EAAKK,IAAIo8B,EAAMkL,gBAAgBkD,IAI3BpyB,EAAOgkB,EAAM0K,mBAAmByD,GAAgB/hD,EAAI4vB,EAAKrM,QAC5DvjB,EAAEqjB,MAAQlM,EAAKsY,MAAQmwB,EAAmBqC,kBAC3CjiD,EAAI4vB,EAAKrM,OAEH0uB,EAAOjyC,EAAEhH,MACXme,EAAKI,IAAI06B,KAGb96B,EAAKK,IAAIy6B,GACJzZ,MAAMxU,OAAOiuB,KAGlB2M,EAAMznD,KAAK86C,IAEZ,MAAA,CAAA,EAAO2M,UAQKgB,EAAAhqD,UAAAssD,kBAAb,SAA+Bf,EAAkBjpC,EAAe2pC,EAAiBC,4FAEhF,KADIlO,EAAQ3+C,KAAKirD,UAAUiB,IAE1B,MAAA,CAAA,EAAOzrD,OAAOsH,OAAO,OAItB,IAFM+kD,EAAgB,IAAIzoB,OAAOuoB,EAASC,GACpCltD,EAAuCc,OAAOsH,OAAO,MAClD6O,EAAOqM,EAAM0wB,gBAAiB/8B,EAAOqM,EAAM4wB,cAAej9B,IAElE,IADI+yC,EAAQhL,EAAM+K,aAAa9yC,EAAMk2C,GACrC9kD,EAAA,EAAmBklD,EAAAvD,EAAA3hD,EAAAklD,EAAAptD,OAAAkI,IAARg1C,EAAIkQ,EAAAllD,GACTu7B,MAAMxU,OAAOiuB,EAAKA,UAGnBp/B,EAAQje,EAAOq9C,EAAKA,SAEvBp/B,EAAQ,GACRje,EAAOq9C,EAAKA,MAAQp/B,GAErBA,EAAM1b,KAAK;AACVyxC,gBAAiB/8B,EACjBg9B,YAAaoJ,EAAKpJ,YAClBC,cAAej9B,EACfk9B,UAAWkJ,EAAKlJ,aAInB,MAAA,CAAA,EAAOn0C,UAKKgrD,EAAAhqD,UAAAg/C,iBAAb,SAA8BuM,EAAkBjpC,EAAe+8B,EAAa4M,EAAiBC,oFAE5F,OADIlO,EAAQ3+C,KAAKirD,UAAUiB,KAKvBY,EAAgB,IAAIzoB,OAAOuoB,EAASC,GAEpC5pC,EAAM2wB,cAAgB3wB,EAAM6wB,YAC/B7wB,EAAQ,CACP0wB,gBAAiB1wB,EAAM0wB,gBACvBC,YAAa3wB,EAAM2wB,YACnBC,cAAe5wB,EAAM4wB,cACrBC,UAAW7wB,EAAM6wB,UAAY,IAI3BqZ,EAAgBxO,EAAMkL,gBAAgB5mC,IAEtCmqC,EAAYzO,EAAMqK,kBAAkB,CAAEnW,WAAY5vB,EAAM0wB,gBAAiBb,OAAQ7vB,EAAM2wB,aAAekZ,KAItG9P,EAAO2B,EAAMkL,gBAAgBuD,GAEjC,CAAA,EADaC,EAAA5N,oBAAoBl9C,SAASo9C,iBAAiB18B,EAAOkqC,EAAeC,EAAWpQ,EAAMgD,KAHjG,CAAA,EAAO,OAlBP,CAAA,EAAO,aA2BF2K,EAAAhqD,UAAA2sD,kBAAP,SAAyBznD,EAAkB0nD,EAAiBC,GAA5D,IAAArlD,EAAAnI,KAOKytD,EAA2B,CAC9Bnd,KAHmBS,EAAM/F,kBAAkBwiB,GAJjB,SAACpiB,EAAgBr9B,GAC3C,OAAO5F,EAAK0iD,MAAM6C,IAAItiB,EAAQr9B,MAO9B4/C,gBAAiB,WAChB,OAAOxlD,EAAK+iD,eAId,OAAIlrD,KAAK+qD,uBACR/qD,KAAKgrD,eAAiBhrD,KAAK+qD,sBAAsB0C,EAAKF,GAE/CvsC,QAAQ1T,QAAQyjC,EAAMlG,kBAAkB7qC,KAAKgrD,kBAG9C,IAAIhqC,SAAa,SAAC1T,EAAS2T,GACjC9T,EAAQ,CAACtH,IAAW,SAAC+nD;AACpBzlD,EAAK6iD,eAAiB4C,EAAc7lD,OAAO0lD,EAAKF,GAEhDjgD,EAAQyjC,EAAMlG,kBAAkB1iC,EAAK6iD,mBAEnC/pC,OAUE0pC,EAAAhqD,UAAAktD,IAAP,SAAWziB,EAAgBr9B,GAC1B,IAAK/N,KAAKgrD,gBAAyD,mBAAhChrD,KAAKgrD,eAAe5f,GACtD,OAAOpqB,QAAQC,OAAO,IAAItc,MAAM,qCAAuCymC,IAGxE,IACC,OAAOpqB,QAAQ1T,QAAQtN,KAAKgrD,eAAe5f,GAAQn9B,MAAMjO,KAAKgrD,eAAgBj9C,IAC7E,MAAOhD,GACR,OAAOiW,QAAQC,OAAOlW,KAtOA4/C,EAAA4B,WAAa,IAoFb5B,EAAAqC,kBAAoB,IAuJ7CrC,EA/VA,GAAa1pD,EAAA0pD,mBAAAA,EAqWb1pD,EAAA8G,OAAA,SAAuBuoC,GACtB,OAAO,IAAIqa,EAAmBra,EAAM,OAMR,mBAAlBhvC,gBAEV6rC,EAAAxN,QAAQmuB,OAASC,EAAAhJ,0BClrBlB,WAEC,IAAIiJ,EAA0Bt6B,KAAMs6B,kBAChCC,EAAgBD,GAAqBA,EAAkB9oD,QAAU8oD,EAAkB9oD,QAAU,YAE/D,mBAAjBwuB,KAAMp0B,QAAgCo0B,KAAMp0B,OAAO0Q,KACnE1O,cAAc2sD,EAAgB,gBAG/B9gD,QAAQ9H,OAAO,CACdH,QAAS+oD,EACT3oD,YAAY,IAGb,IAeI4oD,GAAiB,EACjBC,EAAsC,GAC1Cz6B,KAAKme,UAAY,SAACjtC,GAjBH,IAAUiB,EAkBnBqoD,GAKLA,GAAiB,EAvBOroD,EAwBfjB,EAAQ8H,KAvBjBS,QAAQ,CAACtH,IAAW,SAAUuoD,GAC7B78C,YAAW,WACV,IAAI88C,EAAiBD,EAAGrmD,QAAO,SAAC8nC,EAAUK,GACnCxc,KAAMmM,YAAYgQ,EAAKK,KAC3B,MAGH,IADAxc,KAAKme,UAAY,SAAC9mC,GAAoB,OAAAsjD,EAAexc,UAAU9mC,EAAE2B;EAC1DyhD,EAAoBruD,OAAS,GACnC4zB,KAAKme,UAAUsc,EAAoBl1C,WAElC,OAQHk1C,EAAoBjsD,KAAK0C,IAjC5B,KnCLAqL,KAAAjQ","file":"workerMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = /** @class */ (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = /** @class */ (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = /** @class */ (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = /** @class */ (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n        return NullLoaderEventRecorder;\n    }());\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = /** @class */ (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object') {\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        Utilities.NEXT_ANONYMOUS_ID = 1;\n        Utilities.PERFORMANCE_NOW_PROBED = false;\n        Utilities.HAS_PERFORMANCE_NOW = false;\n        return Utilities;\n    }());\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    function ensureError(err) {\n        if (err instanceof Error) {\n            return err;\n        }\n        var result = new Error(err.message || String(err) || 'Unknown Error');\n        if (err.stack) {\n            result.stack = err.stack;\n        }\n        return result;\n    }\n    AMDLoader.ensureError = ensureError;\n    ;\n    var ConfigurationOptionsUtil = /** @class */ (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.phase === 'loading') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error(err);\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.phase === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err);\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.recordStats === 'undefined') {\n                options.recordStats = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (!Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    var err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n                    err.phase = 'configuration';\n                    options.onError(err);\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) { overwrite = null; }\n            if (base === void 0) { base = null; }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = /** @class */ (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            if (this.nodeModulesMap[moduleId] === true) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = /** @class */ (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                this._scriptLoader = (this._env.isWebWorker\n                    ? new WorkerScriptLoader()\n                    : this._env.isNode\n                        ? new NodeScriptLoader(this._env)\n                        : new BrowserScriptLoader());\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = /** @class */ (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var script = document.createElement('script');\n            script.setAttribute('async', 'async');\n            script.setAttribute('type', 'text/javascript');\n            this.attachListeners(script, callback, errorback);\n            script.setAttribute('src', scriptSrc);\n            // Propagate CSP nonce to dynamically created script tag.\n            var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n            if (cspNonce) {\n                script.setAttribute('nonce', cspNonce);\n            }\n            document.getElementsByTagName('head')[0].appendChild(script);\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = /** @class */ (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = /** @class */ (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            // It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n            // That's because `nodeCachedData` is set _after_ calling this for the first time...\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData) {\n                return;\n            }\n            if (this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request) {\n                    return Module._resolveFilename(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang and create wrapper function\n                var scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n                // create script\n                var recorder = moduleManager.getRecorder();\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n                var options = { filename: filename };\n                var hashData;\n                try {\n                    var data = that._fs.readFileSync(cachedDataPath);\n                    hashData = data.slice(0, 16);\n                    options.cachedData = data.slice(16);\n                    recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                }\n                catch (_e) {\n                    recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                }\n                var script = new that._vm.Script(scriptSource, options);\n                var compileWrapper = script.runInThisContext(options);\n                // run script\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                // cached data aftermath\n                that._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n                that._verifyCachedData(script, scriptSource, cachedDataPath, hashData);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                var normalizedScriptSrc_1 = this._path.normalize(scriptSrc);\n                var vmScriptPathOrUri_1 = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc_1);\n                var wantsCachedData_1 = Boolean(opts.nodeCachedData);\n                var cachedDataPath_1 = wantsCachedData_1 ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n                this._readSourceAndCachedData(normalizedScriptSrc_1, cachedDataPath_1, recorder, function (err, data, cachedData, hashData) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var scriptSource;\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        scriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n                    }\n                    else {\n                        scriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n                    }\n                    scriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc_1);\n                    var scriptOpts = { filename: vmScriptPathOrUri_1, cachedData: cachedData };\n                    var script = _this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n                    _this._handleCachedData(script, scriptSource, cachedDataPath_1, wantsCachedData_1 && !cachedData, moduleManager);\n                    _this._verifyCachedData(script, scriptSource, cachedDataPath_1, hashData);\n                });\n            }\n        };\n        NodeScriptLoader.prototype._createAndEvalScript = function (moduleManager, contents, options, callback, errorback) {\n            var recorder = moduleManager.getRecorder();\n            recorder.record(31 /* NodeBeginEvaluatingScript */, options.filename);\n            var script = new this._vm.Script(contents, options);\n            var ret = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            ret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n            recorder.record(32 /* NodeEndEvaluatingScript */, options.filename);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + options.filename + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getElectronRendererScriptPathOrUri = function (path) {\n            if (!this._env.isElectronRenderer) {\n                return path;\n            }\n            var driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n            if (driveLetterMatch) {\n                // windows\n                return \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n            }\n            else {\n                // nix\n                return \"file://\" + path;\n            }\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (config, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(config.path, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._handleCachedData = function (script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // cached data got rejected -> delete and re-create\n                this._fs.unlink(cachedDataPath, function (err) {\n                    moduleManager.getRecorder().record(62 /* CachedDataRejected */, cachedDataPath);\n                    _this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n                    if (err) {\n                        moduleManager.getConfig().onError(err);\n                    }\n                });\n            }\n            else if (createCachedData) {\n                // no cached data, but wanted\n                this._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n            }\n        };\n        // Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n        // -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n        // -V8_CACHED_DATA is what v8 produces\n        NodeScriptLoader.prototype._createAndWriteCachedData = function (script, scriptSource, cachedDataPath, moduleManager) {\n            var _this = this;\n            var timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n            var lastSize = -1;\n            var iteration = 0;\n            var hashData = undefined;\n            var createLoop = function () {\n                setTimeout(function () {\n                    if (!hashData) {\n                        hashData = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                    }\n                    var cachedData = script.createCachedData();\n                    if (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n                        return;\n                    }\n                    lastSize = cachedData.length;\n                    _this._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), function (err) {\n                        if (err) {\n                            moduleManager.getConfig().onError(err);\n                        }\n                        moduleManager.getRecorder().record(63 /* CachedDataCreated */, cachedDataPath);\n                        createLoop();\n                    });\n                }, timeout * (Math.pow(4, iteration++)));\n            };\n            // with some delay (`timeout`) create cached data\n            // and repeat that (with backoff delay) until the\n            // data seems to be not changing anymore\n            createLoop();\n        };\n        NodeScriptLoader.prototype._readSourceAndCachedData = function (sourcePath, cachedDataPath, recorder, callback) {\n            if (!cachedDataPath) {\n                // no cached data case\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n            }\n            else {\n                // cached data case: read both files in parallel\n                var source_1 = undefined;\n                var cachedData_1 = undefined;\n                var hashData_1 = undefined;\n                var steps_1 = 2;\n                var step_1 = function (err) {\n                    if (err) {\n                        callback(err);\n                    }\n                    else if (--steps_1 === 0) {\n                        callback(undefined, source_1, cachedData_1, hashData_1);\n                    }\n                };\n                this._fs.readFile(sourcePath, { encoding: 'utf8' }, function (err, data) {\n                    source_1 = data;\n                    step_1(err);\n                });\n                this._fs.readFile(cachedDataPath, function (err, data) {\n                    if (!err && data && data.length > 0) {\n                        hashData_1 = data.slice(0, 16);\n                        cachedData_1 = data.slice(16);\n                        recorder.record(60 /* CachedDataFound */, cachedDataPath);\n                    }\n                    else {\n                        recorder.record(61 /* CachedDataMissed */, cachedDataPath);\n                    }\n                    step_1(); // ignored: cached data is optional\n                });\n            }\n        };\n        NodeScriptLoader.prototype._verifyCachedData = function (script, scriptSource, cachedDataPath, hashData) {\n            var _this = this;\n            if (!hashData) {\n                // nothing to do\n                return;\n            }\n            if (script.cachedDataRejected) {\n                // invalid anyways\n                return;\n            }\n            setTimeout(function () {\n                // check source hash - the contract is that file paths change when file content\n                // change (e.g use the commit or version id as cache path). this check is\n                // for violations of this contract.\n                var hashDataNow = _this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n                if (!hashData.equals(hashDataNow)) {\n                    console.warn(\"FAILED TO VERIFY CACHED DATA. Deleting '\" + cachedDataPath + \"' now, but a RESTART IS REQUIRED\");\n                    _this._fs.unlink(cachedDataPath, function (err) { return console.error(\"FAILED to unlink: '\" + cachedDataPath + \"'\", err); });\n                }\n            }, Math.ceil(5000 * (1 + Math.random())));\n        };\n        NodeScriptLoader._BOM = 0xFEFF;\n        NodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n        NodeScriptLoader._SUFFIX = '\\n});';\n        return NodeScriptLoader;\n    }());\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = /** @class */ (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        ModuleIdResolver.ROOT = new ModuleIdResolver('');\n        return ModuleIdResolver;\n    }());\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = /** @class */ (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.error = null;\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                var err = AMDLoader.ensureError(producedError);\n                err.phase = 'factory';\n                err.moduleId = this.strId;\n                this.error = err;\n                config.onError(err);\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            this._isComplete = true;\n            this.error = err;\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = /** @class */ (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = /** @class */ (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n        RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n        RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n        return RegularDependency;\n    }());\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = /** @class */ (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = /** @class */ (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) { loaderAvailableTimestamp = 0; }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack || null;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(strModuleId); }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = (m.dependencies || []).map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) { moduleIdResolver = new ModuleIdResolver(_strModuleId); }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            if (m.error) {\n                throw m.error;\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, _err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            var err = AMDLoader.ensureError(_err);\n            err.phase = 'loading';\n            err.moduleId = strModuleId;\n            err.neededBy = neededBy;\n            return err;\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            if (!this._modules2[moduleId]) {\n                this._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], function () { }, function () { }, null);\n            }\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                    if (path !== null) {\n                        path.push(fromId);\n                        return path;\n                    }\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        module.exportsPassedIn = true;\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule && dependencyModule.isComplete()) {\n                        if (dependencyModule.error) {\n                            module.onDependencyError(dependencyModule.error);\n                            return;\n                        }\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    if (this._hasDependencyPath(dependency.id, module.id)) {\n                        console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                        var cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n                        cyclePath.reverse();\n                        cyclePath.push(dependency.id);\n                        console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                        // Break the cycle\n                        module.unresolvedDependenciesCount--;\n                        continue;\n                    }\n                    // record inverse dependency\n                    this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                    this._inverseDependencies2[dependency.id].push(module.id);\n                    if (dependency instanceof PluginDependency) {\n                        var plugin = this._modules2[dependency.pluginId];\n                        if (plugin && plugin.isComplete()) {\n                            this._loadPluginDependency(plugin.exports, dependency);\n                            continue;\n                        }\n                        // Record dependency for when the plugin gets loaded\n                        var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                        if (!inversePluginDeps) {\n                            inversePluginDeps = [];\n                            this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                        }\n                        inversePluginDeps.push(dependency);\n                        this._loadModule(dependency.pluginId);\n                        continue;\n                    }\n                    this._loadModule(dependency.id);\n                }\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            if (dependencies) {\n                for (var i = 0, len = dependencies.length; i < len; i++) {\n                    var dependency = dependencies[i];\n                    if (dependency === RegularDependency.EXPORTS) {\n                        dependenciesValues[i] = module.exports;\n                        continue;\n                    }\n                    if (dependency === RegularDependency.MODULE) {\n                        dependenciesValues[i] = {\n                            id: module.strId,\n                            config: function () {\n                                return _this._config.getConfigForModule(module.strId);\n                            }\n                        };\n                        continue;\n                    }\n                    if (dependency === RegularDependency.REQUIRE) {\n                        dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                        continue;\n                    }\n                    var dependencyModule = this._modules2[dependency.id];\n                    if (dependencyModule) {\n                        dependenciesValues[i] = dependencyModule.exports;\n                        continue;\n                    }\n                    dependenciesValues[i] = null;\n                }\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) { shouldOverwrite = false; }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = function (what) {\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\n                    try {\n                        return _nodeRequire_1(what);\n                    }\n                    finally {\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\n                    }\n                };\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength: number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tpublic onUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function fromSet<T>(set: Set<T>): T[] {\n\tconst result: T[] = [];\n\tset.forEach(o => result.push(o));\n\treturn result;\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function fill<T>(num: number, value: T, arr: T[] = []): T[] {\n\tfor (let i = 0; i < num; i++) {\n\t\tarr[i] = value;\n\t}\n\n\treturn arr;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger?: (t: T, r: R) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, merger: (t: T, r: R) => R = t => t as any): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tconst key = indexer(t);\n\t\tr[key] = merger(t, r[key]);\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => {\n\t\tconst index = array.indexOf(element);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t};\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: any, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: any;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as any as T;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj: any, hashVal = 0): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(0, 937);\n\t\tdefault:\n\t\t\treturn numberHash(0, 617);\n\t}\n}\n\nfunction numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => hash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn hash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\nexport class Hasher {\n\n\tprivate _value = 0;\n\n\tget value(): number {\n\t\treturn this._value;\n\t}\n\n\thash(obj: any): number {\n\t\tthis._value = hash(obj, this._value);\n\t\treturn this._value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiffChange } from 'vs/base/common/diff/diffChange';\nimport { stringHash } from 'vs/base/common/hash';\nimport { Constants } from 'vs/base/common/uint';\n\nexport class StringDiffSequence implements ISequence {\n\n\tconstructor(private source: string) { }\n\n\tgetElements(): Int32Array | number[] | string[] {\n\t\tconst source = this.source;\n\t\tconst characters = new Int32Array(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tcharacters[i] = source.charCodeAt(i);\n\t\t}\n\t\treturn characters;\n\t}\n}\n\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\n\treturn new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n\nexport interface ISequence {\n\tgetElements(): Int32Array | number[] | string[];\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength: number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex: number, matchLengthOfLongest: number): boolean;\n}\n\nexport interface IDiffResult {\n\tquitEarly: boolean;\n\tchanges: IDiffChange[];\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n\n\tpublic static Assert(condition: boolean, message: string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nexport class MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n\tpublic static Copy2(sourceArray: Int32Array, sourceIndex: number, destinationArray: Int32Array, destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nconst enum LocalConstants {\n\tMaxDifferencesHistory = 1447\n}\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes: DiffChange[];\n\tprivate m_originalStart: number;\n\tprivate m_modifiedStart: number;\n\tprivate m_originalCount: number;\n\tprivate m_modifiedCount: number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class in the reverse order\n\t */\n\tpublic getReverseChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate readonly ContinueProcessingPredicate: IContinueProcessingPredicate | null;\n\n\tprivate readonly _hasStrings: boolean;\n\tprivate readonly _originalStringElements: string[];\n\tprivate readonly _originalElementsOrHash: Int32Array;\n\tprivate readonly _modifiedStringElements: string[];\n\tprivate readonly _modifiedElementsOrHash: Int32Array;\n\n\tprivate m_forwardHistory: Int32Array[];\n\tprivate m_reverseHistory: Int32Array[];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\n\t\tconst [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n\t\tconst [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n\n\t\tthis._hasStrings = (originalHasStrings && modifiedHasStrings);\n\t\tthis._originalStringElements = originalStringElements;\n\t\tthis._originalElementsOrHash = originalElementsOrHash;\n\t\tthis._modifiedStringElements = modifiedStringElements;\n\t\tthis._modifiedElementsOrHash = modifiedElementsOrHash;\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\t}\n\n\tprivate static _isStringArray(arr: Int32Array | number[] | string[]): arr is string[] {\n\t\treturn (arr.length > 0 && typeof arr[0] === 'string');\n\t}\n\n\tprivate static _getElements(sequence: ISequence): [string[], Int32Array, boolean] {\n\t\tconst elements = sequence.getElements();\n\n\t\tif (LcsDiff._isStringArray(elements)) {\n\t\t\tconst hashes = new Int32Array(elements.length);\n\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\t\thashes[i] = stringHash(elements[i], 0);\n\t\t\t}\n\t\t\treturn [elements, hashes, true];\n\t\t}\n\n\t\tif (elements instanceof Int32Array) {\n\t\t\treturn [[], elements, false];\n\t\t}\n\n\t\treturn [[], new Int32Array(elements), false];\n\t}\n\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\n\t\tif (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n\t}\n\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n\t}\n\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n\t}\n\n\tpublic ComputeDiff(pretty: boolean): IDiffResult {\n\t\treturn this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): IDiffResult {\n\t\tconst quitEarlyArr = [false];\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n\t\tif (pretty) {\n\t\t\t// We have to clean up the computed diff to be more intuitive\n\t\t\t// but it turns out this cannot be done correctly until the entire set\n\t\t\t// of diffs have been computed\n\t\t\tchanges = this.PrettifyChanges(changes);\n\t\t}\n\n\t\treturn {\n\t\t\tquitEarly: quitEarlyArr[0],\n\t\t\tchanges: changes\n\t\t};\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes: DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tconst midOriginalArr = [0];\n\t\tconst midModifiedArr = [0];\n\t\tconst result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tconst midOriginal = midOriginalArr[0];\n\t\tconst midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tconst leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We did't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\n\t\tforwardPoints: Int32Array, reversePoints: Int32Array,\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]\n\t): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] | null = null;\n\t\tlet reverseChanges: DiffChange[] | null = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Constants.MIN_SAFE_SMALL_INTEGER;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tconst diagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tconst lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tconst diagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\n\t\tlet originalIndex = 0, modifiedIndex = 0;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tconst maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tconst numDiagonals = maxDifferences + 1;\n\t\tconst forwardPoints = new Int32Array(numDiagonals);\n\t\tconst reversePoints = new Int32Array(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tconst diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tconst diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tconst diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tconst diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tconst delta = diagonalReverseBase - diagonalForwardBase;\n\t\tconst deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tfor (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tconst matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quiting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= LocalConstants.MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Shifts the given changes to provide a more intuitive diff.\n\t * While the first element in a diff matches the first element after the diff,\n\t * we shift the diff down.\n\t *\n\t * @param changes The list of changes to shift\n\t * @returns The shifted changes\n\t */\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\n\n\t\t// Shift all the changes down first\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tconst change = changes[i];\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\twhile (change.originalStart + change.originalLength < originalStop &&\n\t\t\t\tchange.modifiedStart + change.modifiedLength < modifiedStop &&\n\t\t\t\t(!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n\t\t\t\t(!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n\t\t\t\tchange.originalStart++;\n\t\t\t\tchange.modifiedStart++;\n\t\t\t}\n\n\t\t\tlet mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i + 1, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = changes[i];\n\n\t\t\tlet originalStop = 0;\n\t\t\tlet modifiedStop = 0;\n\t\t\tif (i > 0) {\n\t\t\t\tconst prevChange = changes[i - 1];\n\t\t\t\tif (prevChange.originalLength > 0) {\n\t\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\n\t\t\t\t}\n\t\t\t\tif (prevChange.modifiedLength > 0) {\n\t\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\tlet bestDelta = 0;\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n\t\t\tfor (let delta = 1; ; delta++) {\n\t\t\t\tconst originalStart = change.originalStart - delta;\n\t\t\t\tconst modifiedStart = change.modifiedStart - delta;\n\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n\n\t\t\t\tif (score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchange.originalStart -= bestDelta;\n\t\t\tchange.modifiedStart -= bestDelta;\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tprivate _OriginalIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n\t}\n\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (originalLength > 0) {\n\t\t\tconst originalEnd = originalStart + originalLength;\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _ModifiedIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n\t}\n\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (modifiedLength > 0) {\n\t\t\tconst modifiedEnd = modifiedStart + modifiedLength;\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\n\t\tconst originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n\t\tconst modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n\t\treturn (originalScore + modifiedScore);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\n\t\tlet mergedChangeArr: DiffChange[] = [];\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\tconst originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tconst modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tconst diagonalsBelow = diagonalBaseIndex;\n\t\tconst diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tconst diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tconst lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tconst upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IteratorDefinedResult<T> {\n\treadonly done: false;\n\treadonly value: T;\n}\nexport interface IteratorUndefinedResult {\n\treadonly done: true;\n\treadonly value: undefined;\n}\nexport const FIN: IteratorUndefinedResult = { done: true, value: undefined };\nexport type IteratorResult<T> = IteratorDefinedResult<T> | IteratorUndefinedResult;\n\nexport interface Iterator<T> {\n\tnext(): IteratorResult<T>;\n}\n\ninterface NativeIteratorYieldResult<TYield> {\n\tdone?: false;\n\tvalue: TYield;\n}\n\ninterface NativeIteratorReturnResult<TReturn> {\n\tdone: true;\n\tvalue: TReturn;\n}\n\ntype NativeIteratorResult<T, TReturn = any> = NativeIteratorYieldResult<T> | NativeIteratorReturnResult<TReturn>;\n\nexport interface NativeIterator<T> {\n\tnext(): NativeIteratorResult<T>;\n}\n\nexport module Iterator {\n\tconst _empty: Iterator<any> = {\n\t\tnext() {\n\t\t\treturn FIN;\n\t\t}\n\t};\n\n\texport function empty<T>(): Iterator<T> {\n\t\treturn _empty;\n\t}\n\n\texport function single<T>(value: T): Iterator<T> {\n\t\tlet done = false;\n\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tdone = true;\n\t\t\t\treturn { done: false, value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromArray<T>(array: ReadonlyArray<T>, index = 0, length = array.length): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tif (index >= length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: array[index++] };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function fromNativeIterator<T>(it: NativeIterator<T>): Iterator<T> {\n\t\treturn {\n\t\t\tnext(): IteratorResult<T> {\n\t\t\t\tconst result = it.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\treturn { done: false, value: result.value };\n\t\t\t}\n\t\t};\n\t}\n\n\texport function from<T>(elements: Iterator<T> | T[] | undefined): Iterator<T> {\n\t\tif (!elements) {\n\t\t\treturn Iterator.empty();\n\t\t} else if (Array.isArray(elements)) {\n\t\t\treturn Iterator.fromArray(elements);\n\t\t} else {\n\t\t\treturn elements;\n\t\t}\n\t}\n\n\texport function map<T, R>(iterator: Iterator<T>, fn: (t: T) => R): Iterator<R> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tconst element = iterator.next();\n\t\t\t\tif (element.done) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t} else {\n\t\t\t\t\treturn { done: false, value: fn(element.value) };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function filter<T>(iterator: Iterator<T>, fn: (t: T) => boolean): Iterator<T> {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst element = iterator.next();\n\t\t\t\t\tif (element.done) {\n\t\t\t\t\t\treturn FIN;\n\t\t\t\t\t}\n\t\t\t\t\tif (fn(element.value)) {\n\t\t\t\t\t\treturn { done: false, value: element.value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\texport function forEach<T>(iterator: Iterator<T>, fn: (t: T) => void): void {\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tfn(next.value);\n\t\t}\n\t}\n\n\texport function collect<T>(iterator: Iterator<T>, atMost: number = Number.POSITIVE_INFINITY): T[] {\n\t\tconst result: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\tlet i = 0;\n\n\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {\n\t\t\tresult.push(next.value);\n\n\t\t\tif (++i >= atMost) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\texport function concat<T>(...iterators: Iterator<T>[]): Iterator<T> {\n\t\tlet i = 0;\n\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif (i >= iterators.length) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tconst iterator = iterators[i];\n\t\t\t\tconst result = iterator.next();\n\n\t\t\t\tif (result.done) {\n\t\t\t\t\ti++;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\t}\n\n\texport function chain<T>(iterator: Iterator<T>): ChainableIterator<T> {\n\t\treturn new ChainableIterator(iterator);\n\t}\n}\n\nexport class ChainableIterator<T> implements Iterator<T> {\n\n\tconstructor(private it: Iterator<T>) { }\n\n\tnext(): IteratorResult<T> { return this.it.next(); }\n\tmap<R>(fn: (t: T) => R): ChainableIterator<R> { return new ChainableIterator(Iterator.map(this.it, fn)); }\n\tfilter(fn: (t: T) => boolean): ChainableIterator<T> { return new ChainableIterator(Iterator.filter(this.it, fn)); }\n}\n\nexport type ISequence<T> = Iterator<T> | T[];\n\nexport function getSequenceIterator<T>(arg: ISequence<T> | undefined): Iterator<T> {\n\tif (Array.isArray(arg)) {\n\t\treturn Iterator.fromArray(arg);\n\t} else if (!arg) {\n\t\treturn Iterator.empty();\n\t} else {\n\t\treturn arg;\n\t}\n}\n\nexport interface INextIterator<T> {\n\tnext(): T | null;\n}\n\nexport class ArrayIterator<T> implements INextIterator<T> {\n\n\tprivate readonly items: readonly T[];\n\tprotected start: number;\n\tprotected end: number;\n\tprotected index: number;\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tthis.items = items;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.index = index;\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic next(): T | null {\n\t\tthis.index = Math.min(this.index + 1, this.end);\n\t\treturn this.current();\n\t}\n\n\tprotected current(): T | null {\n\t\tif (this.index === this.start - 1 || this.index === this.end) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.items[this.index];\n\t}\n}\n\nexport class ArrayNavigator<T> extends ArrayIterator<T> implements INavigator<T> {\n\n\tconstructor(items: readonly T[], start: number = 0, end: number = items.length, index = start - 1) {\n\t\tsuper(items, start, end, index);\n\t}\n\n\tpublic current(): T | null {\n\t\treturn super.current();\n\t}\n\n\tpublic previous(): T | null {\n\t\tthis.index = Math.max(this.index - 1, this.start - 1);\n\t\treturn this.current();\n\t}\n\n\tpublic first(): T | null {\n\t\tthis.index = this.start;\n\t\treturn this.current();\n\t}\n\n\tpublic last(): T | null {\n\t\tthis.index = this.end - 1;\n\t\treturn this.current();\n\t}\n\n\tpublic parent(): T | null {\n\t\treturn null;\n\t}\n}\n\nexport class MappedIterator<T, R> implements INextIterator<R> {\n\n\tconstructor(protected iterator: INextIterator<T>, protected fn: (item: T | null) => R) {\n\t\t// noop\n\t}\n\n\tnext() { return this.fn(this.iterator.next()); }\n}\n\nexport interface INavigator<T> extends INextIterator<T> {\n\tcurrent(): T | null;\n\tprevious(): T | null;\n\tparent(): T | null;\n\tfirst(): T | null;\n\tlast(): T | null;\n\tnext(): T | null;\n}\n\nexport class MappedNavigator<T, R> extends MappedIterator<T, R> implements INavigator<R> {\n\n\tconstructor(protected navigator: INavigator<T>, fn: (item: T | null) => R) {\n\t\tsuper(navigator, fn);\n\t}\n\n\tcurrent() { return this.fn(this.navigator.current()); }\n\tprevious() { return this.fn(this.navigator.previous()); }\n\tparent() { return this.fn(this.navigator.parent()); }\n\tfirst() { return this.fn(this.navigator.first()); }\n\tlast() { return this.fn(this.navigator.last()); }\n\tnext() { return this.fn(this.navigator.next()); }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { illegalArgument } from 'vs/base/common/errors';\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\n\tMeta = 57,\n\tContextMenu = 58,\n\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\n\tNumLock = 78,\n\tScrollLock = 79,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\n\tNUMPAD_0 = 93, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1 = 94, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2 = 95, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3 = 96, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4 = 97, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5 = 98, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6 = 99, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7 = 100, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8 = 101, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9 = 102, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY = 103,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD = 104,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR = 105,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT = 106,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL = 107,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE = 108,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\n\tABNT_C1 = 110, // Brazilian (ABNT) Keyboard\n\tABNT_C2 = 111, // Brazilian (ABNT) Keyboard\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tprivate _keyCodeToStr: string[];\n\tprivate _strToKeyCode: { [str: string]: KeyCode; };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n\n\tfunction define(keyCode: KeyCode, uiLabel: string, usUserSettingsLabel: string = uiLabel, generalUserSettingsLabel: string = usUserSettingsLabel): void {\n\t\tuiMap.define(keyCode, uiLabel);\n\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel);\n\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n\t}\n\n\tdefine(KeyCode.Unknown, 'unknown');\n\n\tdefine(KeyCode.Backspace, 'Backspace');\n\tdefine(KeyCode.Tab, 'Tab');\n\tdefine(KeyCode.Enter, 'Enter');\n\tdefine(KeyCode.Shift, 'Shift');\n\tdefine(KeyCode.Ctrl, 'Ctrl');\n\tdefine(KeyCode.Alt, 'Alt');\n\tdefine(KeyCode.PauseBreak, 'PauseBreak');\n\tdefine(KeyCode.CapsLock, 'CapsLock');\n\tdefine(KeyCode.Escape, 'Escape');\n\tdefine(KeyCode.Space, 'Space');\n\tdefine(KeyCode.PageUp, 'PageUp');\n\tdefine(KeyCode.PageDown, 'PageDown');\n\tdefine(KeyCode.End, 'End');\n\tdefine(KeyCode.Home, 'Home');\n\n\tdefine(KeyCode.LeftArrow, 'LeftArrow', 'Left');\n\tdefine(KeyCode.UpArrow, 'UpArrow', 'Up');\n\tdefine(KeyCode.RightArrow, 'RightArrow', 'Right');\n\tdefine(KeyCode.DownArrow, 'DownArrow', 'Down');\n\tdefine(KeyCode.Insert, 'Insert');\n\tdefine(KeyCode.Delete, 'Delete');\n\n\tdefine(KeyCode.KEY_0, '0');\n\tdefine(KeyCode.KEY_1, '1');\n\tdefine(KeyCode.KEY_2, '2');\n\tdefine(KeyCode.KEY_3, '3');\n\tdefine(KeyCode.KEY_4, '4');\n\tdefine(KeyCode.KEY_5, '5');\n\tdefine(KeyCode.KEY_6, '6');\n\tdefine(KeyCode.KEY_7, '7');\n\tdefine(KeyCode.KEY_8, '8');\n\tdefine(KeyCode.KEY_9, '9');\n\n\tdefine(KeyCode.KEY_A, 'A');\n\tdefine(KeyCode.KEY_B, 'B');\n\tdefine(KeyCode.KEY_C, 'C');\n\tdefine(KeyCode.KEY_D, 'D');\n\tdefine(KeyCode.KEY_E, 'E');\n\tdefine(KeyCode.KEY_F, 'F');\n\tdefine(KeyCode.KEY_G, 'G');\n\tdefine(KeyCode.KEY_H, 'H');\n\tdefine(KeyCode.KEY_I, 'I');\n\tdefine(KeyCode.KEY_J, 'J');\n\tdefine(KeyCode.KEY_K, 'K');\n\tdefine(KeyCode.KEY_L, 'L');\n\tdefine(KeyCode.KEY_M, 'M');\n\tdefine(KeyCode.KEY_N, 'N');\n\tdefine(KeyCode.KEY_O, 'O');\n\tdefine(KeyCode.KEY_P, 'P');\n\tdefine(KeyCode.KEY_Q, 'Q');\n\tdefine(KeyCode.KEY_R, 'R');\n\tdefine(KeyCode.KEY_S, 'S');\n\tdefine(KeyCode.KEY_T, 'T');\n\tdefine(KeyCode.KEY_U, 'U');\n\tdefine(KeyCode.KEY_V, 'V');\n\tdefine(KeyCode.KEY_W, 'W');\n\tdefine(KeyCode.KEY_X, 'X');\n\tdefine(KeyCode.KEY_Y, 'Y');\n\tdefine(KeyCode.KEY_Z, 'Z');\n\n\tdefine(KeyCode.Meta, 'Meta');\n\tdefine(KeyCode.ContextMenu, 'ContextMenu');\n\n\tdefine(KeyCode.F1, 'F1');\n\tdefine(KeyCode.F2, 'F2');\n\tdefine(KeyCode.F3, 'F3');\n\tdefine(KeyCode.F4, 'F4');\n\tdefine(KeyCode.F5, 'F5');\n\tdefine(KeyCode.F6, 'F6');\n\tdefine(KeyCode.F7, 'F7');\n\tdefine(KeyCode.F8, 'F8');\n\tdefine(KeyCode.F9, 'F9');\n\tdefine(KeyCode.F10, 'F10');\n\tdefine(KeyCode.F11, 'F11');\n\tdefine(KeyCode.F12, 'F12');\n\tdefine(KeyCode.F13, 'F13');\n\tdefine(KeyCode.F14, 'F14');\n\tdefine(KeyCode.F15, 'F15');\n\tdefine(KeyCode.F16, 'F16');\n\tdefine(KeyCode.F17, 'F17');\n\tdefine(KeyCode.F18, 'F18');\n\tdefine(KeyCode.F19, 'F19');\n\n\tdefine(KeyCode.NumLock, 'NumLock');\n\tdefine(KeyCode.ScrollLock, 'ScrollLock');\n\n\tdefine(KeyCode.US_SEMICOLON, ';', ';', 'OEM_1');\n\tdefine(KeyCode.US_EQUAL, '=', '=', 'OEM_PLUS');\n\tdefine(KeyCode.US_COMMA, ',', ',', 'OEM_COMMA');\n\tdefine(KeyCode.US_MINUS, '-', '-', 'OEM_MINUS');\n\tdefine(KeyCode.US_DOT, '.', '.', 'OEM_PERIOD');\n\tdefine(KeyCode.US_SLASH, '/', '/', 'OEM_2');\n\tdefine(KeyCode.US_BACKTICK, '`', '`', 'OEM_3');\n\tdefine(KeyCode.ABNT_C1, 'ABNT_C1');\n\tdefine(KeyCode.ABNT_C2, 'ABNT_C2');\n\tdefine(KeyCode.US_OPEN_SQUARE_BRACKET, '[', '[', 'OEM_4');\n\tdefine(KeyCode.US_BACKSLASH, '\\\\', '\\\\', 'OEM_5');\n\tdefine(KeyCode.US_CLOSE_SQUARE_BRACKET, ']', ']', 'OEM_6');\n\tdefine(KeyCode.US_QUOTE, '\\'', '\\'', 'OEM_7');\n\tdefine(KeyCode.OEM_8, 'OEM_8');\n\tdefine(KeyCode.OEM_102, 'OEM_102');\n\n\tdefine(KeyCode.NUMPAD_0, 'NumPad0');\n\tdefine(KeyCode.NUMPAD_1, 'NumPad1');\n\tdefine(KeyCode.NUMPAD_2, 'NumPad2');\n\tdefine(KeyCode.NUMPAD_3, 'NumPad3');\n\tdefine(KeyCode.NUMPAD_4, 'NumPad4');\n\tdefine(KeyCode.NUMPAD_5, 'NumPad5');\n\tdefine(KeyCode.NUMPAD_6, 'NumPad6');\n\tdefine(KeyCode.NUMPAD_7, 'NumPad7');\n\tdefine(KeyCode.NUMPAD_8, 'NumPad8');\n\tdefine(KeyCode.NUMPAD_9, 'NumPad9');\n\n\tdefine(KeyCode.NUMPAD_MULTIPLY, 'NumPad_Multiply');\n\tdefine(KeyCode.NUMPAD_ADD, 'NumPad_Add');\n\tdefine(KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator');\n\tdefine(KeyCode.NUMPAD_SUBTRACT, 'NumPad_Subtract');\n\tdefine(KeyCode.NUMPAD_DECIMAL, 'NumPad_Decimal');\n\tdefine(KeyCode.NUMPAD_DIVIDE, 'NumPad_Divide');\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n}\n\n/**\n * Binary encoding strategy:\n * ```\n *    1111 11\n *    5432 1098 7654 3210\n *    ---- CSAW KKKK KKKK\n *  C = bit 11 = ctrlCmd flag\n *  S = bit 10 = shift flag\n *  A = bit 9 = alt flag\n *  W = bit 8 = winCtrl flag\n *  K = bits 0-7 = key code\n * ```\n */\nconst enum BinaryKeybindingsMask {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n\tKeyCode = 0x000000FF\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\n\tif (keybinding === 0) {\n\t\treturn null;\n\t}\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\tif (chordPart !== 0) {\n\t\treturn new ChordKeybinding([\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\n\t\t]);\n\t}\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\n\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\n\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\n\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\n\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nexport class SimpleKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyCode = keyCode;\n\t}\n\n\tpublic equals(other: SimpleKeybinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.keyCode === other.keyCode\n\t\t);\n\t}\n\n\tpublic getHashCode(): string {\n\t\tconst ctrl = this.ctrlKey ? '1' : '0';\n\t\tconst shift = this.shiftKey ? '1' : '0';\n\t\tconst alt = this.altKey ? '1' : '0';\n\t\tconst meta = this.metaKey ? '1' : '0';\n\t\treturn `${ctrl}${shift}${alt}${meta}${this.keyCode}`;\n\t}\n\n\tpublic isModifierKey(): boolean {\n\t\treturn (\n\t\t\tthis.keyCode === KeyCode.Unknown\n\t\t\t|| this.keyCode === KeyCode.Ctrl\n\t\t\t|| this.keyCode === KeyCode.Meta\n\t\t\t|| this.keyCode === KeyCode.Alt\n\t\t\t|| this.keyCode === KeyCode.Shift\n\t\t);\n\t}\n\n\tpublic toChord(): ChordKeybinding {\n\t\treturn new ChordKeybinding([this]);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\n\t\t);\n\t}\n}\n\nexport class ChordKeybinding {\n\tpublic readonly parts: SimpleKeybinding[];\n\n\tconstructor(parts: SimpleKeybinding[]) {\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis.parts = parts;\n\t}\n\n\tpublic getHashCode(): string {\n\t\tlet result = '';\n\t\tfor (let i = 0, len = this.parts.length; i < len; i++) {\n\t\t\tif (i !== 0) {\n\t\t\t\tresult += ';';\n\t\t\t}\n\t\t\tresult += this.parts[i].getHashCode();\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic equals(other: ChordKeybinding | null): boolean {\n\t\tif (other === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.parts.length !== other.parts.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.parts.length; i++) {\n\t\t\tif (!this.parts[i].equals(other.parts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport type Keybinding = ChordKeybinding;\n\nexport class ResolvedKeybindingPart {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\n\treadonly keyLabel: string | null;\n\treadonly keyAriaLabel: string | null;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyLabel = kbLabel;\n\t\tthis.keyAriaLabel = kbAriaLabel;\n\t}\n}\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport abstract class ResolvedKeybinding {\n\t/**\n\t * This prints the binding in a format suitable for displaying in the UI.\n\t */\n\tpublic abstract getLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for ARIA.\n\t */\n\tpublic abstract getAriaLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tpublic abstract getElectronAccelerator(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for user settings.\n\t */\n\tpublic abstract getUserSettingsLabel(): string | null;\n\t/**\n\t * Is the user settings label reflecting the label?\n\t */\n\tpublic abstract isWYSIWYG(): boolean;\n\n\t/**\n\t * Is the binding a chord?\n\t */\n\tpublic abstract isChord(): boolean;\n\n\t/**\n\t * Returns the parts that comprise of the keybinding.\n\t * Simple keybindings return one element.\n\t */\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching.\n\t */\n\tpublic abstract getDispatchParts(): (string | null)[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable><any>thing).dispose === 'function'\n\t\t&& (<IDisposable><any>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(disposables: T | T[] | undefined): T | T[] | undefined {\n\tif (Array.isArray(disposables)) {\n\t\tdisposables.forEach(d => {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t});\n\t\treturn [];\n\t} else if (disposables) {\n\t\tmarkTracked(disposables);\n\t\tdisposables.dispose();\n\t\treturn disposables;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as any as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as any as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterator, IteratorResult, FIN } from 'vs/base/common/iterator';\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\titerator(): Iterator<E> {\n\t\tlet element: { done: false; value: E; };\n\t\tlet node = this._first;\n\t\treturn {\n\t\t\tnext(): IteratorResult<E> {\n\t\t\t\tif (node === Node.Undefined) {\n\t\t\t\t\treturn FIN;\n\t\t\t\t}\n\n\t\t\t\tif (!element) {\n\t\t\t\t\telement = { done: false, value: node.element };\n\t\t\t\t} else {\n\t\t\t\t\telement.value = node.element;\n\t\t\t\t}\n\t\t\t\tnode = node.next;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(\"vs/editor/common/standalone/promise-polyfill/polyfill\", factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): this;\n\t\tremoveListener(event: string | symbol, listener: Function): this;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string;\n\t\t\tlet topCount: number = 0;\n\t\t\tthis._stacks.forEach((count, stack) => {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\t\tthis._deliveryQueue.push([e.value, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (let iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n\t\t\tthis._asyncDeliveryQueue.push([e.value, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\treadonly isCancellationRequested: boolean;\n\t/**\n\t * An event emitted when cancellation is requested\n\t * @event\n\t */\n\treadonly onCancellationRequested: Event<any>;\n}\n\nconst shortcutEvent = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n} as Event<any>);\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: any): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\tconst len = Math.min(a.length, b.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tlet codeA = a.charCodeAt(i);\n\t\tlet codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeA)) {\n\t\t\tcodeA += 32;\n\t\t}\n\n\t\tif (isUpperAsciiLetter(codeB)) {\n\t\t\tcodeB += 32;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\n\t\tif (diff === 0) {\n\t\t\t// equal -> ignoreCase\n\t\t\tcontinue;\n\n\t\t} else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compare(a.toLowerCase(), b.toLowerCase());\n\t\t}\n\t}\n\n\tif (a.length < b.length) {\n\t\treturn -1;\n\t} else if (a.length > b.length) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\nfunction substrEquals(a: string, aStart: number, aEnd: number, b: string, bStart: number, bEnd: number): boolean {\n\twhile (aStart < aEnd && bStart < bEnd) {\n\t\tif (a[aStart] !== b[bStart]) {\n\t\t\treturn false;\n\t\t}\n\t\taStart += 1;\n\t\tbStart += 1;\n\t}\n\treturn true;\n}\n\n/**\n * Return the overlap between the suffix of `a` and the prefix of `b`.\n * For instance `overlap(\"foobar\", \"arr, I'm a pirate\") === 2`.\n */\nexport function overlap(a: string, b: string): number {\n\tconst aEnd = a.length;\n\tlet bEnd = b.length;\n\tlet aStart = aEnd - bEnd;\n\n\tif (aStart === 0) {\n\t\treturn a === b ? aEnd : 0;\n\t} else if (aStart < 0) {\n\t\tbEnd += aStart;\n\t\taStart = 0;\n\t}\n\n\twhile (aStart < aEnd && bEnd > 0) {\n\t\tif (substrEquals(a, aStart, aEnd, b, 0, bEnd)) {\n\t\t\treturn bEnd;\n\t\t}\n\t\tbEnd -= 1;\n\t\taStart += 1;\n\t}\n\treturn 0;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tconst chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn ((charCode - 0xD800) << 10) + (nextCharCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn ((prevCharCode - 0xD800) << 10) + (charCode - 0xDC00) + 0x10000;\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (typeof (String.prototype as any).normalize !== 'function') {\n\t\t// ☹️ no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn (str as any).normalize('NFD').replace(regex, '');\n\t\t};\n\t}\n})();\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst _typeof = {\n\tnumber: 'number',\n\tstring: 'string',\n\tundefined: 'undefined',\n\tobject: 'object',\n\tfunction: 'function'\n};\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === _typeof.string || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === _typeof.object\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn typeof obj === _typeof.function;\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch{\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32Array(arr: number[]): Uint32Array {\n\tconst len = arr.length;\n\tconst r = new Uint32Array(len);\n\tfor (let i = 0; i < len; i++) {\n\t\tr[i] = toUint32(arr[i]);\n\t}\n\treturn r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn _makeFsPath(this);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new _URI(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new _URI(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new _URI(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new _URI('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new _URI(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new _URI(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// tslint:disable-next-line:class-name\nclass _URI extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = _makeFsPath(this);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri: URI): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\t// windows drive letter: file:///c:/far/boo\n\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { transformErrorForSerialization } from 'vs/base/common/errors';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as types from 'vs/base/common/types';\n\nconst INITIALIZE = '$initialize';\n\nexport interface IWorker extends IDisposable {\n\tgetId(): number;\n\tpostMessage(message: any, transfer: Transferable[]): void;\n}\n\nexport interface IWorkerCallback {\n\t(message: any): void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\ninterface IMessage {\n\tvsWorker: number;\n\treq?: string;\n\tseq?: string;\n}\n\ninterface IRequestMessage extends IMessage {\n\treq: string;\n\tmethod: string;\n\targs: any[];\n}\n\ninterface IReplyMessage extends IMessage {\n\tseq: string;\n\terr: any;\n\tres: any;\n}\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: any, transfer?: ArrayBuffer[]): void;\n\thandleMessage(method: string, args: any[]): Promise<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply; };\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(method: string, args: any[]): Promise<any> {\n\t\tlet req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\treq: req,\n\t\t\t\tmethod: method,\n\t\t\t\targs: args\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic handleMessage(message: IMessage): void {\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tprivate _handleMessage(msg: IMessage): void {\n\t\tif (msg.seq) {\n\t\t\tlet replyMessage = <IReplyMessage>msg;\n\t\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet reply = this._pendingReplies[replyMessage.seq];\n\t\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\t\tif (replyMessage.err) {\n\t\t\t\tlet err = replyMessage.err;\n\t\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\t\terr = new Error();\n\t\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t\t}\n\t\t\t\treply.reject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treply.resolve(replyMessage.res);\n\t\t\treturn;\n\t\t}\n\n\t\tlet requestMessage = <IRequestMessage>msg;\n\t\tlet req = requestMessage.req;\n\t\tlet result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: r,\n\t\t\t\terr: undefined\n\t\t\t});\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send({\n\t\t\t\tvsWorker: this._workerId,\n\t\t\t\tseq: req,\n\t\t\t\tres: undefined,\n\t\t\t\terr: transformErrorForSerialization(e)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _send(msg: IRequestMessage | IReplyMessage): void {\n\t\tlet transfer: ArrayBuffer[] = [];\n\t\tif (msg.req) {\n\t\t\tconst m = <IRequestMessage>msg;\n\t\t\tfor (let i = 0; i < m.args.length; i++) {\n\t\t\t\tif (m.args[i] instanceof ArrayBuffer) {\n\t\t\t\t\ttransfer.push(m.args[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst m = <IReplyMessage>msg;\n\t\t\tif (m.res instanceof ArrayBuffer) {\n\t\t\t\ttransfer.push(m.res);\n\t\t\t}\n\t\t}\n\t\tthis._handler.sendMessage(msg, transfer);\n\t}\n}\n\nexport interface IWorkerClient<W> {\n\tgetProxyObject(): Promise<W>;\n\tdispose(): void;\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<W extends object, H extends object> extends Disposable implements IWorkerClient<W> {\n\n\tprivate readonly _worker: IWorker;\n\tprivate readonly _onModuleLoaded: Promise<string[]>;\n\tprivate readonly _protocol: SimpleWorkerProtocol;\n\tprivate readonly _lazyProxy: Promise<W>;\n\n\tconstructor(workerFactory: IWorkerFactory, moduleId: string, host: H) {\n\t\tsuper();\n\n\t\tlet lazyProxyReject: ((err: any) => void) | null = null;\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t'vs/base/common/worker/simpleWorker',\n\t\t\t(msg: any) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err: any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tif (lazyProxyReject) {\n\t\t\t\t\tlazyProxyReject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tthis._worker.postMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => {\n\t\t\t\tif (typeof (host as any)[method] !== 'function') {\n\t\t\t\t\treturn Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\treturn Promise.resolve((host as any)[method].apply(host, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration: any = null;\n\t\tif (typeof (<any>self).require !== 'undefined' && typeof (<any>self).require.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = (<any>self).require.getConfig();\n\t\t} else if (typeof (<any>self).requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = (<any>self).requirejs.s.contexts._.config;\n\t\t}\n\n\t\tconst hostMethods = types.getAllMethodNames(host);\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tJSON.parse(JSON.stringify(loaderConfiguration)),\n\t\t\tmoduleId,\n\t\t\thostMethods,\n\t\t]);\n\n\t\t// Create proxy to loaded code\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._request(method, args);\n\t\t};\n\n\t\tthis._lazyProxy = new Promise<W>((resolve, reject) => {\n\t\t\tlazyProxyReject = reject;\n\t\t\tthis._onModuleLoaded.then((availableMethods: string[]) => {\n\t\t\t\tresolve(types.createProxyObject<W>(availableMethods, proxyMethodRequest));\n\t\t\t}, (e) => {\n\t\t\t\treject(e);\n\t\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getProxyObject(): Promise<W> {\n\t\treturn this._lazyProxy;\n\t}\n\n\tprivate _request(method: string, args: any[]): Promise<any> {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._onModuleLoaded.then(() => {\n\t\t\t\tthis._protocol.sendMessage(method, args).then(resolve, reject);\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\nexport interface IRequestHandlerFactory<H> {\n\t(host: H): IRequestHandler;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer<H extends object> {\n\n\tprivate _requestHandlerFactory: IRequestHandlerFactory<H> | null;\n\tprivate _requestHandler: IRequestHandler | null;\n\tprivate _protocol: SimpleWorkerProtocol;\n\n\tconstructor(postMessage: (msg: any, transfer?: Transferable[]) => void, requestHandlerFactory: IRequestHandlerFactory<H> | null) {\n\t\tthis._requestHandlerFactory = requestHandlerFactory;\n\t\tthis._requestHandler = null;\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tpostMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => this._handleMessage(method, args)\n\t\t});\n\t}\n\n\tpublic onmessage(msg: any): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(method: string, args: any[]): Promise<any> {\n\t\tif (method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <any>args[1], <string>args[2], <string[]>args[3]);\n\t\t}\n\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate initialize(workerId: number, loaderConfig: any, moduleId: string, hostMethods: string[]): Promise<string[]> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._protocol.sendMessage(method, args);\n\t\t};\n\n\t\tconst hostProxy = types.createProxyObject<H>(hostMethods, proxyMethodRequest);\n\n\t\tif (this._requestHandlerFactory) {\n\t\t\t// static request handler\n\t\t\tthis._requestHandler = this._requestHandlerFactory(hostProxy);\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._requestHandler));\n\t\t}\n\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\t(<any>self).require.config(loaderConfig);\n\t\t}\n\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\t// Use the global require to be sure to get the global config\n\t\t\t(<any>self).require([moduleId], (module: { create: IRequestHandlerFactory<H> }) => {\n\t\t\t\tthis._requestHandler = module.create(hostProxy);\n\n\t\t\t\tif (!this._requestHandler) {\n\t\t\t\t\treject(new Error(`No RequestHandler!`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(types.getAllMethodNames(this._requestHandler));\n\t\t\t}, reject);\n\t\t});\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(postMessage: (msg: string) => void): SimpleWorkerServer<any> {\n\treturn new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/base/common/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprivate _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprivate _map: Map<number, number>;\n\n\tprivate _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tlet defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tlet value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tlet aLineNumber = a.lineNumber | 0;\n\t\tlet bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tlet aColumn = a.column | 0;\n\t\t\tlet bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tlet otherStartLineNumber = b.startLineNumber;\n\t\tlet otherStartColumn = b.startColumn;\n\t\tlet otherEndLineNumber = b.endLineNumber;\n\t\tlet otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\treadonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\treadonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\treadonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\treadonly positionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport const enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tpublic readonly selectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tpublic readonly selectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpublic readonly positionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpublic readonly positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t}\n\n\t/**\n\t * Transform to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\t/**\n\t * Test if equals other selection.\n\t */\n\tpublic equalsSelection(other: ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two selections are equal.\n\t */\n\tpublic static selectionsEqual(a: ISelection, b: ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tpublic getDirection(): SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn SelectionDirection.LTR;\n\t\t}\n\t\treturn SelectionDirection.RTL;\n\t}\n\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t/**\n\t * Get the position at `positionLineNumber` and `positionColumn`.\n\t */\n\tpublic getPosition(): Position {\n\t\treturn new Position(this.positionLineNumber, this.positionColumn);\n\t}\n\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Selection {\n\t\tif (this.getDirection() === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\t/**\n\t * Create a `Selection` from one or two positions\n\t */\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Selection {\n\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Selection` from an `ISelection`.\n\t */\n\tpublic static liftSelection(sel: ISelection): Selection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\t/**\n\t * `a` equals `b`.\n\t */\n\tpublic static selectionsArrEqual(a: ISelection[], b: ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `obj` is an `ISelection`.\n\t */\n\tpublic static isISelection(obj: any): obj is ISelection {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Create with a direction.\n\t */\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction: SelectionDirection): Selection {\n\n\t\tif (direction === SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IState } from 'vs/editor/common/modes';\n\nexport class Token {\n\t_tokenBrand: void;\n\n\tpublic readonly offset: number;\n\tpublic readonly type: string;\n\tpublic readonly language: string;\n\n\tconstructor(offset: number, type: string, language: string) {\n\t\tthis.offset = offset | 0;// @perf\n\t\tthis.type = type;\n\t\tthis.language = language;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.offset + ', ' + this.type + ')';\n\t}\n}\n\nexport class TokenizationResult {\n\t_tokenizationResultBrand: void;\n\n\tpublic readonly tokens: Token[];\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Token[], endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n\nexport class TokenizationResult2 {\n\t_tokenizationResult2Brand: void;\n\n\t/**\n\t * The tokens in binary format. Each token occupies two array indices. For token i:\n\t *  - at offset 2*i => startIndex\n\t *  - at offset 2*i + 1 => metadata\n\t *\n\t */\n\tpublic readonly tokens: Uint32Array;\n\tpublic readonly endState: IState;\n\n\tconstructor(tokens: Uint32Array, endState: IState) {\n\t\tthis.tokens = tokens;\n\t\tthis.endState = endState;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffChange, ISequence, LcsDiff, IDiffResult } from 'vs/base/common/diff/diff';\nimport * as strings from 'vs/base/common/strings';\nimport { ICharChange, ILineChange } from 'vs/editor/common/editorCommon';\n\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\nexport interface IDiffComputerResult {\n\tquitEarly: boolean;\n\tchanges: ILineChange[];\n}\n\nfunction computeDiff(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: () => boolean, pretty: boolean): IDiffResult {\n\tconst diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n\treturn diffAlgo.ComputeDiff(pretty);\n}\n\nclass LineSequence implements ISequence {\n\n\tpublic readonly lines: string[];\n\tprivate readonly _startColumns: number[];\n\tprivate readonly _endColumns: number[];\n\n\tconstructor(lines: string[]) {\n\t\tconst startColumns: number[] = [];\n\t\tconst endColumns: number[] = [];\n\t\tfor (let i = 0, length = lines.length; i < length; i++) {\n\t\t\tstartColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n\t\t\tendColumns[i] = getLastNonBlankColumn(lines[i], 1);\n\t\t}\n\t\tthis.lines = lines;\n\t\tthis._startColumns = startColumns;\n\t\tthis._endColumns = endColumns;\n\t}\n\n\tpublic getElements(): Int32Array | number[] | string[] {\n\t\tconst elements: string[] = [];\n\t\tfor (let i = 0, len = this.lines.length; i < len; i++) {\n\t\t\telements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n\t\t}\n\t\treturn elements;\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn i + 1;\n\t}\n\n\tpublic createCharSequence(shouldIgnoreTrimWhitespace: boolean, startIndex: number, endIndex: number): CharSequence {\n\t\tconst charCodes: number[] = [];\n\t\tconst lineNumbers: number[] = [];\n\t\tconst columns: number[] = [];\n\t\tlet len = 0;\n\t\tfor (let index = startIndex; index <= endIndex; index++) {\n\t\t\tconst lineContent = this.lines[index];\n\t\t\tconst startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n\t\t\tconst endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n\t\t\tfor (let col = startColumn; col < endColumn; col++) {\n\t\t\t\tcharCodes[len] = lineContent.charCodeAt(col - 1);\n\t\t\t\tlineNumbers[len] = index + 1;\n\t\t\t\tcolumns[len] = col;\n\t\t\t\tlen++;\n\t\t\t}\n\t\t}\n\t\treturn new CharSequence(charCodes, lineNumbers, columns);\n\t}\n}\n\nclass CharSequence implements ISequence {\n\n\tprivate readonly _charCodes: number[];\n\tprivate readonly _lineNumbers: number[];\n\tprivate readonly _columns: number[];\n\n\tconstructor(charCodes: number[], lineNumbers: number[], columns: number[]) {\n\t\tthis._charCodes = charCodes;\n\t\tthis._lineNumbers = lineNumbers;\n\t\tthis._columns = columns;\n\t}\n\n\tpublic getElements(): Int32Array | number[] | string[] {\n\t\treturn this._charCodes;\n\t}\n\n\tpublic getStartLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getStartColumn(i: number): number {\n\t\treturn this._columns[i];\n\t}\n\n\tpublic getEndLineNumber(i: number): number {\n\t\treturn this._lineNumbers[i];\n\t}\n\n\tpublic getEndColumn(i: number): number {\n\t\treturn this._columns[i] + 1;\n\t}\n}\n\nclass CharChange implements ICharChange {\n\n\tpublic originalStartLineNumber: number;\n\tpublic originalStartColumn: number;\n\tpublic originalEndLineNumber: number;\n\tpublic originalEndColumn: number;\n\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedStartColumn: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic modifiedEndColumn: number;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalStartColumn: number,\n\t\toriginalEndLineNumber: number,\n\t\toriginalEndColumn: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedStartColumn: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tmodifiedEndColumn: number\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalStartColumn = originalStartColumn;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.originalEndColumn = originalEndColumn;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedStartColumn = modifiedStartColumn;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.modifiedEndColumn = modifiedEndColumn;\n\t}\n\n\tpublic static createFromDiffChange(diffChange: IDiffChange, originalCharSequence: CharSequence, modifiedCharSequence: CharSequence): CharChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalStartColumn: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet originalEndColumn: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedStartColumn: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet modifiedEndColumn: number;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = 0;\n\t\t\toriginalStartColumn = 0;\n\t\t\toriginalEndLineNumber = 0;\n\t\t\toriginalEndColumn = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\toriginalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = 0;\n\t\t\tmodifiedStartColumn = 0;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t\tmodifiedEndColumn = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t\tmodifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\treturn new CharChange(\n\t\t\toriginalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn,\n\t\t\tmodifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn,\n\t\t);\n\t}\n}\n\nfunction postProcessCharChanges(rawChanges: IDiffChange[]): IDiffChange[] {\n\tif (rawChanges.length <= 1) {\n\t\treturn rawChanges;\n\t}\n\n\tconst result = [rawChanges[0]];\n\tlet prevChange = result[0];\n\n\tfor (let i = 1, len = rawChanges.length; i < len; i++) {\n\t\tconst currChange = rawChanges[i];\n\n\t\tconst originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n\t\tconst modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n\t\t// Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\t\tconst matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n\t\tif (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n\t\t\t// Merge the current change into the previous one\n\t\t\tprevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n\t\t\tprevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n\t\t} else {\n\t\t\t// Add the current change\n\t\t\tresult.push(currChange);\n\t\t\tprevChange = currChange;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass LineChange implements ILineChange {\n\tpublic originalStartLineNumber: number;\n\tpublic originalEndLineNumber: number;\n\tpublic modifiedStartLineNumber: number;\n\tpublic modifiedEndLineNumber: number;\n\tpublic charChanges: CharChange[] | undefined;\n\n\tconstructor(\n\t\toriginalStartLineNumber: number,\n\t\toriginalEndLineNumber: number,\n\t\tmodifiedStartLineNumber: number,\n\t\tmodifiedEndLineNumber: number,\n\t\tcharChanges: CharChange[] | undefined\n\t) {\n\t\tthis.originalStartLineNumber = originalStartLineNumber;\n\t\tthis.originalEndLineNumber = originalEndLineNumber;\n\t\tthis.modifiedStartLineNumber = modifiedStartLineNumber;\n\t\tthis.modifiedEndLineNumber = modifiedEndLineNumber;\n\t\tthis.charChanges = charChanges;\n\t}\n\n\tpublic static createFromDiffResult(shouldIgnoreTrimWhitespace: boolean, diffChange: IDiffChange, originalLineSequence: LineSequence, modifiedLineSequence: LineSequence, continueCharDiff: () => boolean, shouldComputeCharChanges: boolean, shouldPostProcessCharChanges: boolean): LineChange {\n\t\tlet originalStartLineNumber: number;\n\t\tlet originalEndLineNumber: number;\n\t\tlet modifiedStartLineNumber: number;\n\t\tlet modifiedEndLineNumber: number;\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\n\t\tif (diffChange.originalLength === 0) {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n\t\t\toriginalEndLineNumber = 0;\n\t\t} else {\n\t\t\toriginalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n\t\t\toriginalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n\t\t}\n\n\t\tif (diffChange.modifiedLength === 0) {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n\t\t\tmodifiedEndLineNumber = 0;\n\t\t} else {\n\t\t\tmodifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n\t\t\tmodifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\t\t}\n\n\t\tif (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n\t\t\t// Compute character changes for diff chunks of at most 20 lines...\n\t\t\tconst originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n\t\t\tconst modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n\n\t\t\tlet rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n\n\t\t\tif (shouldPostProcessCharChanges) {\n\t\t\t\trawChanges = postProcessCharChanges(rawChanges);\n\t\t\t}\n\n\t\t\tcharChanges = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tcharChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n\t\t\t}\n\t\t}\n\n\t\treturn new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n\t}\n}\n\nexport interface IDiffComputerOpts {\n\tshouldComputeCharChanges: boolean;\n\tshouldPostProcessCharChanges: boolean;\n\tshouldIgnoreTrimWhitespace: boolean;\n\tshouldMakePrettyDiff: boolean;\n\tmaxComputationTime: number;\n}\n\nexport class DiffComputer {\n\n\tprivate readonly shouldComputeCharChanges: boolean;\n\tprivate readonly shouldPostProcessCharChanges: boolean;\n\tprivate readonly shouldIgnoreTrimWhitespace: boolean;\n\tprivate readonly shouldMakePrettyDiff: boolean;\n\tprivate readonly originalLines: string[];\n\tprivate readonly modifiedLines: string[];\n\tprivate readonly original: LineSequence;\n\tprivate readonly modified: LineSequence;\n\tprivate readonly continueLineDiff: () => boolean;\n\tprivate readonly continueCharDiff: () => boolean;\n\n\tconstructor(originalLines: string[], modifiedLines: string[], opts: IDiffComputerOpts) {\n\t\tthis.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n\t\tthis.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n\t\tthis.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n\t\tthis.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n\t\tthis.originalLines = originalLines;\n\t\tthis.modifiedLines = modifiedLines;\n\t\tthis.original = new LineSequence(originalLines);\n\t\tthis.modified = new LineSequence(modifiedLines);\n\n\t\tthis.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n\t\tthis.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n\t}\n\n\tpublic computeDiff(): IDiffComputerResult {\n\n\t\tif (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n\t\t\t// empty original => fast path\n\t\t\treturn {\n\t\t\t\tquitEarly: false,\n\t\t\t\tchanges: [{\n\t\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\t\toriginalEndLineNumber: 1,\n\t\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\t\tmodifiedEndLineNumber: this.modified.lines.length,\n\t\t\t\t\tcharChanges: [{\n\t\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\n\t\tif (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n\t\t\t// empty modified => fast path\n\t\t\treturn {\n\t\t\t\tquitEarly: false,\n\t\t\t\tchanges: [{\n\t\t\t\t\toriginalStartLineNumber: 1,\n\t\t\t\t\toriginalEndLineNumber: this.original.lines.length,\n\t\t\t\t\tmodifiedStartLineNumber: 1,\n\t\t\t\t\tmodifiedEndLineNumber: 1,\n\t\t\t\t\tcharChanges: [{\n\t\t\t\t\t\tmodifiedEndColumn: 0,\n\t\t\t\t\t\tmodifiedEndLineNumber: 0,\n\t\t\t\t\t\tmodifiedStartColumn: 0,\n\t\t\t\t\t\tmodifiedStartLineNumber: 0,\n\t\t\t\t\t\toriginalEndColumn: 0,\n\t\t\t\t\t\toriginalEndLineNumber: 0,\n\t\t\t\t\t\toriginalStartColumn: 0,\n\t\t\t\t\t\toriginalStartLineNumber: 0\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\n\t\tconst diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n\t\tconst rawChanges = diffResult.changes;\n\t\tconst quitEarly = diffResult.quitEarly;\n\n\t\t// The diff is always computed with ignoring trim whitespace\n\t\t// This ensures we get the prettiest diff\n\n\t\tif (this.shouldIgnoreTrimWhitespace) {\n\t\t\tconst lineChanges: LineChange[] = [];\n\t\t\tfor (let i = 0, length = rawChanges.length; i < length; i++) {\n\t\t\t\tlineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tquitEarly: quitEarly,\n\t\t\t\tchanges: lineChanges\n\t\t\t};\n\t\t}\n\n\t\t// Need to post-process and introduce changes where the trim whitespace is different\n\t\t// Note that we are looping starting at -1 to also cover the lines before the first change\n\t\tconst result: LineChange[] = [];\n\n\t\tlet originalLineIndex = 0;\n\t\tlet modifiedLineIndex = 0;\n\t\tfor (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n\t\t\tconst nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n\t\t\tconst originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n\t\t\tconst modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n\n\t\t\twhile (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n\t\t\t\tconst originalLine = this.originalLines[originalLineIndex];\n\t\t\t\tconst modifiedLine = this.modifiedLines[modifiedLineIndex];\n\n\t\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\t\t// These lines differ only in trim whitespace\n\n\t\t\t\t\t// Check the leading whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\twhile (originalStartColumn > 1 && modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n\t\t\t\t\t\t\tconst modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalStartColumn--;\n\t\t\t\t\t\t\tmodifiedStartColumn--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalStartColumn > 1 || modifiedStartColumn > 1) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, 1, originalStartColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, 1, modifiedStartColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check the trailing whitespace\n\t\t\t\t\t{\n\t\t\t\t\t\tlet originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n\t\t\t\t\t\tlet modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n\t\t\t\t\t\tconst originalMaxColumn = originalLine.length + 1;\n\t\t\t\t\t\tconst modifiedMaxColumn = modifiedLine.length + 1;\n\t\t\t\t\t\twhile (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tconst originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n\t\t\t\t\t\t\tconst modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n\t\t\t\t\t\t\tif (originalChar !== modifiedChar) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toriginalEndColumn++;\n\t\t\t\t\t\t\tmodifiedEndColumn++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n\t\t\t\t\t\t\tthis._pushTrimWhitespaceCharChange(result,\n\t\t\t\t\t\t\t\toriginalLineIndex + 1, originalEndColumn, originalMaxColumn,\n\t\t\t\t\t\t\t\tmodifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\toriginalLineIndex++;\n\t\t\t\tmodifiedLineIndex++;\n\t\t\t}\n\n\t\t\tif (nextChange) {\n\t\t\t\t// Emit the actual change\n\t\t\t\tresult.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n\n\t\t\t\toriginalLineIndex += nextChange.originalLength;\n\t\t\t\tmodifiedLineIndex += nextChange.modifiedLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tquitEarly: quitEarly,\n\t\t\tchanges: result\n\t\t};\n\t}\n\n\tprivate _pushTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): void {\n\t\tif (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n\t\t\t// Merged into previous\n\t\t\treturn;\n\t\t}\n\n\t\tlet charChanges: CharChange[] | undefined = undefined;\n\t\tif (this.shouldComputeCharChanges) {\n\t\t\tcharChanges = [new CharChange(\n\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t)];\n\t\t}\n\t\tresult.push(new LineChange(\n\t\t\toriginalLineNumber, originalLineNumber,\n\t\t\tmodifiedLineNumber, modifiedLineNumber,\n\t\t\tcharChanges\n\t\t));\n\t}\n\n\tprivate _mergeTrimWhitespaceCharChange(\n\t\tresult: LineChange[],\n\t\toriginalLineNumber: number, originalStartColumn: number, originalEndColumn: number,\n\t\tmodifiedLineNumber: number, modifiedStartColumn: number, modifiedEndColumn: number\n\t): boolean {\n\t\tconst len = result.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst prevChange = result[len - 1];\n\n\t\tif (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n\t\t\t// Don't merge with inserts/deletes\n\t\t\treturn false;\n\t\t}\n\n\t\tif (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n\t\t\tprevChange.originalEndLineNumber = originalLineNumber;\n\t\t\tprevChange.modifiedEndLineNumber = modifiedLineNumber;\n\t\t\tif (this.shouldComputeCharChanges && prevChange.charChanges) {\n\t\t\t\tprevChange.charChanges.push(new CharChange(\n\t\t\t\t\toriginalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn,\n\t\t\t\t\tmodifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn\n\t\t\t\t));\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nfunction getFirstNonBlankColumn(txt: string, defaultValue: number): number {\n\tconst r = strings.firstNonWhitespaceIndex(txt);\n\tif (r === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn r + 1;\n}\n\nfunction getLastNonBlankColumn(txt: string, defaultValue: number): number {\n\tconst r = strings.lastNonWhitespaceIndex(txt);\n\tif (r === -1) {\n\t\treturn defaultValue;\n\t}\n\treturn r + 2;\n}\n\nfunction createContinueProcessingPredicate(maximumRuntime: number): () => boolean {\n\tif (maximumRuntime === 0) {\n\t\treturn () => true;\n\t}\n\n\tconst startTime = Date.now();\n\treturn () => {\n\t\treturn Date.now() - startTime < maximumRuntime;\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWordAtPosition } from 'vs/editor/common/model';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif ((wordDefinition as any).unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\nfunction getWordAtPosFast(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// find whitespace enclosed text around column and match from there\n\n\tlet pos = column - 1 - textOffset;\n\tlet start = text.lastIndexOf(' ', pos - 1) + 1;\n\n\twordDefinition.lastIndex = start;\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\n\nfunction getWordAtPosSlow(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\t// matches all words starting at the beginning\n\t// of the input until it finds a match that encloses\n\t// the desired column. slow but correct\n\n\tlet pos = column - 1 - textOffset;\n\twordDefinition.lastIndex = 0;\n\n\tlet match: RegExpMatchArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex > pos) {\n\t\t\t// |nW -> matched only after the pos\n\t\t\treturn null;\n\n\t\t} else if (wordDefinition.lastIndex >= pos) {\n\t\t\t// W|W -> match encloses pos\n\t\t\treturn {\n\t\t\t\tword: match[0],\n\t\t\t\tstartColumn: textOffset + 1 + matchIndex,\n\t\t\t\tendColumn: textOffset + 1 + wordDefinition.lastIndex\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number): IWordAtPosition | null {\n\n\t// if `words` can contain whitespace character we have to use the slow variant\n\t// otherwise we use the fast variant of finding a word\n\twordDefinition.lastIndex = 0;\n\tlet match = wordDefinition.exec(text);\n\tif (!match) {\n\t\treturn null;\n\t}\n\t// todo@joh the `match` could already be the (first) word\n\tconst ret = match[0].indexOf(' ') >= 0\n\t\t// did match a word which contains a space character -> use slow word find\n\t\t? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n\t\t// sane word definition -> use fast word find\n\t\t: getWordAtPosFast(column, wordDefinition, text, textOffset);\n\n\t// both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n\t// in an undefined state and to not confuse other users of the wordDefinition\n\t// we reset the lastIndex\n\twordDefinition.lastIndex = 0;\n\n\treturn ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\nimport { ILink } from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n\tInvalid = 0,\n\tStart = 1,\n\tH = 2,\n\tHT = 3,\n\tHTT = 4,\n\tHTTP = 5,\n\tF = 6,\n\tFI = 7,\n\tFIL = 8,\n\tBeforeColon = 9,\n\tAfterColon = 10,\n\tAlmostThere = 11,\n\tEnd = 12,\n\tAccept = 13,\n\tLastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class Uint8Matrix {\n\n\tprivate readonly _data: Uint8Array;\n\tpublic readonly rows: number;\n\tpublic readonly cols: number;\n\n\tconstructor(rows: number, cols: number, defaultValue: number) {\n\t\tconst data = new Uint8Array(rows * cols);\n\t\tfor (let i = 0, len = rows * cols; i < len; i++) {\n\t\t\tdata[i] = defaultValue;\n\t\t}\n\n\t\tthis._data = data;\n\t\tthis.rows = rows;\n\t\tthis.cols = cols;\n\t}\n\n\tpublic get(row: number, col: number): number {\n\t\treturn this._data[row * this.cols + col];\n\t}\n\n\tpublic set(row: number, col: number, value: number): void {\n\t\tthis._data[row * this.cols + col] = value;\n\t}\n}\n\nexport class StateMachine {\n\n\tprivate readonly _states: Uint8Matrix;\n\tprivate readonly _maxCharCode: number;\n\n\tconstructor(edges: Edge[]) {\n\t\tlet maxCharCode = 0;\n\t\tlet maxState = State.Invalid;\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tif (chCode > maxCharCode) {\n\t\t\t\tmaxCharCode = chCode;\n\t\t\t}\n\t\t\tif (from > maxState) {\n\t\t\t\tmaxState = from;\n\t\t\t}\n\t\t\tif (to > maxState) {\n\t\t\t\tmaxState = to;\n\t\t\t}\n\t\t}\n\n\t\tmaxCharCode++;\n\t\tmaxState++;\n\n\t\tlet states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n\t\tfor (let i = 0, len = edges.length; i < len; i++) {\n\t\t\tlet [from, chCode, to] = edges[i];\n\t\t\tstates.set(from, chCode, to);\n\t\t}\n\n\t\tthis._states = states;\n\t\tthis._maxCharCode = maxCharCode;\n\t}\n\n\tpublic nextState(currentState: State, chCode: number): State {\n\t\tif (chCode < 0 || chCode >= this._maxCharCode) {\n\t\t\treturn State.Invalid;\n\t\t}\n\t\treturn this._states.get(currentState, chCode);\n\t}\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n\tif (_stateMachine === null) {\n\t\t_stateMachine = new StateMachine([\n\t\t\t[State.Start, CharCode.h, State.H],\n\t\t\t[State.Start, CharCode.H, State.H],\n\t\t\t[State.Start, CharCode.f, State.F],\n\t\t\t[State.Start, CharCode.F, State.F],\n\n\t\t\t[State.H, CharCode.t, State.HT],\n\t\t\t[State.H, CharCode.T, State.HT],\n\n\t\t\t[State.HT, CharCode.t, State.HTT],\n\t\t\t[State.HT, CharCode.T, State.HTT],\n\n\t\t\t[State.HTT, CharCode.p, State.HTTP],\n\t\t\t[State.HTT, CharCode.P, State.HTTP],\n\n\t\t\t[State.HTTP, CharCode.s, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.S, State.BeforeColon],\n\t\t\t[State.HTTP, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.F, CharCode.i, State.FI],\n\t\t\t[State.F, CharCode.I, State.FI],\n\n\t\t\t[State.FI, CharCode.l, State.FIL],\n\t\t\t[State.FI, CharCode.L, State.FIL],\n\n\t\t\t[State.FIL, CharCode.e, State.BeforeColon],\n\t\t\t[State.FIL, CharCode.E, State.BeforeColon],\n\n\t\t\t[State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n\t\t\t[State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n\t\t\t[State.AlmostThere, CharCode.Slash, State.End],\n\t\t]);\n\t}\n\treturn _stateMachine;\n}\n\n\nconst enum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n\tif (_classifier === null) {\n\t\t_classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n\t\tconst FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n\t\tfor (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n\t\t}\n\n\t\tconst CANNOT_END_WITH_CHARACTERS = '.,;';\n\t\tfor (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n\t\t\t_classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n\t\t}\n\t}\n\treturn _classifier;\n}\n\nexport class LinkComputer {\n\n\tprivate static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n\t\t// Do not allow to end link in certain characters...\n\t\tlet lastIncludedCharIndex = linkEndIndex - 1;\n\t\tdo {\n\t\t\tconst chCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\tconst chClass = classifier.get(chCode);\n\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlastIncludedCharIndex--;\n\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t// Handle links enclosed in parens, square brackets and curlys.\n\t\tif (linkBeginIndex > 0) {\n\t\t\tconst charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n\t\t\tconst lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n\t\t\tif (\n\t\t\t\t(charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n\t\t\t\t|| (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n\t\t\t) {\n\t\t\t\t// Do not end in ) if ( is before the link start\n\t\t\t\t// Do not end in ] if [ is before the link start\n\t\t\t\t// Do not end in } if { is before the link start\n\t\t\t\tlastIncludedCharIndex--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: lastIncludedCharIndex + 2\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n\t\tconst classifier = getClassifier();\n\n\t\tlet result: ILink[] = [];\n\t\tfor (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tconst line = model.getLineContent(i);\n\t\t\tconst len = line.length;\n\n\t\t\tlet j = 0;\n\t\t\tlet linkBeginIndex = 0;\n\t\t\tlet linkBeginChCode = 0;\n\t\t\tlet state = State.Start;\n\t\t\tlet hasOpenParens = false;\n\t\t\tlet hasOpenSquareBracket = false;\n\t\t\tlet hasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\n\t\t\t\tlet resetStateMachine = false;\n\t\t\t\tconst chCode = line.charCodeAt(j);\n\n\t\t\t\tif (state === State.Accept) {\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase CharCode.OpenParen:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseParen:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenSquareBracket:\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseSquareBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.OpenCurlyBrace:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.CloseCurlyBrace:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t/* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\t\t\t\t\t\tcase CharCode.SingleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.DoubleQuote:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.BackTick:\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase CharCode.Asterisk:\n\t\t\t\t\t\t\t// `*` terminates a link if the link began with `*`\n\t\t\t\t\t\t\tchClass = (linkBeginChCode === CharCode.Asterisk) ? CharacterClass.ForceTermination : CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === State.End) {\n\n\t\t\t\t\tlet chClass: CharacterClass;\n\t\t\t\t\tif (chCode === CharCode.OpenSquareBracket) {\n\t\t\t\t\t\t// Allow for the authority part to contain ipv6 addresses which contain [ and ]\n\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchClass = classifier.get(chCode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = State.Accept;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate = stateMachine.nextState(state, chCode);\n\t\t\t\t\tif (state === State.Invalid) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = State.Start;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t\tlinkBeginChCode = chCode;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === State.Accept) {\n\t\t\t\tresult.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model: ILinkComputerTarget | null): ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IInplaceReplaceSupportResult } from 'vs/editor/common/modes';\n\nexport class BasicInplaceReplace {\n\n\tpublic static readonly INSTANCE = new BasicInplaceReplace();\n\n\tpublic navigateValueSet(range1: IRange, text1: string, range2: IRange, text2: string | null, up: boolean): IInplaceReplaceSupportResult | null {\n\n\t\tif (range1 && text1) {\n\t\t\tlet result = this.doNavigateValueSet(text1, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range1,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range2 && text2) {\n\t\t\tlet result = this.doNavigateValueSet(text2, up);\n\t\t\tif (result) {\n\t\t\t\treturn {\n\t\t\t\t\trange: range2,\n\t\t\t\t\tvalue: result\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doNavigateValueSet(text: string, up: boolean): string | null {\n\t\tlet numberResult = this.numberReplace(text, up);\n\t\tif (numberResult !== null) {\n\t\t\treturn numberResult;\n\t\t}\n\t\treturn this.textReplace(text, up);\n\t}\n\n\tprivate numberReplace(value: string, up: boolean): string | null {\n\t\tlet precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n\t\tlet n1 = Number(value);\n\t\tlet n2 = parseFloat(value);\n\n\t\tif (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\n\t\t\tif (n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n\t\t\t\t//\t\t\t} else if(n1 === 9 && up) {\n\t\t\t\t//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate readonly _defaultValueSet: string[][] = [\n\t\t['true', 'false'],\n\t\t['True', 'False'],\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n\t\t['public', 'protected', 'private'],\n\t];\n\n\tprivate textReplace(value: string, up: boolean): string | null {\n\t\treturn this.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprivate valueSetsReplace(valueSets: string[][], value: string, up: boolean): string | null {\n\t\tlet result: string | null = null;\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate valueSetReplace(valueSet: string[], value: string, up: boolean): string | null {\n\t\tlet idx = valueSet.indexOf(value);\n\t\tif (idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif (idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\n\n\nexport enum AccessibilitySupport {\n\t/**\n\t * This should be the browser case where it is not known if a screen reader is attached or no.\n\t */\n\tUnknown = 0,\n\tDisabled = 1,\n\tEnabled = 2\n}\n\nexport enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 1,\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 4\n}\n\nexport enum CompletionItemKind {\n\tMethod = 0,\n\tFunction = 1,\n\tConstructor = 2,\n\tField = 3,\n\tVariable = 4,\n\tClass = 5,\n\tStruct = 6,\n\tInterface = 7,\n\tModule = 8,\n\tProperty = 9,\n\tEvent = 10,\n\tOperator = 11,\n\tUnit = 12,\n\tValue = 13,\n\tConstant = 14,\n\tEnum = 15,\n\tEnumMember = 16,\n\tKeyword = 17,\n\tText = 18,\n\tColor = 19,\n\tFile = 20,\n\tReference = 21,\n\tCustomcolor = 22,\n\tFolder = 23,\n\tTypeParameter = 24,\n\tSnippet = 25\n}\n\nexport enum CompletionItemTag {\n\tDeprecated = 1\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n\n/**\n * A positioning preference for rendering content widgets.\n */\nexport enum ContentWidgetPositionPreference {\n\t/**\n\t * Place the content widget exactly at a position\n\t */\n\tEXACT = 0,\n\t/**\n\t * Place the content widget above a position\n\t */\n\tABOVE = 1,\n\t/**\n\t * Place the content widget below a position\n\t */\n\tBELOW = 2\n}\n\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport enum CursorChangeReason {\n\t/**\n\t * Unknown or not set.\n\t */\n\tNotSet = 0,\n\t/**\n\t * A `model.setValue()` was called.\n\t */\n\tContentFlush = 1,\n\t/**\n\t * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n\t */\n\tRecoverFromMarkers = 2,\n\t/**\n\t * There was an explicit user gesture.\n\t */\n\tExplicit = 3,\n\t/**\n\t * There was a Paste.\n\t */\n\tPaste = 4,\n\t/**\n\t * There was an Undo.\n\t */\n\tUndo = 5,\n\t/**\n\t * There was a Redo.\n\t */\n\tRedo = 6\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText = 0,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead = 1,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite = 2\n}\n\n/**\n * Configuration options for auto indentation in the editor\n */\nexport enum EditorAutoIndentStrategy {\n\tNone = 0,\n\tKeep = 1,\n\tBrackets = 2,\n\tAdvanced = 3,\n\tFull = 4\n}\n\nexport enum EditorOption {\n\tacceptSuggestionOnCommitCharacter = 0,\n\tacceptSuggestionOnEnter = 1,\n\taccessibilitySupport = 2,\n\taccessibilityPageSize = 3,\n\tariaLabel = 4,\n\tautoClosingBrackets = 5,\n\tautoClosingOvertype = 6,\n\tautoClosingQuotes = 7,\n\tautoIndent = 8,\n\tautomaticLayout = 9,\n\tautoSurround = 10,\n\tcodeLens = 11,\n\tcolorDecorators = 12,\n\tcontextmenu = 13,\n\tcopyWithSyntaxHighlighting = 14,\n\tcursorBlinking = 15,\n\tcursorSmoothCaretAnimation = 16,\n\tcursorStyle = 17,\n\tcursorSurroundingLines = 18,\n\tcursorSurroundingLinesStyle = 19,\n\tcursorWidth = 20,\n\tdisableLayerHinting = 21,\n\tdisableMonospaceOptimizations = 22,\n\tdragAndDrop = 23,\n\temptySelectionClipboard = 24,\n\textraEditorClassName = 25,\n\tfastScrollSensitivity = 26,\n\tfind = 27,\n\tfixedOverflowWidgets = 28,\n\tfolding = 29,\n\tfoldingStrategy = 30,\n\tfontFamily = 31,\n\tfontInfo = 32,\n\tfontLigatures = 33,\n\tfontSize = 34,\n\tfontWeight = 35,\n\tformatOnPaste = 36,\n\tformatOnType = 37,\n\tglyphMargin = 38,\n\tgotoLocation = 39,\n\thideCursorInOverviewRuler = 40,\n\thighlightActiveIndentGuide = 41,\n\thover = 42,\n\tinDiffEditor = 43,\n\tletterSpacing = 44,\n\tlightbulb = 45,\n\tlineDecorationsWidth = 46,\n\tlineHeight = 47,\n\tlineNumbers = 48,\n\tlineNumbersMinChars = 49,\n\tlinks = 50,\n\tmatchBrackets = 51,\n\tminimap = 52,\n\tmouseStyle = 53,\n\tmouseWheelScrollSensitivity = 54,\n\tmouseWheelZoom = 55,\n\tmultiCursorMergeOverlapping = 56,\n\tmultiCursorModifier = 57,\n\tmultiCursorPaste = 58,\n\toccurrencesHighlight = 59,\n\toverviewRulerBorder = 60,\n\toverviewRulerLanes = 61,\n\tparameterHints = 62,\n\tquickSuggestions = 63,\n\tquickSuggestionsDelay = 64,\n\treadOnly = 65,\n\trenderControlCharacters = 66,\n\trenderIndentGuides = 67,\n\trenderFinalNewline = 68,\n\trenderLineHighlight = 69,\n\trenderWhitespace = 70,\n\trevealHorizontalRightPadding = 71,\n\troundedSelection = 72,\n\trulers = 73,\n\tscrollbar = 74,\n\tscrollBeyondLastColumn = 75,\n\tscrollBeyondLastLine = 76,\n\tselectionClipboard = 77,\n\tselectionHighlight = 78,\n\tselectOnLineNumbers = 79,\n\tshowFoldingControls = 80,\n\tshowUnused = 81,\n\tsnippetSuggestions = 82,\n\tsmoothScrolling = 83,\n\tstopRenderingLineAfter = 84,\n\tsuggest = 85,\n\tsuggestFontSize = 86,\n\tsuggestLineHeight = 87,\n\tsuggestOnTriggerCharacters = 88,\n\tsuggestSelection = 89,\n\ttabCompletion = 90,\n\tuseTabStops = 91,\n\twordSeparators = 92,\n\twordWrap = 93,\n\twordWrapBreakAfterCharacters = 94,\n\twordWrapBreakBeforeCharacters = 95,\n\twordWrapBreakObtrusiveCharacters = 96,\n\twordWrapColumn = 97,\n\twordWrapMinified = 98,\n\twrappingIndent = 99,\n\teditorClassName = 100,\n\tpixelRatio = 101,\n\ttabFocusMode = 102,\n\tlayoutInfo = 103,\n\twrappingInfo = 104\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport enum IndentAction {\n\t/**\n\t * Insert new line and copy the previous line's indentation.\n\t */\n\tNone = 0,\n\t/**\n\t * Insert new line and indent once (relative to the previous line's indentation).\n\t */\n\tIndent = 1,\n\t/**\n\t * Insert two new lines:\n\t *  - the first one indented which will hold the cursor\n\t *  - the second one at the same indentation level\n\t */\n\tIndentOutdent = 2,\n\t/**\n\t * Insert new line and outdent once (relative to the previous line's indentation).\n\t */\n\tOutdent = 3\n}\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\tBackspace = 1,\n\tTab = 2,\n\tEnter = 3,\n\tShift = 4,\n\tCtrl = 5,\n\tAlt = 6,\n\tPauseBreak = 7,\n\tCapsLock = 8,\n\tEscape = 9,\n\tSpace = 10,\n\tPageUp = 11,\n\tPageDown = 12,\n\tEnd = 13,\n\tHome = 14,\n\tLeftArrow = 15,\n\tUpArrow = 16,\n\tRightArrow = 17,\n\tDownArrow = 18,\n\tInsert = 19,\n\tDelete = 20,\n\tKEY_0 = 21,\n\tKEY_1 = 22,\n\tKEY_2 = 23,\n\tKEY_3 = 24,\n\tKEY_4 = 25,\n\tKEY_5 = 26,\n\tKEY_6 = 27,\n\tKEY_7 = 28,\n\tKEY_8 = 29,\n\tKEY_9 = 30,\n\tKEY_A = 31,\n\tKEY_B = 32,\n\tKEY_C = 33,\n\tKEY_D = 34,\n\tKEY_E = 35,\n\tKEY_F = 36,\n\tKEY_G = 37,\n\tKEY_H = 38,\n\tKEY_I = 39,\n\tKEY_J = 40,\n\tKEY_K = 41,\n\tKEY_L = 42,\n\tKEY_M = 43,\n\tKEY_N = 44,\n\tKEY_O = 45,\n\tKEY_P = 46,\n\tKEY_Q = 47,\n\tKEY_R = 48,\n\tKEY_S = 49,\n\tKEY_T = 50,\n\tKEY_U = 51,\n\tKEY_V = 52,\n\tKEY_W = 53,\n\tKEY_X = 54,\n\tKEY_Y = 55,\n\tKEY_Z = 56,\n\tMeta = 57,\n\tContextMenu = 58,\n\tF1 = 59,\n\tF2 = 60,\n\tF3 = 61,\n\tF4 = 62,\n\tF5 = 63,\n\tF6 = 64,\n\tF7 = 65,\n\tF8 = 66,\n\tF9 = 67,\n\tF10 = 68,\n\tF11 = 69,\n\tF12 = 70,\n\tF13 = 71,\n\tF14 = 72,\n\tF15 = 73,\n\tF16 = 74,\n\tF17 = 75,\n\tF18 = 76,\n\tF19 = 77,\n\tNumLock = 78,\n\tScrollLock = 79,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON = 80,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL = 81,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA = 82,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS = 83,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT = 84,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH = 85,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK = 86,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET = 87,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH = 88,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET = 89,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE = 90,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8 = 91,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tOEM_102 = 92,\n\tNUMPAD_0 = 93,\n\tNUMPAD_1 = 94,\n\tNUMPAD_2 = 95,\n\tNUMPAD_3 = 96,\n\tNUMPAD_4 = 97,\n\tNUMPAD_5 = 98,\n\tNUMPAD_6 = 99,\n\tNUMPAD_7 = 100,\n\tNUMPAD_8 = 101,\n\tNUMPAD_9 = 102,\n\tNUMPAD_MULTIPLY = 103,\n\tNUMPAD_ADD = 104,\n\tNUMPAD_SEPARATOR = 105,\n\tNUMPAD_SUBTRACT = 106,\n\tNUMPAD_DECIMAL = 107,\n\tNUMPAD_DIVIDE = 108,\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION = 109,\n\tABNT_C1 = 110,\n\tABNT_C2 = 111,\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE = 112\n}\n\nexport enum MarkerSeverity {\n\tHint = 1,\n\tInfo = 2,\n\tWarning = 4,\n\tError = 8\n}\n\nexport enum MarkerTag {\n\tUnnecessary = 1,\n\tDeprecated = 2\n}\n\n/**\n * Position in the minimap to render the decoration.\n */\nexport enum MinimapPosition {\n\tInline = 1,\n\tGutter = 2\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN = 0,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA = 1,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN = 2,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS = 3,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS = 4,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE = 5,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT = 6,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY = 7,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE = 8,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET = 9,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER = 10,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR = 11,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET = 12,\n\t/**\n\t * Mouse is outside of the editor.\n\t */\n\tOUTSIDE_EDITOR = 13\n}\n\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport enum OverlayWidgetPositionPreference {\n\t/**\n\t * Position the overlay widget in the top right corner\n\t */\n\tTOP_RIGHT_CORNER = 0,\n\t/**\n\t * Position the overlay widget in the bottom right corner\n\t */\n\tBOTTOM_RIGHT_CORNER = 1,\n\t/**\n\t * Position the overlay widget in the top center\n\t */\n\tTOP_CENTER = 2\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\nexport enum RenderLineNumbersType {\n\tOff = 0,\n\tOn = 1,\n\tRelative = 2,\n\tInterval = 3,\n\tCustom = 4\n}\n\nexport enum RenderMinimap {\n\tNone = 0,\n\tText = 1,\n\tBlocks = 2\n}\n\nexport enum ScrollType {\n\tSmooth = 0,\n\tImmediate = 1\n}\n\nexport enum ScrollbarVisibility {\n\tAuto = 1,\n\tHidden = 2,\n\tVisible = 3\n}\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR = 0,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL = 1\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3\n}\n\n/**\n * A symbol kind.\n */\nexport enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport enum SymbolTag {\n\tDeprecated = 1\n}\n\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorBlinkingStyle {\n\t/**\n\t * Hidden\n\t */\n\tHidden = 0,\n\t/**\n\t * Blinking\n\t */\n\tBlink = 1,\n\t/**\n\t * Blinking with smooth fading\n\t */\n\tSmooth = 2,\n\t/**\n\t * Blinking with prolonged filled state and smooth fading\n\t */\n\tPhase = 3,\n\t/**\n\t * Expand collapse animation on the y axis\n\t */\n\tExpand = 4,\n\t/**\n\t * No-Blinking\n\t */\n\tSolid = 5\n}\n\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n\t/**\n\t * As a vertical line (sitting between two characters).\n\t */\n\tLine = 1,\n\t/**\n\t * As a block (sitting on top of a character).\n\t */\n\tBlock = 2,\n\t/**\n\t * As a horizontal line (sitting under a character).\n\t */\n\tUnderline = 3,\n\t/**\n\t * As a thin vertical line (sitting between two characters).\n\t */\n\tLineThin = 4,\n\t/**\n\t * As an outlined block (sitting on top of a character).\n\t */\n\tBlockOutline = 5,\n\t/**\n\t * As a thin horizontal line (sitting under a character).\n\t */\n\tUnderlineThin = 6\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3\n}\n\n/**\n * Describes how to indent wrapped lines.\n */\nexport enum WrappingIndent {\n\t/**\n\t * No indentation => wrapped lines begin at column 1.\n\t */\n\tNone = 0,\n\t/**\n\t * Same => wrapped lines get the same indentation as the parent.\n\t */\n\tSame = 1,\n\t/**\n\t * Indent => wrapped lines get +1 indentation toward the parent.\n\t */\n\tIndent = 2,\n\t/**\n\t * DeepIndent => wrapped lines get +2 indentation toward the parent.\n\t */\n\tDeepIndent = 3\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/editor/common/standalone/promise-polyfill/polyfill';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { KeyChord, KeyMod as ConstKeyMod } from 'vs/base/common/keyCodes';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { Token } from 'vs/editor/common/core/token';\nimport * as standaloneEnums from 'vs/editor/common/standalone/standaloneEnums';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint32 } from 'vs/base/common/uint';\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void;\n\n\tindex: number;\n\tremainder: number;\n\n\tconstructor(index: number, remainder: number) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic changeValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcnt = toUint32(cnt);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet maxCnt = oldValues.length - startIndex;\n\t\tif (cnt >= maxCnt) {\n\t\t\tcnt = maxCnt;\n\t\t}\n\n\t\tif (cnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - cnt);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getAccumulatedValue(index);\n\t}\n\n\tprivate _getAccumulatedValue(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalValue();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n\t}\n}\n\nexport class PrefixSumComputerWithCache {\n\n\tprivate readonly _actual: PrefixSumComputer;\n\tprivate _cacheAccumulatedValueStart: number = 0;\n\tprivate _cache: PrefixSumIndexOfResult[] | null = null;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis._actual = new PrefixSumComputer(values);\n\t\tthis._bustCache();\n\t}\n\n\tprivate _bustCache(): void {\n\t\tthis._cacheAccumulatedValueStart = 0;\n\t\tthis._cache = null;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): void {\n\t\tif (this._actual.insertValues(insertIndex, insertValues)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic changeValue(index: number, value: number): void {\n\t\tif (this._actual.changeValue(index, value)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex: number, cnt: number): void {\n\t\tif (this._actual.removeValues(startIndex, cnt)) {\n\t\t\tthis._bustCache();\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\treturn this._actual.getTotalValue();\n\t}\n\n\tpublic getAccumulatedValue(index: number): number {\n\t\treturn this._actual.getAccumulatedValue(index);\n\t}\n\n\tpublic getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n\t\taccumulatedValue = Math.floor(accumulatedValue); //@perf\n\n\t\tif (this._cache !== null) {\n\t\t\tlet cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n\t\t\tif (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n\t\t\t\t// Cache hit!\n\t\t\t\treturn this._cache[cacheIndex];\n\t\t\t}\n\t\t}\n\n\t\t// Cache miss!\n\t\treturn this._actual.getIndexOf(accumulatedValue);\n\t}\n\n\t/**\n\t * Gives a hint that a lot of requests are about to come in for these accumulated values.\n\t */\n\tpublic warmUpCache(accumulatedValueStart: number, accumulatedValueEnd: number): void {\n\t\tlet newCache: PrefixSumIndexOfResult[] = [];\n\t\tfor (let accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n\t\t\tnewCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n\t\t}\n\t\tthis._cache = newCache;\n\t\tthis._cacheAccumulatedValueStart = accumulatedValueStart;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { IModelContentChange } from 'vs/editor/common/model/textModelEvents';\nimport { PrefixSumComputer } from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n}\n\nexport class MirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\treturn this._lines.join(this._eol);\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mergeSort } from 'vs/base/common/arrays';\nimport { stringDiff } from 'vs/base/common/diff/diff';\nimport { FIN, Iterator, IteratorResult } from 'vs/base/common/iterator';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { DiffComputer } from 'vs/editor/common/diff/diffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { EndOfLineSequence, IWordAtPosition } from 'vs/editor/common/model';\nimport { IModelChangedEvent, MirrorTextModel as BaseMirrorModel } from 'vs/editor/common/model/mirrorTextModel';\nimport { ensureValidWordDefinition, getWordAtText } from 'vs/editor/common/model/wordHelper';\nimport { IInplaceReplaceSupportResult, ILink, TextEdit } from 'vs/editor/common/modes';\nimport { ILinkComputerTarget, computeLinks } from 'vs/editor/common/modes/linkComputer';\nimport { BasicInplaceReplace } from 'vs/editor/common/modes/supports/inplaceReplaceSupport';\nimport { IDiffComputationResult } from 'vs/editor/common/services/editorWorkerService';\nimport { createMonacoBaseAPI } from 'vs/editor/common/standalone/standaloneBase';\nimport * as types from 'vs/base/common/types';\nimport { EditorWorkerHost } from 'vs/editor/common/services/editorWorkerServiceImpl';\n\nexport interface IMirrorModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext<H = undefined> {\n\t/**\n\t * A proxy to the main thread host object.\n\t */\n\thost: H;\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * @internal\n */\nexport interface IRawModelData {\n\turl: string;\n\tversionId: number;\n\tlines: string[];\n\tEOL: string;\n}\n\n/**\n * @internal\n */\nexport interface ICommonModel extends ILinkComputerTarget, IMirrorModel {\n\turi: URI;\n\tversion: number;\n\teol: string;\n\tgetValue(): string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\tcreateWordIterator(wordDefinition: RegExp): Iterator<string>;\n\tgetWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\ninterface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nclass MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tlet wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition {\n\t\tconst wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic createWordIterator(wordDefinition: RegExp): Iterator<string> {\n\t\tlet obj: { done: false; value: string; };\n\t\tlet lineNumber = 0;\n\t\tlet lineText: string;\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\t\tlet next = (): IteratorResult<string> => {\n\n\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\twordRangesIdx += 1;\n\t\t\t\tif (!obj) {\n\t\t\t\t\tobj = { done: false, value: value };\n\t\t\t\t} else {\n\t\t\t\t\tobj.value = value;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\n\t\t\t} else if (lineNumber >= this._lines.length) {\n\t\t\t\treturn FIN;\n\n\t\t\t} else {\n\t\t\t\tlineText = this._lines[lineNumber];\n\t\t\t\twordRanges = this._wordenize(lineText, wordDefinition);\n\t\t\t\twordRangesIdx = 0;\n\t\t\t\tlineNumber += 1;\n\t\t\t\treturn next();\n\t\t\t}\n\t\t};\n\t\treturn { next };\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tlet content = this._lines[lineNumber - 1];\n\t\tlet ranges = this._wordenize(content, wordDefinition);\n\t\tlet words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tlet lineEnding = this._eol;\n\t\tlet startLineIndex = range.startLineNumber - 1;\n\t\tlet endLineIndex = range.endLineNumber - 1;\n\t\tlet resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tlet out = this._lineStarts!.getIndexOf(offset);\n\t\tlet lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tlet maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IForeignModuleFactory {\n\t(ctx: IWorkerContext, createData: any): any;\n}\n\ndeclare var require: any;\n\n/**\n * @internal\n */\nexport class EditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate readonly _host: EditorWorkerHost;\n\tprivate _models: { [uri: string]: MirrorModel; };\n\tprivate readonly _foreignModuleFactory: IForeignModuleFactory | null;\n\tprivate _foreignModule: any;\n\n\tconstructor(host: EditorWorkerHost, foreignModuleFactory: IForeignModuleFactory | null) {\n\t\tthis._host = host;\n\t\tthis._models = Object.create(null);\n\t\tthis._foreignModuleFactory = foreignModuleFactory;\n\t\tthis._foreignModule = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel {\n\t\treturn this._models[uri];\n\t}\n\n\tprivate _getModels(): ICommonModel[] {\n\t\tlet all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\tpublic acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tlet model = this._models[strURL];\n\t\tmodel.onEvents(e);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic async computeDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean, maxComputationTime: number): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst originalLines = original.getLinesContent();\n\t\tconst modifiedLines = modified.getLinesContent();\n\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: true,\n\t\t\tshouldPostProcessCharChanges: true,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true,\n\t\t\tmaxComputationTime: maxComputationTime\n\t\t});\n\n\t\tconst diffResult = diffComputer.computeDiff();\n\t\tconst identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n\t\treturn {\n\t\t\tquitEarly: diffResult.quitEarly,\n\t\t\tidentical: identical,\n\t\t\tchanges: diffResult.changes\n\t\t};\n\t}\n\n\tprivate _modelsAreIdentical(original: ICommonModel, modified: ICommonModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic async computeDirtyDiff(originalUrl: string, modifiedUrl: string, ignoreTrimWhitespace: boolean): Promise<editorCommon.IChange[] | null> {\n\t\tlet original = this._getModel(originalUrl);\n\t\tlet modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet originalLines = original.getLinesContent();\n\t\tlet modifiedLines = modified.getLinesContent();\n\t\tlet diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldComputeCharChanges: false,\n\t\t\tshouldPostProcessCharChanges: false,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldMakePrettyDiff: true,\n\t\t\tmaxComputationTime: 1000\n\t\t});\n\t\treturn diffComputer.computeDiff().changes;\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 100000;\n\n\tpublic async computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[]): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = mergeSort(edits, (a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tlet aRng = a.range ? 0 : 1;\n\t\t\tlet bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, false);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic async computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn computeLinks(model);\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic async textualSuggest(modelUrl: string, position: IPosition, wordDef: string, wordDefFlags: string): Promise<string[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\n\t\tconst words: string[] = [];\n\t\tconst seen = new Set<string>();\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tconst wordAt = model.getWordAtPosition(position, wordDefRegExp);\n\t\tif (wordAt) {\n\t\t\tseen.add(model.getValueInRange(wordAt));\n\t\t}\n\n\t\tfor (\n\t\t\tlet iter = model.createWordIterator(wordDefRegExp), e = iter.next();\n\t\t\t!e.done && seen.size <= EditorSimpleWorker._suggestionsLimit;\n\t\t\te = iter.next()\n\t\t) {\n\t\t\tconst word = e.value;\n\t\t\tif (seen.has(word)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tseen.add(word);\n\t\t\tif (!isNaN(Number(word))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\twords.push(word);\n\t\t}\n\t\treturn words;\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tpublic async computeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Object.create(null);\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tlet words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\tpublic async navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tlet model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tlet selectionText = model.getValueInRange(range);\n\n\t\tlet wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn null;\n\t\t}\n\t\tlet word = model.getValueInRange(wordRange);\n\t\tlet result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn result;\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\tpublic loadForeignModule(moduleId: string, createData: any, foreignHostMethods: string[]): Promise<string[]> {\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._host.fhr(method, args);\n\t\t};\n\n\t\tconst foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n\n\t\tlet ctx: IWorkerContext<any> = {\n\t\t\thost: foreignHost,\n\t\t\tgetMirrorModels: (): IMirrorModel[] => {\n\t\t\t\treturn this._getModels();\n\t\t\t}\n\t\t};\n\n\t\tif (this._foreignModuleFactory) {\n\t\t\tthis._foreignModule = this._foreignModuleFactory(ctx, createData);\n\t\t\t// static foreing module\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._foreignModule));\n\t\t}\n\t\t// ESM-comment-begin\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n\t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n\n\t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n\n\t\t\t}, reject);\n\t\t});\n\t\t// ESM-comment-end\n\n\t\t// ESM-uncomment-begin\n\t\t// return Promise.reject(new Error(`Unexpected usage`));\n\t\t// ESM-uncomment-end\n\t}\n\n\t// foreign method request\n\tpublic fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: EditorWorkerHost): IRequestHandler {\n\treturn new EditorSimpleWorker(host, null);\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n(function () {\n\n\tlet MonacoEnvironment = (<any>self).MonacoEnvironment;\n\tlet monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n\n\tif (typeof (<any>self).define !== 'function' || !(<any>self).define.amd) {\n\t\timportScripts(monacoBaseUrl + 'vs/loader.js');\n\t}\n\n\trequire.config({\n\t\tbaseUrl: monacoBaseUrl,\n\t\tcatchError: true\n\t});\n\n\tlet loadCode = function (moduleId: string) {\n\t\trequire([moduleId], function (ws) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tlet messageHandler = ws.create((msg: any, transfer?: Transferable[]) => {\n\t\t\t\t\t(<any>self).postMessage(msg, transfer);\n\t\t\t\t}, null);\n\n\t\t\t\tself.onmessage = (e: MessageEvent) => messageHandler.onmessage(e.data);\n\t\t\t\twhile (beforeReadyMessages.length > 0) {\n\t\t\t\t\tself.onmessage(beforeReadyMessages.shift()!);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t});\n\t};\n\n\tlet isFirstMessage = true;\n\tlet beforeReadyMessages: MessageEvent[] = [];\n\tself.onmessage = (message: MessageEvent) => {\n\t\tif (!isFirstMessage) {\n\t\t\tbeforeReadyMessages.push(message);\n\t\t\treturn;\n\t\t}\n\n\t\tisFirstMessage = false;\n\t\tloadCode(message.data);\n\t};\n})();\n"]}